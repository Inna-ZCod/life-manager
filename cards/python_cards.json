[
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx = 5\nif x > 3:\n    print('Yes')\nelse:\n    print('No')",
    "explanation": "–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è –≤–º–µ—Å—Ç–µ ü´∂ –£ –Ω–∞—Å –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è x = 5. –í —É—Å–ª–æ–≤–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –±–æ–ª—å—à–µ –ª–∏ –æ–Ω–∞ 3 ‚Äî –¥–∞, —ç—Ç–æ –≤–µ—Ä–Ω–æ. –ó–Ω–∞—á–∏—Ç, –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –±–ª–æ–∫ if, –∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è 'Yes'. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ –ø–æ–≥–æ–¥–∞ —Ö–æ—Ä–æ—à–∞—è ‚Äî –∏–¥—ë–º –≥—É–ª—è—Ç—å¬ª. –ü–æ–≥–æ–¥–∞ —Ö–æ—Ä–æ—à–∞—è ‚Üí –∏–¥—ë–º!",
    "options": [
      {
        "text": "'Yes'",
        "is_correct": true
      },
      {
        "text": "'No'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "–ù–∏—á–µ–≥–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º?",
    "explanation": "–¶–µ–ª—ã–µ —á–∏—Å–ª–∞ (`int`) ‚Äî —ç—Ç–æ —á–∏—Å–ª–∞ –±–µ–∑ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, 42 –∏–ª–∏ -7. –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—Å–≤–æ–π –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: `x = 10`. üéØ –í–∞–∂–Ω–æ: –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∫–∞–≤—ã—á–∫–∏, –∏–Ω–∞—á–µ —ç—Ç–æ —Å—Ç–∞–Ω–µ—Ç —Å—Ç—Ä–æ–∫–æ–π!",
    "options": [
      {
        "text": "x = 10",
        "is_correct": true
      },
      {
        "text": "x = '10'",
        "is_correct": false
      },
      {
        "text": "x = 10.0",
        "is_correct": false
      },
      {
        "text": "x = True",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø —É `x = 'Hello'`?",
    "explanation": "–°—Ç—Ä–æ–∫–∏ (`str`) ‚Äî —ç—Ç–æ —Ç–µ–∫—Å—Ç –≤ –∫–∞–≤—ã—á–∫–∞—Ö (–æ–¥–∏–Ω–∞—Ä–Ω—ã—Ö –∏–ª–∏ –¥–≤–æ–π–Ω—ã—Ö). –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º: `name = '–ê–Ω–Ω–∞'`, `message = \"–ü—Ä–∏–≤–µ—Ç\"`. üìú –ü–æ–º–Ω–∏: –¥–∞–∂–µ —á–∏—Å–ª–æ –≤ –∫–∞–≤—ã—á–∫–∞—Ö ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞!",
    "options": [
      {
        "text": "str",
        "is_correct": true
      },
      {
        "text": "int",
        "is_correct": false
      },
      {
        "text": "list",
        "is_correct": false
      },
      {
        "text": "bool",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç `print(type(3.14))`?",
    "explanation": "`type()` –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö. –ß–∏—Å–ª–∞ —Å —Ç–æ—á–∫–æ–π (–¥–∞–∂–µ –µ—Å–ª–∏ `.0`) ‚Äî —ç—Ç–æ `float`. –ù–∞–ø—Ä–∏–º–µ—Ä, `5.0`, `-0.001`. üßê –í–∞–∂–Ω–æ: `3` ‚Äî —ç—Ç–æ `int`, –∞ `3.0` ‚Äî —É–∂–µ `float`!",
    "options": [
      {
        "text": "<class 'float'>",
        "is_correct": true
      },
      {
        "text": "<class 'int'>",
        "is_correct": false
      },
      {
        "text": "<class 'str'>",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É '5' –≤ —á–∏—Å–ª–æ?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `int()` –¥–ª—è —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –∏–ª–∏ `float()` –¥–ª—è –¥—Ä–æ–±–Ω—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä: `int('5') ‚Üí 5`, `float('3.14') ‚Üí 3.14`. ‚ö†Ô∏è –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω: `int('5.5')` –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É!",
    "options": [
      {
        "text": "int('5')",
        "is_correct": true
      },
      {
        "text": "str(5)",
        "is_correct": false
      },
      {
        "text": "float(5)",
        "is_correct": false
      },
      {
        "text": "'5' * 1",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤–µ—Ä–Ω—ë—Ç `bool('False')`?",
    "explanation": "–õ—é–±–∞—è –Ω–µ–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ Python –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ `True`, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç 'False'! üé≠ –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ (`''`) –¥–∞—Å—Ç `False`. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ: `bool(0) ‚Üí False`, `bool(1) ‚Üí True`.",
    "options": [
      {
        "text": "True",
        "is_correct": true
      },
      {
        "text": "False",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `type(x)` –∏–ª–∏ `isinstance(x, —Ç–∏–ø)`. –ù–∞–ø—Ä–∏–º–µ—Ä: `type(10) ‚Üí <class 'int'>`, `isinstance('hi', str) ‚Üí True`. üîç `isinstance()` —É–¥–æ–±–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.",
    "options": [
      {
        "text": "type(x)",
        "is_correct": true
      },
      {
        "text": "x.type()",
        "is_correct": false
      },
      {
        "text": "check_type(x)",
        "is_correct": false
      },
      {
        "text": "x == type",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ None?",
    "explanation": "`None` ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø, –æ–∑–Ω–∞—á–∞—é—â–∏–π ¬´–Ω–∏—á–µ–≥–æ¬ª. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è. üåå –ù–∞–ø—Ä–∏–º–µ—Ä, —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ `return` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `None`. –≠—Ç–æ –Ω–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ `False` –∏–ª–∏ `0`!",
    "options": [
      {
        "text": "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è",
        "is_correct": true
      },
      {
        "text": "–ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞",
        "is_correct": false
      },
      {
        "text": "–ß–∏—Å–ª–æ 0",
        "is_correct": false
      },
      {
        "text": "–õ–æ–∂—å (False)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫?",
    "explanation": "–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–∫: `lst = []` –∏–ª–∏ `lst = list()`. üì¶ –°–ø–∏—Å–∫–∏ –∏–∑–º–µ–Ω—è–µ–º—ã (mutable) –∏ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä: `[1, 'a', True]`.",
    "options": [
      {
        "text": "lst = []",
        "is_correct": true
      },
      {
        "text": "lst = {}",
        "is_correct": false
      },
      {
        "text": "lst = ()",
        "is_correct": false
      },
      {
        "text": "lst = None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç `print(2 + '2')`?",
    "explanation": "–û—à–∏–±–∫–∞! üö® Python –Ω–µ –º–æ–∂–µ—Ç —Å–ª–æ–∂–∏—Ç—å —á–∏—Å–ª–æ (`int`) –∏ —Å—Ç—Ä–æ–∫—É (`str`). –ù—É–∂–Ω–æ —è–≤–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: `2 + int('2') ‚Üí 4` –∏–ª–∏ `str(2) + '2' ‚Üí '22'`. –≠—Ç–æ —á–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞!",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": true
      },
      {
        "text": "4",
        "is_correct": false
      },
      {
        "text": "'22'",
        "is_correct": false
      },
      {
        "text": "'4'",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–∑–Ω–∞—Ç—å –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏?",
    "explanation": "–§—É–Ω–∫—Ü–∏—è `len()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ (–∏ –¥—Ä—É–≥–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π). –ù–∞–ø—Ä–∏–º–µ—Ä: `len('–ü—Ä–∏–≤–µ—Ç') ‚Üí 6` (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞ 1 —Å–∏–º–≤–æ–ª). üìè –†–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤: `len([1, 2]) ‚Üí 2`.",
    "options": [
      {
        "text": "len(s)",
        "is_correct": true
      },
      {
        "text": "s.length()",
        "is_correct": false
      },
      {
        "text": "length(s)",
        "is_correct": false
      },
      {
        "text": "s.count()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 256\ny = 256\nprint(x is y)",
    "explanation": "`True`! ü§Ø Python –∫—ç—à–∏—Ä—É–µ—Ç –º–∞–ª–µ–Ω—å–∫–∏–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ (–æ—Ç -5 –¥–æ 256), –ø–æ—ç—Ç–æ–º—É `x` –∏ `y` —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç. –ù–æ –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω: –¥–ª—è —á–∏—Å–µ–ª –≤–Ω–µ —ç—Ç–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ `is` –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å `False` (–Ω–∞–ø—Ä–∏–º–µ—Ä, `257 is 257` ‚Üí `False` –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö).",
    "options": [
      {
        "text": "True",
        "is_correct": true
      },
      {
        "text": "False",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "256",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è ‚Äî —Å—Ç—Ä–æ–∫–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `isinstance(x, str)`. –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ, —á–µ–º `type(x) == str`, –ø–æ—Ç–æ–º—É —á—Ç–æ —É—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: `isinstance('hello', str) ‚Üí True`. üîç `type()` –∂–µ —Å—Ç—Ä–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–∏–ø –±–µ–∑ —É—á—ë—Ç–∞ –ø–æ–¥–∫–ª–∞—Å—Å–æ–≤.",
    "options": [
      {
        "text": "isinstance(x, str)",
        "is_correct": true
      },
      {
        "text": "x.is_str()",
        "is_correct": false
      },
      {
        "text": "type(x) is str",
        "is_correct": false
      },
      {
        "text": "x == str",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\na = [1, 2]\nb = a\na = a + [3]\nprint(b)",
    "explanation": "`[1, 2]`! –û–ø–µ—Ä–∞—Ç–æ—Ä `+` —Å–æ–∑–¥–∞—ë—Ç **–Ω–æ–≤—ã–π** —Å–ø–∏—Å–æ–∫, –ø–æ—ç—Ç–æ–º—É `a` —Ç–µ–ø–µ—Ä—å —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç, –∞ `b` –æ—Å—Ç–∞–ª—Å—è –ø—Ä–µ–∂–Ω–∏–º. –ï—Å–ª–∏ –±—ã –±—ã–ª–æ `a.append(3)`, —Ç–æ–≥–¥–∞ `b` —Ç–æ–∂–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –±—ã! üîÑ –í–∞–∂–Ω–æ —Ä–∞–∑–ª–∏—á–∞—Ç—å `+` –∏ –º–µ—Ç–æ–¥—ã –∏–∑–º–µ–Ω—è—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.",
    "options": [
      {
        "text": "[1, 2]",
        "is_correct": true
      },
      {
        "text": "[1, 2, 3]",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ—Ä—Ç–µ–∂ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞?",
    "explanation": "–î–æ–±–∞–≤—å –∑–∞–ø—è—Ç—É—é: `t = (1,)`. ü§π‚Äç‚ôÇÔ∏è –ë–µ–∑ –∑–∞–ø—è—Ç–æ–π `(1)` ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ –≤ —Å–∫–æ–±–∫–∞—Ö, –∞ –Ω–µ –∫–æ—Ä—Ç–µ–∂! –ö–æ—Ä—Ç–µ–∂–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã, –ø–æ—ç—Ç–æ–º—É —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞–∫ –∫–ª—é—á–∏ –≤ —Å–ª–æ–≤–∞—Ä—è—Ö.",
    "options": [
      {
        "text": "t = (1,)",
        "is_correct": true
      },
      {
        "text": "t = (1)",
        "is_correct": false
      },
      {
        "text": "t = [1]",
        "is_correct": false
      },
      {
        "text": "t = 1,",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 'hello'\nprint(x[0] = 'H')",
    "explanation": "–û—à–∏–±–∫–∞! üö´ –°—Ç—Ä–æ–∫–∏ –≤ Python **–Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã** (immutable). –ù–µ–ª—å–∑—è –ø–æ–º–µ–Ω—è—Ç—å —Å–∏–º–≤–æ–ª –ø–æ –∏–Ω–¥–µ–∫—Å—É. –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É: `x = 'H' + x[1:]`. –°–ø–∏—Å–∫–∏ –∂–µ –∏–∑–º–µ–Ω—è–µ–º—ã: `lst[0] = 1` —Ä–∞–±–æ—Ç–∞–µ—Ç.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": true
      },
      {
        "text": "Hello",
        "is_correct": false
      },
      {
        "text": "hello",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å ASCII-–∫–æ–¥ —Å–∏–º–≤–æ–ª–∞?",
    "explanation": "–§—É–Ω–∫—Ü–∏—è `ord()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞: `ord('A') ‚Üí 65`, `ord('a') ‚Üí 97`. üî§ –û–±—Ä–∞—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è ‚Äî `chr()`: `chr(65) ‚Üí 'A'`. –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —à–∏—Ñ—Ä–æ–≤ –∏–ª–∏ —Ä–∞–±–æ—Ç—ã —Å –±–∞–π—Ç–∞–º–∏!",
    "options": [
      {
        "text": "ord(c)",
        "is_correct": true
      },
      {
        "text": "chr(c)",
        "is_correct": false
      },
      {
        "text": "c.code()",
        "is_correct": false
      },
      {
        "text": "ascii(c)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 0.1 + 0.2\nprint(x == 0.3)",
    "explanation": "`False`! ü§Ø –ò–∑-–∑–∞ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ float-–∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏ `0.1 + 0.2` –¥–∞—ë—Ç `0.30000000000000004`, –∞ –Ω–µ `0.3`. –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è float –∏—Å–ø–æ–ª—å–∑—É–π `abs(x - 0.3) < 1e-9`. –í–∞–∂–Ω—ã–π –Ω—é–∞–Ω—Å –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö!",
    "options": [
      {
        "text": "False",
        "is_correct": true
      },
      {
        "text": "True",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ (set)?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `{}` —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–ª–∏ `set()`: `s = {1, 2}` –∏–ª–∏ `s = set([1, 2])`. üß© –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ö—Ä–∞–Ω—è—Ç **—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ** —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤—Ö–æ–∂–¥–µ–Ω–∏—è: `1 in s ‚Üí True`.",
    "options": [
      {
        "text": "s = {1, 2}",
        "is_correct": true
      },
      {
        "text": "s = [1, 2]",
        "is_correct": false
      },
      {
        "text": "s = (1, 2)",
        "is_correct": false
      },
      {
        "text": "s = set(1, 2)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nd = {'a': 1}\nd.update(b=2)\nprint(d)",
    "explanation": "`{'a': 1, 'b': 2}`! üõ†Ô∏è –ú–µ—Ç–æ–¥ `update()` –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–ª—é—á–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—å (`update({'b': 2})`), —Ç–∞–∫ –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã (`update(b=2)`). –£–¥–æ–±–Ω–æ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä–µ–π!",
    "options": [
      {
        "text": "{'a': 1, 'b': 2}",
        "is_correct": true
      },
      {
        "text": "{'a': 1}",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "{'b': 2}",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é —Å–ø–∏—Å–∫–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `copy.deepcopy()`: `import copy; new_list = copy.deepcopy(old_list)`. üì¶ –≠—Ç–æ –Ω—É–∂–Ω–æ, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω—è–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥—Ä—É–≥–∏–µ —Å–ø–∏—Å–∫–∏). –û–±—ã—á–Ω—ã–π `copy()` –∏–ª–∏ —Å—Ä–µ–∑ (`list[:]`) —Å–æ–∑–¥–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—É—é –∫–æ–ø–∏—é!",
    "options": [
      {
        "text": "copy.deepcopy()",
        "is_correct": true
      },
      {
        "text": "list.copy()",
        "is_correct": false
      },
      {
        "text": "list[:]",
        "is_correct": false
      },
      {
        "text": "list()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = b'hello'\nprint(type(x))",
    "explanation": "`<class 'bytes'>`! üñ•Ô∏è –ë–∞–π—Ç–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ (`bytes`) –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –°–æ–∑–¥–∞—é—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º `b`. –í–∞–∂–Ω–æ: –±–∞–π—Ç—ã –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã, –∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π –æ–±—ã—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ (`str`).",
    "options": [
      {
        "text": "<class 'bytes'>",
        "is_correct": true
      },
      {
        "text": "<class 'str'>",
        "is_correct": false
      },
      {
        "text": "<class 'bytearray'>",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —á–∏—Å–ª–æ –≤ –¥–≤–æ–∏—á–Ω—É—é —Å—Ç—Ä–æ–∫—É?",
    "explanation": "–§—É–Ω–∫—Ü–∏—è `bin()` –≤–µ—Ä–Ω—ë—Ç —Å—Ç—Ä–æ–∫—É —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º `0b`: `bin(5) ‚Üí '0b101'`. üíª –î–ª—è –≤–æ—Å—å–º–µ—Ä–∏—á–Ω–æ–π ‚Äî `oct()`, –¥–ª—è —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–π ‚Äî `hex()`. –£–¥–æ–±–Ω–æ –¥–ª—è –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π!",
    "options": [
      {
        "text": "bin(x)",
        "is_correct": true
      },
      {
        "text": "x.binary()",
        "is_correct": false
      },
      {
        "text": "str(bin(x))",
        "is_correct": false
      },
      {
        "text": "format(x, 'b')",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nprint(f'{10:.3f}')",
    "explanation": "`10.000`! üéØ f-—Å—Ç—Ä–æ–∫–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–≤–æ–¥. –ó–¥–µ—Å—å `:.3f` –æ–∑–Ω–∞—á–∞–µ—Ç ¬´3 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏ –¥–ª—è float¬ª. –ú–æ–∂–Ω–æ –∏ —Ç–∞–∫: `f'{10:05d}' ‚Üí '00010'` (–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω—É–ª—è–º–∏ –¥–æ 5 —Å–∏–º–≤–æ–ª–æ–≤).",
    "options": [
      {
        "text": "10.000",
        "is_correct": true
      },
      {
        "text": "10.00",
        "is_correct": false
      },
      {
        "text": "10.333",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∏–∑–º–µ–Ω—è–µ–º—É—é –±–∞–π—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `bytearray`: `b = bytearray(b'hello')`. üîß –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç `bytes`, `bytearray` –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å: `b[0] = 72` (–∫–æ–¥ 'H'). –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º–∏!",
    "options": [
      {
        "text": "bytearray()",
        "is_correct": true
      },
      {
        "text": "bytes()",
        "is_correct": false
      },
      {
        "text": "memoryview()",
        "is_correct": false
      },
      {
        "text": "mutablebytes()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = [1, 2]\ny = x[:]\ny[0] = 100\nprint(x)",
    "explanation": "`[1, 2]`! üéØ –°—Ä–µ–∑ `[:]` —Å–æ–∑–¥–∞—ë—Ç **–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—É—é –∫–æ–ø–∏—é** —Å–ø–∏—Å–∫–∞. –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ `y` –Ω–µ –∑–∞—Ç—Ä–æ–Ω—É—Ç `x`. –ù–æ –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω: –µ—Å–ª–∏ –±—ã —ç–ª–µ–º–µ–Ω—Ç—ã –±—ã–ª–∏ –∏–∑–º–µ–Ω—è–µ–º—ã–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏), –∫–æ–ø–∏—è –Ω–µ –±—ã–ª–∞ –±—ã –ø–æ–ª–Ω–æ–π!",
    "options": [
      {
        "text": "[1, 2]",
        "is_correct": true
      },
      {
        "text": "[100, 2]",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `not lst` –∏–ª–∏ `len(lst) == 0`. üßê –ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —á–∏—Ç–∞–µ–º–µ–µ –∏ –±—ã—Å—Ç—Ä–µ–µ: Pythonic way! –ü—Ä–∏–º–µ—Ä: `if not lst: print('–ü—É—Å—Ç')`.",
    "options": [
      {
        "text": "not lst",
        "is_correct": true
      },
      {
        "text": "lst.empty()",
        "is_correct": false
      },
      {
        "text": "lst == []",
        "is_correct": false
      },
      {
        "text": "lst.is_empty()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = {'a': 1}\ny = x\ny['b'] = 2\nprint(x)",
    "explanation": "`{'a': 1, 'b': 2}`! üß≤ –°–ª–æ–≤–∞—Ä–∏ –∏–∑–º–µ–Ω—è–µ–º—ã, –∞ `y = x` —Å–æ–∑–¥–∞—ë—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç. –ß—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å, –∏—Å–ø–æ–ª—å–∑—É–π `y = x.copy()` –∏–ª–∏ `dict(x)`.",
    "options": [
      {
        "text": "{'a': 1, 'b': 2}",
        "is_correct": true
      },
      {
        "text": "{'a': 1}",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –¥–≤–∞ —Å–ª–æ–≤–∞—Ä—è?",
    "explanation": "–í Python 3.9+ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `|`: `d1 | d2`. üìö –í –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö ‚Äî `{**d1, **d2}` –∏–ª–∏ `d1.update(d2)`. –í–∞–∂–Ω–æ: –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –∫–ª—é—á–µ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É –ø—Ä–∞–≤–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è!",
    "options": [
      {
        "text": "d1 | d2 (Python 3.9+)",
        "is_correct": true
      },
      {
        "text": "d1 + d2",
        "is_correct": false
      },
      {
        "text": "d1.merge(d2)",
        "is_correct": false
      },
      {
        "text": "dict.join(d1, d2)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = set('hello')\nprint(x)",
    "explanation": "`{'h', 'e', 'l', 'o'}`! üåü –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ö—Ä–∞–Ω—è—Ç **—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ** —ç–ª–µ–º–µ–Ω—Ç—ã, –ø–æ—ç—Ç–æ–º—É –≤—Ç–æ—Ä–∞—è 'l' –∏—Å—á–µ–∑–ª–∞. –ü–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è. –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: `list(set(lst))`.",
    "options": [
      {
        "text": "{'h', 'e', 'l', 'o'}",
        "is_correct": true
      },
      {
        "text": "['h', 'e', 'l', 'l', 'o']",
        "is_correct": false
      },
      {
        "text": "{'hello'}",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å frozenset?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `frozenset()`: `fs = frozenset([1, 2])`. ‚ùÑÔ∏è `frozenset` ‚Äî —ç—Ç–æ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ. –ï–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –∫–ª—é—á —Å–ª–æ–≤–∞—Ä—è, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ `set`!",
    "options": [
      {
        "text": "frozenset()",
        "is_correct": true
      },
      {
        "text": "set.frozen()",
        "is_correct": false
      },
      {
        "text": "frozen(set)",
        "is_correct": false
      },
      {
        "text": "set(immutable=True)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å —É—Å–ª–æ–≤–∏–µ '–µ—Å–ª–∏ x –±–æ–ª—å—à–µ 5'?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `if x > 5:`. üìå –ù–µ –∑–∞–±—É–¥—å –¥–≤–æ–µ—Ç–æ—á–∏–µ –≤ –∫–æ–Ω—Ü–µ! –ü—Ä–∏–º–µ—Ä:\n\n```python\nif x > 5:\n    print('–ë–æ–ª—å—à–µ 5')\n```",
    "options": [
      {
        "text": "if x > 5:",
        "is_correct": true
      },
      {
        "text": "if (x > 5)",
        "is_correct": false
      },
      {
        "text": "when x > 5:",
        "is_correct": false
      },
      {
        "text": "x > 5 ?",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–ª–æ–∫ `else` –≤ —É—Å–ª–æ–≤–∏–∏?",
    "explanation": "`else` –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ `if` –ª–æ–∂–Ω–æ. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nif x > 5:\n    print('–ë–æ–ª—å—à–µ 5')\nelse:\n    print('5 –∏–ª–∏ –º–µ–Ω—å—à–µ')\n```\nüéØ –í–∞–∂–Ω–æ: `else` –±–µ–∑ `if` –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É!",
    "options": [
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ if=False",
        "is_correct": true
      },
      {
        "text": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤–æ–µ —É—Å–ª–æ–≤–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç if",
        "is_correct": false
      },
      {
        "text": "–ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π –ø–æ–¥—Ä—è–¥?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `elif` (—Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –æ—Ç 'else if'). –ü—Ä–∏–º–µ—Ä:\n\n```python\nif x > 10:\n    print('>10')\nelif x > 5:\n    print('>5')\nelse:\n    print('<=5')\n```\nüîç –£—Å–ª–æ–≤–∏—è –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑!",
    "options": [
      {
        "text": "elif",
        "is_correct": true
      },
      {
        "text": "else if",
        "is_correct": false
      },
      {
        "text": "and",
        "is_correct": false
      },
      {
        "text": "case",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ x –º–µ–∂–¥—É 5 –∏ 10?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `and`: `if 5 < x < 10:` –∏–ª–∏ `if x > 5 and x < 10:`. üß† Python –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è!",
    "options": [
      {
        "text": "if 5 < x < 10:",
        "is_correct": true
      },
      {
        "text": "if 5 > x < 10:",
        "is_correct": false
      },
      {
        "text": "if x in (5, 10):",
        "is_correct": false
      },
      {
        "text": "if 5 <= x <= 10:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª–µ–Ω?",
    "explanation": "–õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `elif` –≤–º–µ—Å—Ç–æ –≥–ª—É–±–æ–∫–æ–π –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏. –ü—Ä–∏–º–µ—Ä –ø–ª–æ—Ö–æ–≥–æ –∫–æ–¥–∞:\n\n```python\nif x > 5:\n    if x < 10:\n        print('5<x<10')\n```\n‚úÖ –õ—É—á—à–µ:\n\n```python\nif 5 < x < 10:\n    print('5<x<10')\n```\nüìå Flat is better than nested!",
    "options": [
      {
        "text": "–ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å",
        "is_correct": true
      },
      {
        "text": "–ß–µ–º –≥–ª—É–±–∂–µ, —Ç–µ–º –ª—É—á—à–µ",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ and/or",
        "is_correct": false
      },
      {
        "text": "–ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = []\nif x:\n    print('Yes')\nelse:\n    print('No')",
    "explanation": "`No`! üé≠ –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ (`[]`), –∫–∞–∫ –∏ `0`, `''`, `None`, `False`, —Å—á–∏—Ç–∞–µ—Ç—Å—è –ª–æ–∂–Ω—ã–º (`falsy`) –≤ —É—Å–ª–æ–≤–∏—è—Ö. –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ falsy-–∑–Ω–∞—á–µ–Ω–∏–π —Å—Ç–æ–∏—Ç –∑–∞–ø–æ–º–Ω–∏—Ç—å!",
    "options": [
      {
        "text": "No",
        "is_correct": true
      },
      {
        "text": "Yes",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 15\nif x % 3 == 0:\n    print('Fizz')\nelif x % 5 == 0:\n    print('Buzz')\nelse:\n    print(x)",
    "explanation": "`Fizz`! üéØ –£—Å–ª–æ–≤–∏—è –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑. 15 –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3, –ø–æ—ç—Ç–æ–º—É `elif` –∏ `else` –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è. –î–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ FizzBuzz –Ω—É–∂–Ω–æ:\n\n```python\nif x % 15 == 0:\n    print('FizzBuzz')\n```",
    "options": [
      {
        "text": "Fizz",
        "is_correct": true
      },
      {
        "text": "Buzz",
        "is_correct": false
      },
      {
        "text": "FizzBuzz",
        "is_correct": false
      },
      {
        "text": "15",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å —ç—Ç–æ —á–µ—Ä–µ–∑ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä?\n\nif x > 5:\n    y = 10\nelse:\n    y = 20",
    "explanation": "`y = 10 if x > 5 else 20`. üßô‚Äç‚ôÇÔ∏è –¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä ‚Äî —ç—Ç–æ –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω–∞—è –∑–∞–º–µ–Ω–∞ `if-else`. –°–∏–Ω—Ç–∞–∫—Å–∏—Å: `–∑–Ω–∞—á–µ–Ω–∏–µ_–µ—Å–ª–∏_True if —É—Å–ª–æ–≤–∏–µ else –∑–Ω–∞—á–µ–Ω–∏–µ_–µ—Å–ª–∏_False`.",
    "options": [
      {
        "text": "y = 10 if x > 5 else 20",
        "is_correct": true
      },
      {
        "text": "y = if x > 5: 10 else: 20",
        "is_correct": false
      },
      {
        "text": "y = (x > 5) ? 10 : 20",
        "is_correct": false
      },
      {
        "text": "y = 10 else 20 if x > 5",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —á–∏—Å–ª–æ —á—ë—Ç–Ω–æ–µ?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è: `if x % 2 == 0:`. üî¢ –ß—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞. –ú–æ–∂–Ω–æ –¥–∞–∂–µ —Ç–∞–∫: `if not x % 2:` (—Ç–∞–∫ –∫–∞–∫ `0` ‚Äî —ç—Ç–æ `falsy`).",
    "options": [
      {
        "text": "if x % 2 == 0:",
        "is_correct": true
      },
      {
        "text": "if x // 2 == 0:",
        "is_correct": false
      },
      {
        "text": "if x / 2 == 0:",
        "is_correct": false
      },
      {
        "text": "if x & 1 == 0:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Å–∏–º–≤–æ–ª ‚Äî –≥–ª–∞—Å–Ω–∞—è –±—É–∫–≤–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `in` —Å –∫–æ—Ä—Ç–µ–∂–µ–º: `if c in ('a', 'e', 'i', 'o', 'u'):`. üé∂ –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: `if c.lower() in 'aeiou'`.",
    "options": [
      {
        "text": "if c in 'aeiou':",
        "is_correct": true
      },
      {
        "text": "if c == 'a' or 'e' or ...:",
        "is_correct": false
      },
      {
        "text": "if c.is_vowel():",
        "is_correct": false
      },
      {
        "text": "if 'a' <= c <= 'u':",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 5\nif x > 0:\n    print('A')\nif x > 3:\n    print('B')\nelse:\n    print('C')",
    "explanation": "`A\\nB`! ‚ö†Ô∏è –ó–¥–µ—Å—å –¥–≤–∞ **–æ—Ç–¥–µ–ª—å–Ω—ã—Ö** —É—Å–ª–æ–≤–∏—è. –ü–µ—Ä–≤–æ–µ `if` –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –≤—Ç–æ—Ä–æ–µ `if-else` ‚Äî –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ. –î–ª—è –∫–∞—Å–∫–∞–¥–∞ –Ω—É–∂–Ω–æ `elif`!",
    "options": [
      {
        "text": "A\nB",
        "is_correct": true
      },
      {
        "text": "A\nC",
        "is_correct": false
      },
      {
        "text": "B",
        "is_correct": false
      },
      {
        "text": "C",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `for item in list:`. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfruits = ['apple', 'banana']\nfor fruit in fruits:\n    print(fruit)\n```\nüîπ `fruit` ‚Äî –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞.",
    "options": [
      {
        "text": "for item in list:",
        "is_correct": true
      },
      {
        "text": "for list in item:",
        "is_correct": false
      },
      {
        "text": "foreach item in list:",
        "is_correct": false
      },
      {
        "text": "while item in list:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Ü–∏–∫–ª –æ—Ç 0 –¥–æ 4?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `range(5)` —Å `for`:\n\n```python\nfor i in range(5):\n    print(i)  # 0, 1, 2, 3, 4\n```\nüìå `range(5)` –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 4 (5 –Ω–µ –≤—Ö–æ–¥–∏—Ç!).",
    "options": [
      {
        "text": "for i in range(5):",
        "is_correct": true
      },
      {
        "text": "for i in 5:",
        "is_correct": false
      },
      {
        "text": "for i <= 4:",
        "is_correct": false
      },
      {
        "text": "while i in range(5):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥, –ø–æ–∫–∞ x < 5?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `while`:\n\n```python\nx = 0\nwhile x < 5:\n    print(x)\n    x += 1\n```\n‚ö†Ô∏è –í–∞–∂–Ω–æ –º–µ–Ω—è—Ç—å `x`, –∏–Ω–∞—á–µ —Ü–∏–∫–ª —Å—Ç–∞–Ω–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º!",
    "options": [
      {
        "text": "while x < 5:",
        "is_correct": true
      },
      {
        "text": "for x < 5:",
        "is_correct": false
      },
      {
        "text": "until x >= 5:",
        "is_correct": false
      },
      {
        "text": "loop while x < 5:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –¥–æ—Å—Ä–æ—á–Ω–æ –≤—ã–π—Ç–∏ –∏–∑ —Ü–∏–∫–ª–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `break`:\n\n```python\nfor i in range(10):\n    if i == 5:\n        break\n    print(i)  # 0, 1, 2, 3, 4\n```\nüö™ `break` –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ü–∏–∫–ª.",
    "options": [
      {
        "text": "break",
        "is_correct": true
      },
      {
        "text": "exit",
        "is_correct": false
      },
      {
        "text": "stop",
        "is_correct": false
      },
      {
        "text": "return",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏—Ç–µ—Ä–∞—Ü–∏—é —Ü–∏–∫–ª–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `continue`:\n\n```python\nfor i in range(5):\n    if i == 2:\n        continue\n    print(i)  # 0, 1, 3, 4\n```\n‚è© `continue` –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞—è –∫–æ–¥ –ø–æ—Å–ª–µ —Å–µ–±—è.",
    "options": [
      {
        "text": "continue",
        "is_correct": true
      },
      {
        "text": "skip",
        "is_correct": false
      },
      {
        "text": "pass",
        "is_correct": false
      },
      {
        "text": "next",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è `else` —É —Ü–∏–∫–ª–∞?",
    "explanation": "–ë–ª–æ–∫ `else` –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∏–ª—Å—è **–±–µ–∑ `break`**:\n\n```python\nfor i in range(3):\n    print(i)\nelse:\n    print('–ì–æ—Ç–æ–≤–æ!')\n```\nüéØ –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ ‚Äî –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è `else`.",
    "options": [
      {
        "text": "–ï—Å–ª–∏ –Ω–µ –±—ã–ª–æ break",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –≤ –∫–æ–Ω—Ü–µ",
        "is_correct": false
      },
      {
        "text": "–ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ False",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ while",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç–æ–µ?",
    "explanation": "–ü—Ä–æ–≤–µ—Ä—å –¥–µ–ª–∏—Ç–µ–ª–∏ –æ—Ç 2 –¥–æ ‚àön:\n\n```python\nn = 17\nis_prime = True\nfor i in range(2, int(n**0.5)+1):\n    if n % i == 0:\n        is_prime = False\n        break\n```\nüîç –ï—Å–ª–∏ –¥–µ–ª–∏—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω ‚Äî —á–∏—Å–ª–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ.",
    "options": [
      {
        "text": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ª–∏—Ç–µ–ª–∏ –¥–æ ‚àön",
        "is_correct": true
      },
      {
        "text": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —á–∏—Å–ª–∞ –¥–æ n",
        "is_correct": false
      },
      {
        "text": "if n % 2 == 1:",
        "is_correct": false
      },
      {
        "text": "if n in primes_list:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 5\nwhile x > 0:\n    print(x)\n    x -= 1\n    if x == 2:\n        break",
    "explanation": "5\\n4\\n3\\nüõë –¶–∏–∫–ª –ø—Ä–µ—Ä–≤—ë—Ç—Å—è –Ω–∞ `x == 2`, –ø–æ—ç—Ç–æ–º—É 2 –∏ 1 –Ω–µ –≤—ã–≤–æ–¥—è—Ç—Å—è. `break` —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ –¥–ª—è `for` –∏ `while`!",
    "options": [
      {
        "text": "5\n4\n3",
        "is_correct": true
      },
      {
        "text": "5\n4\n3\n2",
        "is_correct": false
      },
      {
        "text": "5\n4\n3\n2\n1",
        "is_correct": false
      },
      {
        "text": "4\n3\n2",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `while True:`:\n\n```python\nwhile True:\n    print('–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å!')\n```\n‚ò†Ô∏è –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω! –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π —É—Å–ª–æ–≤–∏–µ –≤—ã—Ö–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `break`).",
    "options": [
      {
        "text": "while True:",
        "is_correct": true
      },
      {
        "text": "for i in infinity:",
        "is_correct": false
      },
      {
        "text": "while 1 == 1:",
        "is_correct": false
      },
      {
        "text": "loop forever:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 3\nwhile x > 0:\n    print(x)\n    x -= 1\nelse:\n    print('–ì–æ—Ç–æ–≤–æ')",
    "explanation": "3\\n2\\n1\\n–ì–æ—Ç–æ–≤–æ\\n‚úÖ –ë–ª–æ–∫ `else` –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ `break` –Ω–µ –≤—ã–∑—ã–≤–∞–ª—Å—è. –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≤ `for`, –∏ –≤ `while`!",
    "options": [
      {
        "text": "3\n2\n1\n–ì–æ—Ç–æ–≤–æ",
        "is_correct": true
      },
      {
        "text": "3\n2\n1",
        "is_correct": false
      },
      {
        "text": "–ì–æ—Ç–æ–≤–æ",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `def` –∏ –¥–≤–æ–µ—Ç–æ—á–∏–µ:\n\n```python\ndef greet():\n    print('Hello!')\n```\nüìå –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞: `greet()`.",
    "options": [
      {
        "text": "def func():",
        "is_correct": true
      },
      {
        "text": "function func():",
        "is_correct": false
      },
      {
        "text": "func = def():",
        "is_correct": false
      },
      {
        "text": "def func:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `return`:\n\n```python\ndef add(a, b):\n    return a + b\n\nresult = add(2, 3)  # 5\n```\nüöÄ –ë–µ–∑ `return` —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—ë—Ç `None`.",
    "options": [
      {
        "text": "return value",
        "is_correct": true
      },
      {
        "text": "func.return(value)",
        "is_correct": false
      },
      {
        "text": "yield value",
        "is_correct": false
      },
      {
        "text": "print(value)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∑–∞–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?",
    "explanation": "–£–∫–∞–∂–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏:\n\n```python\ndef greet(name='Guest'):\n    print(f'Hello, {name}!')\n\ngreet()  # Hello, Guest!\n```\n‚ö†Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏!",
    "options": [
      {
        "text": "def func(param=default):",
        "is_correct": true
      },
      {
        "text": "def func(param: default):",
        "is_correct": false
      },
      {
        "text": "def func(param): default",
        "is_correct": false
      },
      {
        "text": "def func(=default):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π –∏–º–µ–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:\n\n```python\ndef calc(x, y):\n    return x - y\n\ncalc(y=5, x=10)  # 5\n```\nüéØ –ü–æ—Ä—è–¥–æ–∫ –Ω–µ –≤–∞–∂–µ–Ω, –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ!",
    "options": [
      {
        "text": "func(param=value)",
        "is_correct": true
      },
      {
        "text": "func(value=param)",
        "is_correct": false
      },
      {
        "text": "func(value as param)",
        "is_correct": false
      },
      {
        "text": "func(:param=value)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–∏–Ω—è—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `*args`:\n\n```python\ndef sum_all(*numbers):\n    return sum(numbers)\n\nsum_all(1, 2, 3)  # 6\n```\nüìå `args` ‚Äî —ç—Ç–æ –∫–æ—Ä—Ç–µ–∂. –ú–æ–∂–Ω–æ –Ω–∞–∑–≤–∞—Ç—å –∏–Ω–∞—á–µ, –Ω–æ `*` –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!",
    "options": [
      {
        "text": "def func(*args):",
        "is_correct": true
      },
      {
        "text": "def func(args[]):",
        "is_correct": false
      },
      {
        "text": "def func(...args):",
        "is_correct": false
      },
      {
        "text": "def func(&args):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–∏–Ω—è—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `**kwargs`:\n\n```python\ndef greet(**options):\n    print(f\"Hello, {options.get('name', 'Guest')}!\")\n\ngreet(name='Alice', age=25)  # Hello, Alice!\n```\nüìå `kwargs` ‚Äî —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å. –ò–º—è –º–æ–∂–µ—Ç –±—ã—Ç—å –¥—Ä—É–≥–∏–º, –Ω–æ `**` –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!",
    "options": [
      {
        "text": "def func(**kwargs):",
        "is_correct": true
      },
      {
        "text": "def func(kwargs={}):",
        "is_correct": false
      },
      {
        "text": "def func(***kwargs):",
        "is_correct": false
      },
      {
        "text": "def func(&&kwargs):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–¢–æ–ª—å–∫–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–π). –ü—Ä–∏–º–µ—Ä:\n\n```python\nx = 10\ndef func():\n    y = 20\nfunc()\nprint(x)  # 10\nprint(y)  # –û—à–∏–±–∫–∞!\n```\nüîç –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (`y`) —Å—É—â–µ—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏.",
    "options": [
      {
        "text": "–ì–ª–æ–±–∞–ª—å–Ω—ã–µ",
        "is_correct": true
      },
      {
        "text": "–õ–æ–∫–∞–ª—å–Ω—ã–µ",
        "is_correct": false
      },
      {
        "text": "–ê—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `global`:\n\n```python\nx = 10\ndef change():\n    global x\n    x = 20\nchange()\nprint(x)  # 20\n```\n‚ö†Ô∏è –ë–µ–∑ `global` —Å–æ–∑–¥–∞—Å—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è!",
    "options": [
      {
        "text": "global var",
        "is_correct": true
      },
      {
        "text": "nonlocal var",
        "is_correct": false
      },
      {
        "text": "var = global",
        "is_correct": false
      },
      {
        "text": "def func(global var):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤–µ—Ä–Ω—ë—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef outer():\n    x = 10\n    def inner():\n        return x\n    return inner\nfunc = outer()\nprint(func())",
    "explanation": "`10`! üéØ –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è `inner` –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –≤–Ω–µ—à–Ω–µ–π `outer` (–¥–∞–∂–µ –ø–æ—Å–ª–µ –µ—ë –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è). –≠—Ç–æ –∏ –µ—Å—Ç—å –∑–∞–º—ã–∫–∞–Ω–∏–µ!",
    "options": [
      {
        "text": "10",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "<function inner>",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏–∑–º–µ—Ä–∏—Ç—å –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–°–æ–∑–¥–∞–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä:\n\n```python\nimport time\ndef timer(func):\n    def wrapper(*args, **kwargs):\n        start = time.time()\n        result = func(*args, **kwargs)\n        print(f'Time: {time.time() - start}s')\n        return result\n    return wrapper\n\n@timer\ndef calculate():\n    time.sleep(1)\n```",
    "options": [
      {
        "text": "–°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—ë—Ä—Ç–∫—É",
        "is_correct": true
      },
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å time.sleep()",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å lambda",
        "is_correct": false
      },
      {
        "text": "–ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–∑ –≤–Ω–µ—à–Ω–µ–π (–Ω–æ –Ω–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π) —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `nonlocal`:\n\n```python\ndef outer():\n    x = 10\n    def inner():\n        nonlocal x\n        x = 20\n    inner()\n    print(x)  # 20\n```\nüîç –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç `global`, `nonlocal` —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–ª–∏–∂–∞–π—à–µ–π –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç—å—é –≤–∏–¥–∏–º–æ—Å—Ç–∏.",
    "options": [
      {
        "text": "nonlocal var",
        "is_correct": true
      },
      {
        "text": "global var",
        "is_correct": false
      },
      {
        "text": "outer.var",
        "is_correct": false
      },
      {
        "text": "var = nonlocal",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\ndef greet():\n    return 'Hello'\nfunc = greet\nprint(func())",
    "explanation": "`Hello`! üéØ –í Python —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞. –ò—Ö –º–æ–∂–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å!",
    "options": [
      {
        "text": "Hello",
        "is_correct": true
      },
      {
        "text": "<function greet>",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `map()`:\n\n```python\ndef square(x):\n    return x ** 2\nnums = [1, 2, 3]\nsquared = list(map(square, nums))  # [1, 4, 9]\n```\nüåÄ `filter()` —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ `True`.",
    "options": [
      {
        "text": "map(func, iterable)",
        "is_correct": true
      },
      {
        "text": "iterable.map(func)",
        "is_correct": false
      },
      {
        "text": "for x in iterable: func(x)",
        "is_correct": false
      },
      {
        "text": "func.apply(iterable)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø—Ä–∏ –æ—á–µ–Ω—å –≥–ª—É–±–æ–∫–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏?",
    "explanation": "–ë—É–¥–µ—Ç `RecursionError` (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ ~1000). üèóÔ∏è –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —ç—Ç–æ–≥–æ:\n1. –ü–µ—Ä–µ–ø–∏—à–∏ –Ω–∞ —Ü–∏–∫–ª.\n2. –ò—Å–ø–æ–ª—å–∑—É–π `sys.setrecursionlimit()` (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!).\n3. –ü—Ä–∏–º–µ–Ω–∏ –º–µ–º–æ–∏–∑–∞—Ü–∏—é (`@lru_cache`).",
    "options": [
      {
        "text": "RecursionError",
        "is_correct": true
      },
      {
        "text": "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–∏—Å–Ω–µ—Ç",
        "is_correct": false
      },
      {
        "text": "Python —Å–∞–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç",
        "is_correct": false
      },
      {
        "text": "StackOverflow",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–∏–Ω—è—Ç—å –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ, –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã?",
    "explanation": "–û–±—ä–µ–¥–∏–Ω–∏ `*args` –∏ `**kwargs`:\n\n```python\ndef func(*args, **kwargs):\n    print(args, kwargs)\n\nfunc(1, 2, a=3)  # (1, 2) {'a': 3}\n```\nüìå –í–∞–∂–µ–Ω –ø–æ—Ä—è–¥–æ–∫: —Å–Ω–∞—á–∞–ª–∞ `*args`, –ø–æ—Ç–æ–º `**kwargs`!",
    "options": [
      {
        "text": "def func(*args, **kwargs):",
        "is_correct": true
      },
      {
        "text": "def func(**kwargs, *args):",
        "is_correct": false
      },
      {
        "text": "def func(args*, kwargs**):",
        "is_correct": false
      },
      {
        "text": "def func(*args, kwargs):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\ndef multiplier(n):\n    def func(x):\n        return x * n\n    return func\ndouble = multiplier(2)\nprint(double(5))",
    "explanation": "`10`! üß† –§—É–Ω–∫—Ü–∏—è `double` –∑–∞–ø–æ–º–Ω–∏–ª–∞ `n=2` –∏–∑ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏. –≠—Ç–æ –º–æ—â–Ω—ã–π –ø—Ä–∏—ë–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π!",
    "options": [
      {
        "text": "10",
        "is_correct": true
      },
      {
        "text": "5",
        "is_correct": false
      },
      {
        "text": "2",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É—Å–∫–æ—Ä–∏—Ç—å —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ:\n\n```python\nfrom functools import lru_cache\n\n@lru_cache\ndef fib(n):\n    return n if n <= 1 else fib(n-1) + fib(n-2)\n```\nüöÄ `@lru_cache` –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–∑–æ–≤–æ–≤ –∏ –∏–∑–±–µ–≥–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π!",
    "options": [
      {
        "text": "@lru_cache",
        "is_correct": true
      },
      {
        "text": "@memoize",
        "is_correct": false
      },
      {
        "text": "@cache",
        "is_correct": false
      },
      {
        "text": "@speedup",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π docstring:\n\n```python\ndef greet():\n    \"\"\"–í—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.\"\"\"\n    print('Hello!')\n\nprint(greet.__doc__)  # '–í—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.'\n```\nüìñ Docstring –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ `help(func)` –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏!",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": true
      },
      {
        "text": "func.doc = '–æ–ø–∏—Å–∞–Ω–∏–µ'",
        "is_correct": false
      },
      {
        "text": "@docstring('–æ–ø–∏—Å–∞–Ω–∏–µ')",
        "is_correct": false
      },
      {
        "text": "def func() # –æ–ø–∏—Å–∞–Ω–∏–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —É `x = 3.14`?",
    "explanation": "–ß–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π (float) ‚Äî —ç—Ç–æ —á–∏—Å–ª–∞ —Å –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç—å—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, 3.14 –∏–ª–∏ -0.001. –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ç–æ—á–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏–ª–∏ —Ñ–∏–∑–∏–∫–µ. üßÆ‚ú® –ü—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–º–Ω–∏: –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ—á–∫–∞ ‚Äî —ç—Ç–æ float!",
    "options": [
      {
        "text": "float",
        "is_correct": true
      },
      {
        "text": "int",
        "is_correct": false
      },
      {
        "text": "str",
        "is_correct": false
      },
      {
        "text": "bool",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø —É `x = True`?",
    "explanation": "`True` –∏ `False` ‚Äî —ç—Ç–æ –±—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è (bool), –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π. –û–Ω–∏ –ø–æ—Ö–æ–∂–∏ –Ω–∞ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å: –ª–∏–±–æ **–≤–∫–ª—é—á–µ–Ω–æ** (True), –ª–∏–±–æ **–≤—ã–∫–ª—é—á–µ–Ω–æ** (False). üí° –ö—Å—Ç–∞—Ç–∏, –≤ Python `True` –∏ `False` ‚Äî —ç—Ç–æ –ø–æ–¥–∫–ª–∞—Å—Å—ã `int`, –Ω–æ –≤ 99% —Å–ª—É—á–∞–µ–≤ —ç—Ç–æ –Ω–µ –≤–∞–∂–Ω–æ!",
    "options": [
      {
        "text": "bool",
        "is_correct": true
      },
      {
        "text": "int",
        "is_correct": false
      },
      {
        "text": "str",
        "is_correct": false
      },
      {
        "text": "float",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 5\ny = '7'\nprint(x + y)",
    "explanation": "–û—à–∏–±–∫–∞! üö® Python –Ω–µ –º–æ–∂–µ—Ç —Å–ª–æ–∂–∏—Ç—å —á–∏—Å–ª–æ (`int`) –∏ —Å—Ç—Ä–æ–∫—É (`str`). –ù—É–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ —Ç–∏–ø—ã –∫ –æ–¥–Ω–æ–º—É –≤–∏–¥—É: –ª–∏–±–æ `x + int(y)`, –ª–∏–±–æ `str(x) + y`. –≠—Ç–æ —á–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞ —É –Ω–æ–≤–∏—á–∫–æ–≤, –Ω–æ —Ç—ã —Ç–µ–ø–µ—Ä—å –∑–Ω–∞–µ—à—å, –∫–∞–∫ –µ—ë –∏–∑–±–µ–∂–∞—Ç—å! üõ°Ô∏è",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": true
      },
      {
        "text": "12",
        "is_correct": false
      },
      {
        "text": "57",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\na = [1, 2]\nb = a\nb.append(3)\nprint(a)",
    "explanation": "–°–ø–∏—Å–∫–∏ –≤ Python **–∏–∑–º–µ–Ω—è–µ–º—ã–µ** (mutable), –ø–æ—ç—Ç–æ–º—É `b = a` –Ω–µ —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ø–∏—é, –∞ —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ —Ç–æ—Ç –∂–µ —Å–ø–∏—Å–æ–∫. –î–æ–±–∞–≤–ª—è—è —ç–ª–µ–º–µ–Ω—Ç –≤ `b`, –º—ã –º–µ–Ω—è–µ–º –∏ `a`! üîÑ –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π `b = a.copy()`. –í–∞–∂–Ω—ã–π –Ω—é–∞–Ω—Å!",
    "options": [
      {
        "text": "[1, 2, 3]",
        "is_correct": true
      },
      {
        "text": "[1, 2]",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß–µ–º –∫–æ—Ä—Ç–µ–∂ (tuple) –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å–ø–∏—Å–∫–∞ (list)?",
    "explanation": "–ö–æ—Ä—Ç–µ–∂ (`tuple`) ‚Äî **–Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π** (immutable), –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ–Ω—å—à–µ –ø–∞–º—è—Ç–∏ –∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –∫–ª—é—á –≤ —Å–ª–æ–≤–∞—Ä–µ. üì¶ –°–ø–∏—Å–æ–∫ (`list`) ‚Äî **–∏–∑–º–µ–Ω—è–µ–º—ã–π**, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, `(1, 2)` ‚Äî –∫–æ—Ä—Ç–µ–∂, `[1, 2]` ‚Äî —Å–ø–∏—Å–æ–∫. –í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á–∏!",
    "options": [
      {
        "text": "–ù–µ–∏–∑–º–µ–Ω—è–µ–º–æ—Å—Ç—å—é",
        "is_correct": true
      },
      {
        "text": "–°–∫–æ—Ä–æ—Å—Ç—å—é –¥–æ—Å—Ç—É–ø–∞",
        "is_correct": false
      },
      {
        "text": "–¢–∏–ø–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤",
        "is_correct": false
      },
      {
        "text": "–°–ø–æ—Å–æ–±–æ–º —Å–æ–∑–¥–∞–Ω–∏—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø —É x = 5?",
    "explanation": "–í Python —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ß–∏—Å–ª–æ 5 ‚Äî —Ü–µ–ª–æ–µ, –∑–Ω–∞—á–∏—Ç, –µ–≥–æ —Ç–∏–ø int (integer). –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–æ–ª–æ–∂–∏–ª —è–±–ª–æ–∫–æ –≤ –∫–æ—Ä–∑–∏–Ω—É ‚Äî —Ç–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ —Ç–∞–º. –¢–∞–∫ Python ¬´–ø–æ–º–µ—á–∞–µ—Ç¬ª –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —Å –Ω–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å üçéü™Ñ",
    "options": [
      {
        "text": "int",
        "is_correct": true
      },
      {
        "text": "float",
        "is_correct": false
      },
      {
        "text": "str",
        "is_correct": false
      },
      {
        "text": "bool",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç print(type(5.0))?",
    "explanation": "–ß–∏—Å–ª–æ —Å —Ç–æ—á–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5.0) –≤—Å–µ–≥–¥–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –¥—Ä–æ–±–Ω—ã–º, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–æ —Ü–µ–ª–æ–µ. –ü–æ—ç—Ç–æ–º—É Python –ø—Ä–∏—Å–≤–æ–∏—Ç –µ–º—É —Ç–∏–ø float üìâ Float ‚Äî —ç—Ç–æ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å: ¬´–Ø —Ö–æ—á—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥—Ä–æ–±—è–º–∏¬ª, –¥–∞–∂–µ –µ—Å–ª–∏ —É —Ç–µ–±—è –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.",
    "options": [
      {
        "text": "<class 'float'>",
        "is_correct": true
      },
      {
        "text": "<class 'int'>",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π?",
    "explanation": "–§—É–Ω–∫—Ü–∏—è type() ‚Äî —ç—Ç–æ –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–∏–π –¥–µ—Ç–µ–∫—Ç–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫—Ç–æ –ø–µ—Ä–µ–¥ –Ω–∏–º üïµÔ∏è‚Äç‚ôÇÔ∏è –ï—Å–ª–∏ —Ç—ã –≤—ã–∑–æ–≤–µ—à—å type(x), Python –ø–æ–∫–∞–∂–µ—Ç —Ç–µ–±–µ, –∫–∞–∫–æ–π —Ç–∏–ø —É –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π x. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ —Ç—ã –Ω–µ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –ø–æ–ª—É—á–∏–ª –Ω–∞ –≤—Ö–æ–¥.",
    "options": [
      {
        "text": "type()",
        "is_correct": true
      },
      {
        "text": "typeof()",
        "is_correct": false
      },
      {
        "text": "__type__",
        "is_correct": false
      },
      {
        "text": "get_type()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø —É x = '5'?",
    "explanation": "–ö–∞–≤—ã—á–∫–∏ –≤–æ–∫—Ä—É–≥ —á–∏—Å–ª–∞ –≥–æ–≤–æ—Ä—è—Ç Python, —á—Ç–æ —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ, –∞ —Ç–µ–∫—Å—Ç üìù –¢–æ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞. str ‚Äî —ç—Ç–æ —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª —Ü–∏—Ñ—Ä—É –Ω–∞ –ª–∏—Å—Ç–æ—á–∫–µ –±—É–º–∞–≥–∏ ‚Äî –æ–Ω–∞ –±–æ–ª—å—à–µ –Ω–µ —á–∏—Å–ª–æ, –∞ –ø—Ä–æ—Å—Ç–æ —Å–∏–º–≤–æ–ª.",
    "options": [
      {
        "text": "str",
        "is_correct": true
      },
      {
        "text": "int",
        "is_correct": false
      },
      {
        "text": "char",
        "is_correct": false
      },
      {
        "text": "number",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è?",
    "explanation": "–í Python –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –æ–¥–Ω–æ–º—É —Ç–∏–ø—É. –°–µ–≥–æ–¥–Ω—è —ç—Ç–æ —á–∏—Å–ª–æ, –∑–∞–≤—Ç—Ä–∞ ‚Äî —Å—Ç—Ä–æ–∫–∞. –≠—Ç–æ —Å–≤–æ–±–æ–¥–∞ üíÉ –ù–æ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å. –ò–Ω–æ–≥–¥–∞ —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–ø—É—Ç–∞—Ç—å, –ø–æ—ç—Ç–æ–º—É –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å. –≠—Ç–æ –∫–∞–∫ —Ä—é–∫–∑–∞–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª–æ–∂–∏—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ ‚Äî –Ω–æ —Å–∞–º –¥–æ–ª–∂–µ–Ω –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ —Ç–∞–º –ª–µ–∂–∏—Ç.",
    "options": [
      {
        "text": "–¢–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ–Ω—è–µ—Ç—Å—è",
        "is_correct": true
      },
      {
        "text": "–¢–∏–ø –Ω–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å",
        "is_correct": false
      },
      {
        "text": "–¢–∏–ø –∑–∞–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç —Ç–∏–ø–æ–≤ –≤–æ–æ–±—â–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å if –±–µ–∑ else?",
    "explanation": "–ö–æ–Ω–µ—á–Ω–æ –º–æ–∂–Ω–æ! –ò–Ω–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º —É—Å–ª–æ–≤–∏–∏, –∞ –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å üåü –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å: ¬´–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –±–∏–ª–µ—Ç ‚Äî –≤—Ö–æ–¥–∏¬ª, –Ω–æ –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏ –º–∏–º–æ. Else –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å elif",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 0\nif x:\n    print('True')\nelse:\n    print('False')",
    "explanation": "–í Python —á–∏—Å–ª–∞, —Ä–∞–≤–Ω—ã–µ –Ω—É–ª—é, –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ None —Å—á–∏—Ç–∞—é—Ç—Å—è False ü§Ø –≠—Ç–æ —á–∞—Å—Ç—å —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã—Ö 'falsy' –∑–Ω–∞—á–µ–Ω–∏–π. –ü–æ—ç—Ç–æ–º—É –±–ª–æ–∫ if –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—Å—è, –∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è 'False'. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–ø—Ä–∞—à–∏–≤–∞–µ—à—å: ¬´–ï—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ?¬ª ‚Äî –æ—Ç–≤–µ—Ç: ¬´–ù–µ—Ç¬ª.",
    "options": [
      {
        "text": "'False'",
        "is_correct": true
      },
      {
        "text": "'True'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ?",
    "explanation": "–ò–Ω–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –º–µ—Å—Ç–æ –∏ —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ –∫–æ—Ä–æ—á–µ. –í Python –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä: x = a if condition else b üß† –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ ‚Äî –≤–æ–∑—å–º–∏ –∫–æ—Ñ–µ, –∏–Ω–∞—á–µ ‚Äî –≤–æ–¥—É¬ª. –£–¥–æ–±–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ.",
    "options": [
      {
        "text": "x = a if cond else b",
        "is_correct": true
      },
      {
        "text": "x = if cond then a else b",
        "is_correct": false
      },
      {
        "text": "x = condition ? a : b",
        "is_correct": false
      },
      {
        "text": "x = cond.then(a).else(b)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è True?",
    "explanation": "–í Python –ø–æ—á—Ç–∏ –≤—Å—ë —Å—á–∏—Ç–∞–µ—Ç—Å—è True, –∫—Ä–æ–º–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π: 0, '', [], {}, None üü° –≠—Ç–æ –≤–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å, –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —É—Å–ª–æ–≤–∏—è—Ö. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å: ¬´–ï—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ?¬ª ‚Äî –µ—Å–ª–∏ –¥–∞, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–π –¥–µ–π—Å—Ç–≤–∏–µ.",
    "options": [
      {
        "text": "'—Å—Ç—Ä–æ–∫–∞'",
        "is_correct": true
      },
      {
        "text": "''",
        "is_correct": false
      },
      {
        "text": "0",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nif 3 in [1, 2, 4]:\n    print('Yes')\nelse:\n    print('No')",
    "explanation": "–û–ø–µ—Ä–∞—Ç–æ—Ä in –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ üîç –ó–¥–µ—Å—å –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º: –µ—Å—Ç—å –ª–∏ —á–∏—Å–ª–æ 3 —Å—Ä–µ–¥–∏ [1, 2, 4]? –ù–µ—Ç. –ó–Ω–∞—á–∏—Ç, –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –±–ª–æ–∫ else, –∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è 'No'. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∏—â–µ—à—å –∫–ª—é—á–∏ –≤ –∫–∞—Ä–º–∞–Ω–∞—Ö ‚Äî –∏—Ö —Ç–∞–º –Ω–µ—Ç ‚Üí –ø—Ä–æ–≤–µ—Ä—è–µ—à—å —Å—É–º–∫—É.",
    "options": [
      {
        "text": "'No'",
        "is_correct": true
      },
      {
        "text": "'Yes'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å—Ä–∞–≤–Ω–∏—Ç—å —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π?",
    "explanation": "–ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∏–º–µ–µ—Ç –Ω—É–∂–Ω—ã–π —Ç–∏–ø üßê –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è isinstance(x, —Ç–∏–ø). –ù–∞–ø—Ä–∏–º–µ—Ä: isinstance(5, int) ‚Üí True. –≠—Ç–æ –ª—É—á—à–µ, —á–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —á–µ—Ä–µ–∑ type(), –ø–æ—Ç–æ–º—É —á—Ç–æ isinstance() —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º.",
    "options": [
      {
        "text": "isinstance(x, int)",
        "is_correct": true
      },
      {
        "text": "type(x) == int",
        "is_correct": false
      },
      {
        "text": "x.type() == int",
        "is_correct": false
      },
      {
        "text": "check_type(x, int)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 5\ny = 10\nresult = x if x > y else y\nprint(result)",
    "explanation": "–ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä: x –µ—Å–ª–∏ x > y, –∏–Ω–∞—á–µ y üß† –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º 5 –∏ 10: 5 –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç, –∑–Ω–∞—á–∏—Ç, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å—Ç–∞–Ω–µ—Ç y, —Ç–æ –µ—Å—Ç—å 10. –¢–∞–∫–æ–π —Å–ø–æ—Å–æ–± —É–¥–æ–±–µ–Ω, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º –∏–ª–∏ –º–∏–Ω–∏–º—É–º –∑–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É. –ö–∞–∫ –±—É–¥—Ç–æ –≤—ã–±–∏—Ä–∞–µ—à—å —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π —Å—Ç—É–ª –∏–∑ –¥–≤—É—Ö.",
    "options": [
      {
        "text": "10",
        "is_correct": true
      },
      {
        "text": "5",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\nif x = 5:\n    print('Yes')",
    "explanation": "–í —É—Å–ª–æ–≤–∏–∏ —Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è = –≤–º–µ—Å—Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è == ü§Ø –≠—Ç–æ —á–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞ –¥–∞–∂–µ —É –æ–ø—ã—Ç–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. if –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç—å —É—Å–ª–æ–≤–∏—è, –∞ –Ω–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —Å–ø—Ä–∞—à–∏–≤–∞–µ—à—å: ¬´–≠—Ç–æ —Ç–≤–æ–π –¥–æ–º?¬ª, –∞ –Ω–µ –≥–æ–≤–æ—Ä–∏—à—å: ¬´–¢–µ–ø–µ—Ä—å —ç—Ç–æ —Ç–≤–æ–π –¥–æ–º¬ª.",
    "options": [
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω = –≤–º–µ—Å—Ç–æ ==",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –¥–≤–æ–µ—Ç–æ—á–∏—è",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –æ—Ç—Å—Ç—É–ø–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ–≤–µ—Ä–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è?",
    "explanation": "–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è ü´∂ –ó–¥–µ—Å—å –ø–æ—Å–ª–µ if –∏–¥—ë—Ç –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ 0, –∫–æ—Ç–æ—Ä–æ–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è 'falsy' –≤ Python. –¢–æ –µ—Å—Ç—å —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è ‚Üí —Å—Ä–∞–±–æ—Ç–∞–µ—Ç else. –û—á–µ–Ω—å –ª–µ–≥–∫–æ –∑–∞–±—ã—Ç—å, —á—Ç–æ –Ω–µ –≤—Å—ë, —á—Ç–æ –Ω–µ False, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ True üòÑ",
    "options": [
      {
        "text": "'False'",
        "is_correct": true
      },
      {
        "text": "'True'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nx = 5\nif x in range(1, 5):\n    print('Yes')\nelse:\n    print('No')",
    "explanation": "range(1, 5) —Å–æ–∑–¥–∞—ë—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç 1 –¥–æ 4 (–Ω–µ –≤–∫–ª—é—á–∞—è 5) üîÑ –ü–æ—ç—Ç–æ–º—É x=5 –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —ç—Ç–æ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω. –¢–∞–∫–∏–µ –æ—à–∏–±–∫–∏ —á–∞—Å—Ç–æ –≤–æ–∑–Ω–∏–∫–∞—é—Ç, –∫–æ–≥–¥–∞ –º—ã –¥—É–º–∞–µ–º, —á—Ç–æ range –≤–∫–ª—é—á–∞–µ—Ç –∫–æ–Ω–µ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–û—Ç 1 –¥–æ 5 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ¬ª, –Ω–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ¬´–¥–æ 5, –Ω–µ –≤–∫–ª—é—á–∞—è¬ª.",
    "options": [
      {
        "text": "'No'",
        "is_correct": true
      },
      {
        "text": "'Yes'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nif not 5 - 5:\n    print('A')\nelse:\n    print('B')",
    "explanation": "5 - 5 —Ä–∞–≤–Ω–æ 0, –∞ 0 –≤ Python —Å—á–∏—Ç–∞–µ—Ç—Å—è False üü¢ –ü–æ—ç—Ç–æ–º—É not 0 ‚Üí True ‚Üí –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –±–ª–æ–∫ if. –≠—Ç–∞ –ª–æ–≥–∏–∫–∞ –º–æ–∂–µ—Ç –∑–∞–ø—É—Ç–∞—Ç—å, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ —Ç—ã –Ω–µ —É–≤–µ—Ä–µ–Ω, –∫–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–∏—Ç–∞—é—Ç—Å—è falsy. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª: ¬´–ï—Å–ª–∏ –ù–ï –Ω–∏—á–µ–≥–æ ‚Äî –¥–µ–ª–∞–π A¬ª. –ò –ø–æ—Å–∫–æ–ª—å–∫—É —Ç–∞–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ ¬´–Ω–∏—á–µ–≥–æ¬ª, —Ç–æ A –∏ –±—É–¥–µ—Ç.",
    "options": [
      {
        "text": "'A'",
        "is_correct": true
      },
      {
        "text": "'B'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\nif x > 5\n    print('Big')",
    "explanation": "–ü–æ—Å–ª–µ —É—Å–ª–æ–≤–∏—è if –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–æ–µ—Ç–æ—á–∏–µ : üîç –ë–µ–∑ –Ω–µ–≥–æ Python –Ω–µ –ø–æ–π–º—ë—Ç, –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–µ–ª–æ —É—Å–ª–æ–≤–∏—è. –≠—Ç–æ –∫–∞–∫ –Ω–∞—á–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã, –Ω–æ –∑–∞–±—ã—Ç—å —Ç–æ—á–∫—É –≤ –∫–æ–Ω—Ü–µ ‚Äî –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø–æ–π–º—ë—Ç, —á—Ç–æ —Ç—ã –∏–º–µ–ª –≤ –≤–∏–¥—É.",
    "options": [
      {
        "text": "–ù–µ—Ç –¥–≤–æ–µ—Ç–æ—á–∏—è –ø–æ—Å–ª–µ if",
        "is_correct": true
      },
      {
        "text": "–ù–µ–≤–µ—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –æ—Ç—Å—Ç—É–ø–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ–≤–µ—Ä–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å —Ü–∏–∫–ª for?",
    "explanation": "–¶–∏–∫–ª for –≤ Python –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ `for`, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º —Å–ª–µ–¥—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å üß† –ü–æ—Å–ª–µ –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ —Å—Ç–∞–≤–∏—Ç—Å—è –¥–≤–æ–µ—Ç–æ—á–∏–µ, –∞ —Ç–µ–ª–æ —Ü–∏–∫–ª–∞ –ø–∏—à–µ—Ç—Å—è —Å –æ—Ç—Å—Ç—É–ø–æ–º. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ—à—å —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π –∏ –≥–æ–≤–æ—Ä–∏—à—å –∫–∞–∂–¥–æ–º—É: ¬´–ü—Ä–∏–≤–µ—Ç!¬ª.",
    "options": [
      {
        "text": "for x in list:",
        "is_correct": true
      },
      {
        "text": "for (x in list)",
        "is_correct": false
      },
      {
        "text": "loop x in list:",
        "is_correct": false
      },
      {
        "text": "foreach x in list:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfor i in range(3):\n    print(i)\nprint('Done')",
    "explanation": "–§—É–Ω–∫—Ü–∏—è range(3) —Å–æ–∑–¥–∞—ë—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª –æ—Ç 0 –¥–æ 2 üîÅ –¶–∏–∫–ª for –ø—Ä–æ–π–¥—ë—Ç—Å—è –ø–æ –Ω–∏–º –∏ –≤—ã–≤–µ–¥–µ—Ç –∫–∞–∂–¥–æ–µ. –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è print('Done'). –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–°–¥–µ–ª–∞–π —Ç—Ä–∏ —à–∞–≥–∞, –ø–æ—Ç–æ–º —Å–∫–∞–∂–∏ ‚Äú–ì–æ—Ç–æ–≤–æ‚Äù¬ª. –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç 0, 1, 2, Done.",
    "options": [
      {
        "text": "0 1 2 Done",
        "is_correct": true
      },
      {
        "text": "1 2 3 Done",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ü–∏–∫–ª while?",
    "explanation": "–¶–∏–∫–ª while –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –ø–æ–∫–∞ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ üîÑ –¢–æ –µ—Å—Ç—å –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–µ–π. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –∂–¥—ë—à—å –∞–≤—Ç–æ–±—É—Å: –ø–æ–∫–∞ –µ–≥–æ –Ω–µ—Ç ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å –∂–¥–∞—Ç—å. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –ø—Ä–∏–µ–∑–∂–∞–µ—Ç ‚Äî –≤—ã—Ö–æ–¥–∏—à—å –∏–∑ —Ü–∏–∫–ª–∞.",
    "options": [
      {
        "text": "–ü–æ–∫–∞ —É—Å–ª–æ–≤–∏–µ True",
        "is_correct": true
      },
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å break",
        "is_correct": false
      },
      {
        "text": "–ü–æ –∏–Ω–¥–µ–∫—Å–∞–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ni = 0\nwhile i < 3:\n    print(i)\n    i += 1",
    "explanation": "–¶–∏–∫–ª while –Ω–∞—á–Ω—ë—Ç —Å i=0 –∏ –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –µ—ë –Ω–∞ 1, –ø–æ–∫–∞ i –º–µ–Ω—å—à–µ 3 üìà –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã 0, 1, 2. –û—á–µ–Ω—å –≤–∞–∂–Ω–æ –Ω–µ –∑–∞–±—ã—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞, –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—Ç—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –Ω–µ –≤—ã—à–µ–ª –∏–∑ –∞–≤—Ç–æ–±—É—Å–∞ ‚Äî –∏ –µ–¥–µ—à—å –¥–∞–ª—å—à–µ üòÇ",
    "options": [
      {
        "text": "0 1 2",
        "is_correct": true
      },
      {
        "text": "1 2 3",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ 0",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–∏–∫–ª –¥–æ—Å—Ä–æ—á–Ω–æ?",
    "explanation": "–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ break ‚Äî —ç—Ç–æ –∫–∞–∫ –∫–Ω–æ–ø–∫–∞ ¬´—Å—Ç–æ–ø¬ª –¥–ª—è —Ü–∏–∫–ª–∞ üõë –ò–Ω–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –µ—â—ë –Ω–µ —Å—Ç–∞–ª–æ –ª–æ–∂–Ω—ã–º. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç—ã –∏—â–µ—à—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ –∏ –Ω–∞—à—ë–ª –µ–≥–æ ‚Äî –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.",
    "options": [
      {
        "text": "break",
        "is_correct": true
      },
      {
        "text": "stop",
        "is_correct": false
      },
      {
        "text": "exit",
        "is_correct": false
      },
      {
        "text": "continue",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏—Ç–µ—Ä–∞—Ü–∏—é?",
    "explanation": "continue ‚Äî —ç—Ç–æ –∫–∞–∫ ¬´–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª —Ç–µ–∫—É—â–∏–π —à–∞–≥ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É üö∂‚Äç‚ôÇÔ∏è –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ—à—å —á–∏—Å–ª–∞, –Ω–æ —Ö–æ—á–µ—à—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —á—ë—Ç–Ω—ã–µ. –¢–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π continue, –∏ —Ü–∏–∫–ª —Å—Ä–∞–∑—É –ø–µ—Ä–µ–π–¥—ë—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —á–∏—Å–ª—É –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –≤ —Ç–µ–ª–µ.",
    "options": [
      {
        "text": "continue",
        "is_correct": true
      },
      {
        "text": "skip",
        "is_correct": false
      },
      {
        "text": "pass",
        "is_correct": false
      },
      {
        "text": "ignore",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nfor i in range(2):\n    for j in range(2):\n        if i == j:\n            break\n    print(i, j)",
    "explanation": "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Å —É—Å–ª–æ–≤–∏–µ–º –∏ break üß© –í –ø–µ—Ä–≤–æ–º –ø—Ä–æ—Ö–æ–¥–µ i=0, j=0 ‚Üí —Å—Ä–∞–±–æ—Ç–∞–µ—Ç break, –∏ —Ü–∏–∫–ª –ø—Ä–µ—Ä–≤—ë—Ç—Å—è. –í–æ –≤—Ç–æ—Ä–æ–º i=1, j —Å–Ω–æ–≤–∞ —Å—Ç–∞–Ω–µ—Ç 0 –∏ 1 ‚Üí –Ω–∞ j=1 —Å—Ä–∞–±–æ—Ç–∞–µ—Ç break. –¢–∞–∫ —á—Ç–æ –≤—ã–≤–æ–¥ –±—É–¥–µ—Ç: 0 0 –∏ 1 1. –≠—Ç–æ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è, –∫–æ–≥–¥–∞ –æ–Ω–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç.",
    "options": [
      {
        "text": "0 0 –∏ 1 1",
        "is_correct": true
      },
      {
        "text": "0 0 –∏ 1 0",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ –ø–∞—Ä—ã",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å –∏ —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ñ—É–Ω–∫—Ü–∏—è `enumerate()` üß† –û–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∞—Ä—É (–∏–Ω–¥–µ–∫—Å, –∑–Ω–∞—á–µ–Ω–∏–µ), —á—Ç–æ —É–¥–æ–±–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–±–æ—Ä–µ —Å–ø–∏—Å–∫–æ–≤. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –Ω—É–º–µ—Ä—É–µ—à—å –≥–æ—Å—Ç–µ–π –ø–æ –ø–æ—Ä—è–¥–∫—É, —á—Ç–æ–±—ã –∑–Ω–∞—Ç—å, –∫—Ç–æ –ø–µ—Ä–≤—ã–π, –∫—Ç–æ –≤—Ç–æ—Ä–æ–π –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.",
    "options": [
      {
        "text": "enumerate()",
        "is_correct": true
      },
      {
        "text": "indexof()",
        "is_correct": false
      },
      {
        "text": "range(len())",
        "is_correct": false
      },
      {
        "text": "keys()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nfor i in []:\n    print('Hi')\nprint('Done')",
    "explanation": "–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ü–∏–∫–ª –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –Ω–∏ —Ä–∞–∑—É üîÑ –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–æ–π–¥–∏—Å—å –ø–æ –ø—É—Å—Ç–æ–º—É –∫–æ—Ä–∏–¥–æ—Ä—É¬ª ‚Äî —Ç—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ—à—å –µ–≥–æ. –ü–æ—ç—Ç–æ–º—É —Å—Ä–∞–∑—É –≤—ã–≤–æ–¥–∏—Ç—Å—è 'Done'. –û—á–µ–Ω—å –≤–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –ø—É—Å—Ç—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç –æ—à–∏–±–æ–∫, –∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ –∑–∞–ø—É—Å–∫–∞—é—Ç —Ü–∏–∫–ª.",
    "options": [
      {
        "text": "'Done'",
        "is_correct": true
      },
      {
        "text": "'Hi'",
        "is_correct": false
      },
      {
        "text": "'Hi' –∏ 'Done'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ü–∏–∫–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏?",
    "explanation": "–¶–∏–∫–ª `for` —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏: —Å–ø–∏—Å–∫–∞–º–∏, —Å—Ç—Ä–æ–∫–∞–º–∏, —Å–ª–æ–≤–∞—Ä—è–º–∏, –º–Ω–æ–∂–µ—Å—Ç–≤–∞–º–∏ –∏ –¥–∞–∂–µ —Ñ–∞–π–ª–∞–º–∏ üß† –û–Ω —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏–µ–π, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç `while`, –≥–¥–µ –Ω—É–∂–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–∏–µ –≤—Ä—É—á–Ω—É—é. –ö–∞–∫ –±—É–¥—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Ä–æ–±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—Å—ë —Å–¥–µ–ª–∞–µ—Ç –∑–∞ —Ç–µ–±—è.",
    "options": [
      {
        "text": "for",
        "is_correct": true
      },
      {
        "text": "while",
        "is_correct": false
      },
      {
        "text": "loop",
        "is_correct": false
      },
      {
        "text": "foreach",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç else –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞?",
    "explanation": "–ë–ª–æ–∫ `else` –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∏–ª—Å—è **–Ω–µ —á–µ—Ä–µ–∑ `break`** ü§Ø –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —Ç—ã –ø—Ä–æ—à—ë–ª –≤–µ—Å—å –ø—É—Ç—å –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫ ‚Äî –ø–æ–ª—É—á–∏ –Ω–∞–≥—Ä–∞–¥—É¬ª. –ï—Å–ª–∏ –∂–µ —Ç—ã –≤—ã—à–µ–ª –∏–∑ —Ü–∏–∫–ª–∞ –¥–æ—Å—Ä–æ—á–Ω–æ, –±–ª–æ–∫ `else` –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—Å—è.",
    "options": [
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞",
        "is_correct": true
      },
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ break",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è",
        "is_correct": false
      },
      {
        "text": "–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª?",
    "explanation": "–¶–∏–∫–ª `while True` –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç `break` üîÑ –¢–∞–∫–æ–µ –±—ã–≤–∞–µ—Ç –ø–æ–ª–µ–∑–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Å–µ—Ä–≤–µ—Ä–∞—Ö –∏–ª–∏ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã, –≥–¥–µ –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–∂–∏–¥–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–æ –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω ‚Äî –∑–∞–±—É–¥—å –ø—Ä–æ `break`, –∏ —Ç–≤–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–∏—Å–Ω–µ—Ç.",
    "options": [
      {
        "text": "while True",
        "is_correct": true
      },
      {
        "text": "for _ in range(1000)",
        "is_correct": false
      },
      {
        "text": "loop:",
        "is_correct": false
      },
      {
        "text": "while False",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç pass –≤ —Ç–µ–ª–µ —Ü–∏–∫–ª–∞?",
    "explanation": "`pass` ‚Äî —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç ü§ê –ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–∞, –∫–æ–≥–¥–∞ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ü–∏–∫–ª–∞, –Ω–æ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤ –ø–∏—Å–∞—Ç—å –ª–æ–≥–∏–∫—É –≤–Ω—É—Ç—Ä–∏. –≠—Ç–æ –∫–∞–∫ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—É—Ä –¥–æ–º–∞ –∏ —Ä–µ—à–∏—Ç—å: ¬´–°–Ω–∞—á–∞–ª–∞ –ø–æ—Å—Ç—Ä–æ—é —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç, –ø–æ—Ç–æ–º —É–∂–µ –±—É–¥—É –∑–∞–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–Ω–∞—Ç—ã¬ª.",
    "options": [
      {
        "text": "–ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç",
        "is_correct": true
      },
      {
        "text": "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–∏–∫–ª",
        "is_correct": false
      },
      {
        "text": "–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏—é",
        "is_correct": false
      },
      {
        "text": "–í—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\ni = 0\nwhile i < 5:\n    i += 1\n    if i % 2 == 0:\n        continue\n    print(i, end=' ')",
    "explanation": "–≠—Ç–æ—Ç –∫–æ–¥ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç i, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—ë—Ç–Ω–æ–µ –ª–∏ —á–∏—Å–ª–æ, –∏ –µ—Å–ª–∏ –¥–∞ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –ø–µ—á–∞—Ç—å üîÑ –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–µ—á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞: 1 3 5. –≠—Ç–æ –∫–∞–∫ –ø—Ä–æ–π—Ç–∏ —á–µ—Ä–µ–∑ —á–∏—Å–ª–∞, –Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –≤—Å–ª—É—Ö —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥—è—Ç.",
    "options": [
      {
        "text": "1 3 5",
        "is_correct": true
      },
      {
        "text": "2 4",
        "is_correct": false
      },
      {
        "text": "1 2 3 4 5",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  }
]