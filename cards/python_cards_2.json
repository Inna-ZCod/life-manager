[
  {
    "category": "python",
    "question": "–ö–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–ª–æ–∫ else —É —Ü–∏–∫–ª–∞?",
    "explanation": "–ë–ª–æ–∫ else —É —Ü–∏–∫–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è **—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∏–ª—Å—è ¬´–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º¬ª –æ–±—Ä–∞–∑–æ–º**, —Ç–æ –µ—Å—Ç—å **–Ω–µ —á–µ—Ä–µ–∑ `break`** ü§Ø –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—à—å—Å—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Äî —Ç–æ–≥–¥–∞ –≤ –∫–æ–Ω—Ü–µ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å: ¬´–ì–æ—Ç–æ–≤–æ!¬ª. –ê –µ—Å–ª–∏ –ø—Ä–µ—Ä–≤–∞–ª—Å—è ‚Äî `break`, –∏ `else` –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è.",
    "options": [
      {
        "text": "–ï—Å–ª–∏ –Ω–µ –±—ã–ª–æ break",
        "is_correct": true
      },
      {
        "text": "–ü—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ",
        "is_correct": false
      },
      {
        "text": "–ü–æ—Å–ª–µ continue",
        "is_correct": false
      },
      {
        "text": "–ü—Ä–∏ –æ—à–∏–±–∫–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nfor i in range(3):\n    if i == 3:\n        break\n    print(i)\nelse:\n    print('Done')",
    "explanation": "–¶–∏–∫–ª for –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 2 üîÑ –£—Å–ª–æ–≤–∏–µ `i == 3` –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è ‚Üí break –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç ‚Üí else –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ –∏–∑ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ –ø—Ä–∏–≤–µ–ª–∞ –∫ –≤—ã—Ö–æ–¥—É ‚Äî —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º¬ª. –ü–æ—ç—Ç–æ–º—É: 0, 1, 2, Done.",
    "options": [
      {
        "text": "0 1 2 Done",
        "is_correct": true
      },
      {
        "text": "0 1 2",
        "is_correct": false
      },
      {
        "text": "Done",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å else —Å while?",
    "explanation": "–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –°–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –¥–ª—è `for` –∏ `while` üîÑ –†–∞–∑–Ω–∏—Ü–∞ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º, –∫–∞–∫ —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è. –ï—Å–ª–∏ `while` –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∏–∑-–∑–∞ —É—Å–ª–æ–≤–∏—è ‚Üí else –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è. –ï—Å–ª–∏ –∏–∑-–∑–∞ `break` ‚Üí –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª: ¬´–Ø –∑–∞–∫–æ–Ω—á–∏–ª –ø–æ —Å–≤–æ–µ–π –≤–æ–ª–µ¬ª, –∏–ª–∏ ¬´–º–µ–Ω—è –ø—Ä–µ—Ä–≤–∞–ª–∏¬ª.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å for",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å break",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º?",
    "explanation": "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ—à—å —ç—Ç–∞–∂–∏ –¥–æ–º–∞, –∞ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –∫–æ–º–Ω–∞—Ç—ã üè¢ –í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª ‚Äî —ç—Ç–æ —ç—Ç–∞–∂–∏, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π ‚Äî –∫–æ–º–Ω–∞—Ç—ã. –ü–µ—Ä–≤—ã–º –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª, –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∑–∞—à—ë–ª –Ω–∞ –ø–µ—Ä–≤—ã–π —ç—Ç–∞–∂ ‚Üí –æ–±–æ—à—ë–ª –≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã ‚Üí –ø–µ—Ä–µ—à—ë–ª –Ω–∞ –≤—Ç–æ—Ä–æ–π.",
    "options": [
      {
        "text": "–í–Ω–µ—à–Ω–∏–π",
        "is_correct": true
      },
      {
        "text": "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π",
        "is_correct": false
      },
      {
        "text": "–û–±–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ",
        "is_correct": false
      },
      {
        "text": "–°–ª—É—á–∞–π–Ω—ã–π",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfor i in range(2):\n    for j in range(2):\n        print(i, j)",
    "explanation": "–ó–¥–µ—Å—å –¥–≤–∞ –≤–Ω–µ—à–Ω–∏—Ö —à–∞–≥–∞ (i=0 –∏ i=1), –∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∏—Ö –¥–≤–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö (j=0 –∏ j=1) üîÅ –¢–æ –µ—Å—Ç—å –≤—ã–≤–æ–¥ –±—É–¥–µ—Ç: 0 0, 0 1, 1 0, 1 1. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–æ–π–¥–∏—Å—å –ø–æ –¥–≤—É–º —ç—Ç–∞–∂–∞–º, –∏ –Ω–∞ –∫–∞–∂–¥–æ–º –ø—Ä–æ–≤–µ—Ä—å –¥–≤–µ –∫–æ–º–Ω–∞—Ç—ã¬ª. –í—Å–µ–≥–æ 4 –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏.",
    "options": [
      {
        "text": "0 0 0 1 1 0 1 1",
        "is_correct": true
      },
      {
        "text": "0 0 1 1",
        "is_correct": false
      },
      {
        "text": "0 1 0 1",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª?",
    "explanation": "–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ `break` –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç **–±–ª–∏–∂–∞–π—à–∏–π –∫ –Ω–µ–º—É —Ü–∏–∫–ª** ü§Ø –¢–æ –µ—Å—Ç—å –µ—Å–ª–∏ –æ–Ω –≤–Ω—É—Ç—Ä–∏ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–Ω. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª –æ—Å–º–æ—Ç—Ä –∫–æ–º–Ω–∞—Ç –Ω–∞ —ç—Ç–∞–∂–µ –∏ —Å–∫–∞–∑–∞–ª: ¬´–ü–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–∂—É¬ª.",
    "options": [
      {
        "text": "break",
        "is_correct": true
      },
      {
        "text": "break outer",
        "is_correct": false
      },
      {
        "text": "continue",
        "is_correct": false
      },
      {
        "text": "exit",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏—Ç–µ—Ä–∞—Ü–∏—é –≤–Ω–µ—à–Ω–µ–≥–æ —Ü–∏–∫–ª–∞?",
    "explanation": "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏—Ç–µ—Ä–∞—Ü–∏—é –≤–Ω–µ—à–Ω–µ–≥–æ —Ü–∏–∫–ª–∞, –ø—Ä–∏–¥—ë—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –º–µ—Ç–∫—É –∏–ª–∏ `continue` –≤–Ω—É—Ç—Ä–∏ —É—Å–ª–æ–≤–∏—è üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å if-–ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤—ã–∑–≤–∞—Ç—å continue –≤–æ –≤–Ω–µ—à–Ω–µ–º —Ü–∏–∫–ª–µ. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–≠—Ç–æ—Ç —ç—Ç–∞–∂ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É¬ª.",
    "options": [
      {
        "text": "continue",
        "is_correct": true
      },
      {
        "text": "continue inner",
        "is_correct": false
      },
      {
        "text": "skip",
        "is_correct": false
      },
      {
        "text": "pass",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –≤–ª–æ–∂–∏—Ç—å while –≤–Ω—É—Ç—Ä—å for?",
    "explanation": "–î–∞, –∫–æ–Ω–µ—á–Ω–æ! Python –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ—à–∏–≤–∞—Ç—å —Ç–∏–ø—ã —Ü–∏–∫–ª–æ–≤ –∫–∞–∫ —É–≥–æ–¥–Ω–æ üß© –¢—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å `while` –≤–Ω—É—Ç—Ä–∏ `for`, `for` –≤–Ω—É—Ç—Ä–∏ `while`, –¥–∞–∂–µ `while` –≤–Ω—É—Ç—Ä–∏ `while`. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –∑–∞–±—ã–≤–∞—Ç—å –ø—Ä–æ –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–æ–≤, –∏–Ω–∞—á–µ –º–æ–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ª—É–ø.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ for –≤ for",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å break",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nfound = False\nfor i in range(3):\n    for j in range(3):\n        if i * j == 4:\n            found = True\n            break\n    if found:\n        break\nprint(i, j)",
    "explanation": "–¶–∏–∫–ª –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è, –∫–æ–≥–¥–∞ i=2 –∏ j=2 ‚Üí i*j=4 üß† –ü—Ä–∏ —ç—Ç–æ–º break –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª, –ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –æ—Ç–¥–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å found –∏ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ. –≠—Ç–æ –∫–∞–∫ –Ω–∞–π—Ç–∏ –∫–ª—é—á –≤ –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–Ω–∞—Ç –∏ —Å—Ä–∞–∑—É —É–π—Ç–∏ –∏–∑ –¥–æ–º–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç: 2 2",
    "options": [
      {
        "text": "2 2",
        "is_correct": true
      },
      {
        "text": "1 2",
        "is_correct": false
      },
      {
        "text": "0 0",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ü–æ—á–µ–º—É –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω—ã–º–∏?",
    "explanation": "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –∫–∞–∂–¥—É—é –∫–æ–º–Ω–∞—Ç—É –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–∂–µ –¥–æ–º–∞ üè¢ –ï—Å–ª–∏ –¥–æ–º –±–æ–ª—å—à–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100 —ç—Ç–∞–∂–µ–π –ø–æ 100 –∫–æ–º–Ω–∞—Ç), —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å 10‚ÄØ000 —à–∞–≥–æ–≤. –≠—Ç–æ –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(n¬≤) ‚Äî –æ–Ω–∞ —Ä–∞—Å—Ç—ë—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ üìâ –ò —á–µ–º –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö ‚Äî —Ç–µ–º –¥–æ–ª—å—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–¥.",
    "options": [
      {
        "text": "–ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É—Å–∫–æ—Ä–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã?",
    "explanation": "–ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–µ –ø—Ä–∏—ë–º—ã, –∫–∞–∫ –≤—ã—Ö–æ–¥ –ø—Ä–∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤ –∏–ª–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π üîç –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—ã –∏—â–µ—à—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –∏ –æ–Ω–æ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞–π –ø–æ–∏—Å–∫. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –Ω–∞—à—ë–ª –∫–ª—é—á –∏ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã.",
    "options": [
      {
        "text": "–í—ã—Ö–æ–¥ –ø—Ä–∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ for",
        "is_correct": false
      },
      {
        "text": "–£–±—Ä–∞—Ç—å break",
        "is_correct": false
      },
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å continue",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö –∏—Ç–µ—Ä–∞—Ü–∏–π –≤–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º —Ü–∏–∫–ª–µ?",
    "explanation": "–õ–∏—à–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –∏–∑–±–µ–∂–∞—Ç—å —Å –ø–æ–º–æ—â—å—é `break`, —Ñ–ª–∞–≥–æ–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ üß† –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –∏—â–µ—à—å –∏–º—è –≤ —Å–ø–∏—Å–∫–µ –∏ –Ω–∞—à—ë–ª –µ–≥–æ ‚Äî –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å. –¢–∞–∫–∏–µ –º–∏–∫—Ä–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —ç–∫–æ–Ω–æ–º—è—Ç –≤—Ä–µ–º—è, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö.",
    "options": [
      {
        "text": "break –ø—Ä–∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ",
        "is_correct": true
      },
      {
        "text": "continue –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏",
        "is_correct": false
      },
      {
        "text": "pass –≤–º–µ—Å—Ç–æ –∫–æ–¥–∞",
        "is_correct": false
      },
      {
        "text": "range(1000)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º?",
    "explanation": "–î–∞, —á–∞—Å—Ç–æ –º–æ–∂–Ω–æ! –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç–∞—é—Ç —Å O(1) –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ üöÄ –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—ã –∏—â–µ—à—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Å–ø–∏—Å–∫–∞–º–∏, –ª—É—á—à–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏ –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –æ–¥–Ω–æ–º—É —Å–ø–∏—Å–∫—É. –≠—Ç–æ —Å–∏–ª—å–Ω–æ —É—Å–∫–æ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–∞—Ö –¥–∞–Ω–Ω—ã—Ö.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å–æ —Å–ø–∏—Å–∫–∞–º–∏",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å —á–∏—Å–ª–∞–º–∏",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω?\n\n# –í–∞—Ä–∏–∞–Ω—Ç A\nfor i in list_a:\n    if i in list_b:\n        print(i)\n\n# –í–∞—Ä–∏–∞–Ω—Ç B\nset_b = set(list_b)\nfor i in list_a:\n    if i in set_b:\n        print(i)",
    "explanation": "–í–∞—Ä–∏–∞–Ω—Ç B —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ `set` –∏–º–µ–µ—Ç O(1) —Å–ª–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞, –∞ `list` ‚Äî O(n) üß† –¢–æ –µ—Å—Ç—å –≤ –≤–∞—Ä–∏–∞–Ω—Ç–µ A –∫–∞–∂–¥—ã–π –ø–æ–∏—Å–∫ –≤–Ω—É—Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ê –≤ –≤–∞—Ä–∏–∞–Ω—Ç–µ B –º—ã –¥–µ–ª–∞–µ–º –æ–¥–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –∞ –ø–æ—Ç–æ–º –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫. –ö–∞–∫ –Ω–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É, –∞ –Ω–µ –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞—è –≤—Å—ë –ø–æ–¥—Ä—è–¥.",
    "options": [
      {
        "text": "B",
        "is_correct": true
      },
      {
        "text": "A",
        "is_correct": false
      },
      {
        "text": "–û–±–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã",
        "is_correct": false
      },
      {
        "text": "–ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–±—Ä–∞—Ç—å —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ —Ü–∏–∫–ª–æ–º?",
    "explanation": "–°—Ç—Ä–æ–∫–∞ ‚Äî —ç—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –∏ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –Ω–µ–π –æ–±—ã—á–Ω—ã–º —Ü–∏–∫–ª–æ–º `for` üß† –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ ‚Äî —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –±—É–∫–≤, –∏ —Ç—ã –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—à—å –∏—Ö –æ–¥–Ω—É –∑–∞ –¥—Ä—É–≥–æ–π. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–∏–º–≤–æ–ª–æ–≤.",
    "options": [
      {
        "text": "for char in s:",
        "is_correct": true
      },
      {
        "text": "for i in range(s):",
        "is_correct": false
      },
      {
        "text": "while i < len(s):",
        "is_correct": false
      },
      {
        "text": "for letter in s()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\ns = 'abc'\nfor c in s:\n    print(c.upper())",
    "explanation": "–¶–∏–∫–ª –ø–µ—Ä–µ–±–µ—Ä—ë—Ç –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏ `'a'`, `'b'`, `'c'` –∏ –≤—ã–∑–æ–≤–µ—Ç –º–µ—Ç–æ–¥ `upper()` üì£ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç: A, B, C ‚Äî –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–í–æ–∑—å–º–∏ –∫–∞–∂–¥—É—é –±—É–∫–≤—É –∏ —Å–¥–µ–ª–∞–π –µ—ë –∑–∞–≥–ª–∞–≤–Ω–æ–π¬ª. –ü—Ä–æ—Å—Ç–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ.",
    "options": [
      {
        "text": "A B C",
        "is_correct": true
      },
      {
        "text": "'ABC'",
        "is_correct": false
      },
      {
        "text": "abc",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–±—Ä–∞—Ç—å –ø–∞—Ä—ã –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä–µ?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π –º–µ—Ç–æ–¥ `.items()` üîÑ –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂–∏ –∏–∑ –∫–ª—é—á–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏–π. –¢–∞–∫ —Ç—ã –º–æ–∂–µ—à—å –ª–µ–≥–∫–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–±–µ–∏–º–∏ —á–∞—Å—Ç—è–º–∏ —Å–ª–æ–≤–∞—Ä—è. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ª—é–¥–µ–π —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º ‚Äî –∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–∫–∞–∑–∞—Ç—å –∏ –∏–º—è, –∏ –≤–æ–∑—Ä–∞—Å—Ç.",
    "options": [
      {
        "text": "for k, v in d.items():",
        "is_correct": true
      },
      {
        "text": "for key in d:",
        "is_correct": false
      },
      {
        "text": "for v in d.values():",
        "is_correct": false
      },
      {
        "text": "for k in d.keys():",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –ø–æ —Å—Ç—Ä–æ–∫–∞–º?",
    "explanation": "–§–∞–π–ª –º–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ —Ü–∏–∫–ª `for line in file:` üìñ –≠—Ç–æ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤–µ—Å—å —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç—å —Å—Ä–∞–∑—É. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —á–∏—Ç–∞–µ—à—å –∫–Ω–∏–≥—É –ø–æ —Å—Ç—Ä–æ—á–∫–∞–º, –∞ –Ω–µ –¥–µ—Ä–∂–∏—à—å –≤—Å—é –∫–Ω–∏–≥—É –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π.",
    "options": [
      {
        "text": "for line in open('file.txt'):",
        "is_correct": true
      },
      {
        "text": "readlines() –≤ for",
        "is_correct": false
      },
      {
        "text": "while line = input():",
        "is_correct": false
      },
      {
        "text": "with open(...) as f: f.read()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä–µ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª?",
    "explanation": "–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –∫–ª—é—á–∞–º –∏ –º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–∏—Ö üß† –ù–∞–ø—Ä–∏–º–µ—Ä: `for k in d: d[k] *= 2`. –ù–æ –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω: –µ—Å–ª–∏ —Ç—ã –∏–∑–º–µ–Ω–∏—à—å —Å–∞–º —Å–ª–æ–≤–∞—Ä—å –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ–±–∞–≤–∏—à—å –∏–ª–∏ —É–¥–∞–ª–∏—à—å –∫–ª—é—á), –º–æ–≥—É—Ç –±—ã—Ç—å —Å—é—Ä–ø—Ä–∏–∑—ã üòÖ",
    "options": [
      {
        "text": "for k in d: d[k] *= 2",
        "is_correct": true
      },
      {
        "text": "for k, v in d: v *= 2",
        "is_correct": false
      },
      {
        "text": "for v in d.values(): v *= 2",
        "is_correct": false
      },
      {
        "text": "d = {v*2 for v in d}",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\ndata = {'a': 1, 'b': 2}\nfor key in data:\n    data[key] += 10\nprint(data)",
    "explanation": "–¶–∏–∫–ª –ø—Ä–æ–π–¥—ë—Ç—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É –∫–ª—é—á—É —Å–ª–æ–≤–∞—Ä—è –∏ —É–≤–µ–ª–∏—á–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 10 üìà –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –∏–∑–º–µ–Ω—è–µ–º —Å–∞–º —Å–ª–æ–≤–∞—Ä—å –ø–æ —Å—Å—ã–ª–∫–µ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç: {'a': 11, 'b': 12}. –≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π –∏ –¥–æ–±–∞–≤–∏—Ç—å –∫ –∫–∞–∂–¥–æ–º—É –Ω–æ–º–µ—Ä—É +10. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–ª–æ–≤–∞—Ä—è –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞, –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—à—å –æ—à–∏–±–∫—É!",
    "options": [
      {
        "text": "{'a': 11, 'b': 12}",
        "is_correct": true
      },
      {
        "text": "{'a': 1, 'b': 2}",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "{'a': 10, 'b': 10}",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\nfor i in range(5.0):\n    print(i)",
    "explanation": "–§—É–Ω–∫—Ü–∏—è `range()` –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ (int), –∞ –Ω–µ –¥—Ä–æ–±–Ω—ã–µ (float) ü§Ø –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—ã —Å —à–∞–≥–æ–º 0.5 ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞. –í Python —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤–∞–∂–Ω—ã, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö.",
    "options": [
      {
        "text": "range() –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç float",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –¥–≤–æ–µ—Ç–æ—á–∏—è",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –æ—Ç—Å—Ç—É–ø–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ–≤–µ—Ä–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\ni = 0\nwhile i < 5:\nprint(i)\ni += 1",
    "explanation": "–ó–¥–µ—Å—å –Ω–∞—Ä—É—à–µ–Ω –æ—Ç—Å—Ç—É–ø —É —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ `while` üîç –í Python –æ—Ç—Å—Ç—É–ø—ã ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∏–ª—å, –∞ —á–∞—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞. –ï—Å–ª–∏ —Ç—ã –Ω–µ –≤—ã–¥–µ–ª–∏—à—å —Ç–µ–ª–æ —Ü–∏–∫–ª–∞, Python –Ω–µ –ø–æ–π–º—ë—Ç, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª —Ä–µ—Ü–µ–ø—Ç, –Ω–æ –∑–∞–±—ã–ª —Ä–∞–∑–¥–µ–ª–∏—Ç—å —à–∞–≥–∏ –ø–æ –ø—É–Ω–∫—Ç–∞–º.",
    "options": [
      {
        "text": "–ù–µ—Ç –æ—Ç—Å—Ç—É–ø–∞ —É —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞",
        "is_correct": true
      },
      {
        "text": "–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π",
        "is_correct": false
      },
      {
        "text": "–ù–µ–≤–µ—Ä–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏?",
    "explanation": "–ò–∑–º–µ–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏ –æ–ø–∞—Å–Ω–æ ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–ª–∏ –≤–æ–π—Ç–∏ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª üîÑ –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—à—å –∫–Ω–∏–≥–∏ –Ω–∞ –ø–æ–ª–∫–µ, –∞ –∫—Ç–æ-—Ç–æ –∏—Ö –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ —É–±–∏—Ä–∞–µ—Ç ‚Äî —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø—É—Ç–∞—Ç—å—Å—è. –õ—É—á—à–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–ø–∏–µ–π —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã.",
    "options": [
      {
        "text": "–ú–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã",
        "is_correct": true
      },
      {
        "text": "–í—Å—ë —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "is_correct": false
      },
      {
        "text": "–°–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω–µ—Ç –ø—É—Å—Ç—ã–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\nfor x in [1, 2, 3]\n    print(x)",
    "explanation": "–ü–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ `for x in [1, 2, 3]` –∑–∞–±—ã—Ç–æ –¥–≤–æ–µ—Ç–æ—á–∏–µ `:` üö® –ë–µ–∑ –Ω–µ–≥–æ Python –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç, –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–µ–ª–æ —Ü–∏–∫–ª–∞. –≠—Ç–æ –∫–∞–∫ –Ω–∞—á–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ –∑–Ω–∞–∫–∞ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è ‚Äî —Å–º—ã—Å–ª —Ç–µ—Ä—è–µ—Ç—Å—è. –¢–∞–∫–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ª–µ–≥–∫–æ –Ω–∞–π—Ç–∏, –Ω–æ –≤–∞–∂–Ω–æ –∏—Ö –∏–∑–±–µ–≥–∞—Ç—å.",
    "options": [
      {
        "text": "–ù–µ—Ç –¥–≤–æ–µ—Ç–æ—á–∏—è –ø–æ—Å–ª–µ for",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ –æ—Ç—Å—Ç—É–ø–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ–≤–µ—Ä–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
        "is_correct": false
      },
      {
        "text": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ü–æ—á–µ–º—É —Ü–∏–∫–ª –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º?",
    "explanation": "–¶–∏–∫–ª `while` –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª–æ–∂–Ω—ã–º üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—ã –∑–∞–±—ã–ª —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á—ë—Ç—á–∏–∫ –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü–æ–∫–∞ —è –Ω–µ –ø—Ä–∏–¥—É –¥–æ–º–æ–π ‚Äî –∏–¥—É¬ª, –Ω–æ –Ω–∏ —Ä–∞–∑—É –Ω–µ —Å–¥–µ–ª–∞–ª —à–∞–≥–∞. –ù—É–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã —Ü–∏–∫–ª –º–æ–≥ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è.",
    "options": [
      {
        "text": "–£—Å–ª–æ–≤–∏–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω for",
        "is_correct": false
      },
      {
        "text": "–ï—Å—Ç—å break",
        "is_correct": false
      },
      {
        "text": "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±—ä—è–≤–ª–µ–Ω–∞ –≤–Ω–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø—Ä–∏ —Ç–∞–∫–æ–º –∫–æ–¥–µ?\n\nfor i in range(len(lst)):\n    if lst[i] == target:\n        lst.pop(i)",
    "explanation": "–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –æ—à–∏–±–∫–∏ –∏–ª–∏ –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã üß† –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—ã —É–¥–∞–ª–∏–ª —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 3, —Ç–æ —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∞–Ω–µ—Ç –Ω–∞ –µ–≥–æ –º–µ—Å—Ç–æ, –Ω–æ —Å—á—ë—Ç—á–∏–∫ `i` —É–∂–µ —É–π–¥—ë—Ç –¥–∞–ª—å—à–µ. –≠—Ç–æ –∫–∞–∫ —É–±–∏—Ä–∞—Ç—å –∫–Ω–∏–≥–∏ —Å –ø–æ–ª–∫–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É, –Ω–æ –∫–æ–≥–¥–∞ –æ–¥–Ω–∞ —É–±—Ä–∞–Ω–∞, —Å–ª–µ–¥—É—é—â–∞—è –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –Ω–∞ –µ—ë –º–µ—Å—Ç–æ ‚Äî –∏ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–¥–Ω—É.",
    "options": [
      {
        "text": "–≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω—ã",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "is_correct": false
      },
      {
        "text": "–°–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω–µ—Ç –ø—É—Å—Ç—ã–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–∞–π—Ç–∏ –≤—Å–µ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –≤ —Å–ø–∏—Å–∫–µ?\n\nnumbers = [1, 2, 3, 4, 5]",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª `for` –∏ –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è `% 2 == 0` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfor num in numbers:\n    if num % 2 == 0:\n        print(num)\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å —è–±–ª–æ–∫–∏ –∏ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ –≤—Ç–æ—Ä–æ–µ. –û—á–µ–Ω—å —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.",
    "options": [
      {
        "text": "num % 2 == 0",
        "is_correct": true
      },
      {
        "text": "num // 2 == 0",
        "is_correct": false
      },
      {
        "text": "num & 1 == 0",
        "is_correct": false
      },
      {
        "text": "num.is_even()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –±—É–∫–≤ –≤ —Å—Ç—Ä–æ–∫–µ?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å –∏–ª–∏ `collections.Counter()` üß† –ü—Ä–∏–º–µ—Ä:\n\n```python\nfrom collections import Counter\ntext = 'hello'\ncounts = Counter(text)\n```\n\nCounter —Å–æ–∑–¥–∞—ë—Ç —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–∏ ‚Äî –±—É–∫–≤—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. –≠—Ç–æ –∫–∞–∫ –ø–æ—Å—á–∏—Ç–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∫–∞–∂–¥—ã–π –≥–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏–ª –∫ —Ç–µ–±–µ –≤ –≥–æ—Å—Ç–∏.",
    "options": [
      {
        "text": "Counter(text)",
        "is_correct": true
      },
      {
        "text": "dict.fromkeys(text, 0)",
        "is_correct": false
      },
      {
        "text": "text.count() –≤ —Ü–∏–∫–ª–µ",
        "is_correct": false
      },
      {
        "text": "len(text)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é?",
    "explanation": "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Python –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ `def`, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º —Å–ª–µ–¥—É–µ—Ç –∏–º—è –∏ –∫—Ä—É–≥–ª—ã–µ —Å–∫–æ–±–∫–∏ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef greet():\n    print('–ü—Ä–∏–≤–µ—Ç')\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –ø—Ä–∏–¥—É–º–∞–ª –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ¬ª. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –¥–µ–π—Å—Ç–≤–∏–µ –º–Ω–æ–≥–æ —Ä–∞–∑.",
    "options": [
      {
        "text": "def",
        "is_correct": true
      },
      {
        "text": "function",
        "is_correct": false
      },
      {
        "text": "func",
        "is_correct": false
      },
      {
        "text": "lambda",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é?",
    "explanation": "–ó–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ **–ø–∞—Ä–∞–º–µ—Ç—Ä—ã**, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ —Å–∫–æ–±–∫–∞—Ö –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef greet(name):\n    print(f'–ü—Ä–∏–≤–µ—Ç, {name}')\n\ngreet('–ê–Ω–Ω–∞')\n```\n\n–ó–¥–µ—Å—å `'–ê–Ω–Ω–∞'` ‚Äî —ç—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä `name`. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª —Ä–µ—Ü–µ–ø—Ç, –∞ —Ç–µ–ø–µ—Ä—å –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—à—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã.",
    "options": [
      {
        "text": "–ß–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã",
        "is_correct": true
      },
      {
        "text": "–í —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      },
      {
        "text": "–ß–µ—Ä–µ–∑ return",
        "is_correct": false
      },
      {
        "text": "–ß–µ—Ä–µ–∑ global",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ `return` üì§ –ö–∞–∫ —Ç–æ–ª—å–∫–æ Python –≤—Å—Ç—Ä–µ—á–∞–µ—Ç `return`, –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –≠—Ç–æ –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—å –ø–∏—Å—å–º–æ —Ñ—Ä–∞–∑–æ–π ¬´–° —É–≤–∞–∂–µ–Ω–∏–µ–º¬ª –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –∞–¥—Ä–µ—Å–∞—Ç—É.",
    "options": [
      {
        "text": "return",
        "is_correct": true
      },
      {
        "text": "yield",
        "is_correct": false
      },
      {
        "text": "output",
        "is_correct": false
      },
      {
        "text": "print",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–æ –µ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏—è?",
    "explanation": "–ù–µ—Ç, –≤ Python –Ω–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∞ –±—ã–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞ üö´ –ö–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑, –∏ –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –µ—â—ë –Ω–µ –∑–Ω–∞–µ—Ç –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –æ–Ω –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–æ–ø—Ä–æ—Å–∏–ª –¥—Ä—É–≥–∞ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ, –Ω–æ –µ—â—ë –Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª –µ–º—É, —á—Ç–æ –∏–º–µ–Ω–Ω–æ.",
    "options": [
      {
        "text": "–ù–µ—Ç",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @staticmethod",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å import",
        "is_correct": false
      },
      {
        "text": "–î–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π?",
    "explanation": "–û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ (scope) –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –≥–¥–µ –≤ –∫–æ–¥–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é üåê –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –Ω–µ—ë ‚Äî —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å. –¢–µ, —á—Ç–æ —Å–æ–∑–¥–∞–Ω—ã –≤–Ω–µ ‚Äî –≥–ª–æ–±–∞–ª—å–Ω—ã–µ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∫–ª—é—á–∏ (–ª–æ–∫–∞–ª—å–Ω—ã–µ) –∏ —Ä–∞–±–æ—á–∏–µ (–≥–ª–æ–±–∞–ª—å–Ω—ã–µ). –û–¥–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –¥–æ–º–∞, –¥—Ä—É–≥–∏–µ ‚Äî –≤–µ–∑–¥–µ.",
    "options": [
      {
        "text": "–ì–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞",
        "is_correct": true
      },
      {
        "text": "–ö–∞–∫ –¥–æ–ª–≥–æ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–ö–∞–∫–æ–µ —É –Ω–µ—ë –∑–Ω–∞—á–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ï—ë —Ç–∏–ø",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –Ω–µ—Ç üö´ –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω—É–∂–Ω–æ —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å `global`. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –æ–±—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç ‚Äî —á—Ç–æ–±—ã –≤–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞—è–≤–∏—Ç—å: ¬´–Ø —Å–æ–±–∏—Ä–∞—é—Å—å –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å¬ª.",
    "options": [
      {
        "text": "–î–∞, —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º global",
        "is_correct": true
      },
      {
        "text": "–î–∞, –≤—Å–µ–≥–¥–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç, –Ω–∏–∫–æ–≥–¥–∞",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ –º–æ–¥—É–ª–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef modify_list(lst):\n    lst.append(4)\n\nmy_list = [1, 2, 3]\nmodify_list(my_list)\nprint(my_list)",
    "explanation": "–ü–æ—Å–∫–æ–ª—å–∫—É —Å–ø–∏—Å–∫–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ, –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–≤–ª–∏—è—é—Ç –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫ üîÑ –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç —á–∏—Å–ª–æ 4 –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ ‚Üí –≤—ã–≤–æ–¥ –±—É–¥–µ—Ç `[1, 2, 3, 4]`. –≠—Ç–æ –∫–∞–∫ –¥–∞—Ç—å –∫–æ–º—É-—Ç–æ —Ä—É—á–∫—É –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –≤ —Ç–≤–æ–π –±–ª–æ–∫–Ω–æ—Ç ‚Äî —Ç—ã –ø–æ–ª—É—á–∏—à—å –æ–±—Ä–∞—Ç–Ω–æ —Ç–æ—Ç –∂–µ –±–ª–æ–∫–Ω–æ—Ç, –Ω–æ —É–∂–µ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏.",
    "options": [
      {
        "text": "[1, 2, 3, 4]",
        "is_correct": true
      },
      {
        "text": "[1, 2, 3]",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞?",
    "explanation": "–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä—è–º–æ –≤ —Å–∫–æ–±–∫–∞—Ö –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef greet(name='–ì–æ—Å—Ç—å'):\n    print(f'–ü—Ä–∏–≤–µ—Ç, {name}')\n```\n\n–¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–µ—Ä–µ–¥–∞–ª –∏–º—è ‚Äî –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è '–ì–æ—Å—Ç—å'. –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ —Å –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∏–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ.",
    "options": [
      {
        "text": "name='–ì–æ—Å—Ç—å'",
        "is_correct": true
      },
      {
        "text": "name=Guest",
        "is_correct": false
      },
      {
        "text": "default name",
        "is_correct": false
      },
      {
        "text": "name is optional",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef add(a, b=2):\n    return a + b\n\nprint(add(3))",
    "explanation": "–ü–æ—Å–∫–æ–ª—å–∫—É –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (`b=2`), –≤—ã–∑–æ–≤ `add(3)` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç: `3 + 2 = 5` üì£ –≠—Ç–æ —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–∞—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è, –∏ –Ω–µ—Ç –Ω—É–∂–¥—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –∫–∞–∂–¥—ã–π —Ä–∞–∑.",
    "options": [
      {
        "text": "5",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "3",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?",
    "explanation": "–ú–æ–∂–Ω–æ, –Ω–æ —ç—Ç–æ –æ–ø–∞—Å–Ω–æ üõë –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ ‚Äî –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏. –ï—Å–ª–∏ —Ç—ã –∏–∑–º–µ–Ω–∏—à—å —Å–ø–∏—Å–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –æ–Ω –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–º –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—ã–∑–æ–≤–µ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ–¥–∞–ª –∫–æ—Ä–∑–∏–Ω—É, –∞ –ø–æ—Ç–æ–º –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π –µ—ë –∑–∞–ø–æ–ª–Ω–∏–ª ‚Äî —Ç—ã –ø–æ–ª—É—á–∏—à—å –Ω–µ —Ç–æ, —á—Ç–æ –æ–∂–∏–¥–∞–ª.",
    "options": [
      {
        "text": "–ú–æ–∂–Ω–æ, –Ω–æ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, –Ω–µ–ª—å–∑—è",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å tuple",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `*args` üîÑ –û–Ω —Å–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ –∫–æ—Ä—Ç–µ–∂. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef sum_all(*numbers):\n    return sum(numbers)\n\nsum_all(1, 2, 3)  # 6\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –∑–Ω–∞—é, —Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª —Ç—ã –º–Ω–µ –¥–∞—à—å, –Ω–æ —è —Å–ª–æ–∂—É –∏—Ö –≤—Å–µ¬ª. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ —á–∏—Å–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∑–∞—Ä–∞–Ω–µ–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ.",
    "options": [
      {
        "text": "*args",
        "is_correct": true
      },
      {
        "text": "**kwargs",
        "is_correct": false
      },
      {
        "text": "args...",
        "is_correct": false
      },
      {
        "text": "varargs",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `**kwargs` üîÑ –û–Ω —Å–æ–±–∏—Ä–∞–µ—Ç –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ —Å–ª–æ–≤–∞—Ä—å. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef print_kwargs(**data):\n    for key, value in data.items():\n        print(f'{key}: {value}')\n\nprint_kwargs(name='Anna', age=25)\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–±–æ—Ä –ø–æ–¥–∞—Ä–∫–æ–≤ —Å —ç—Ç–∏–∫–µ—Ç–∫–∞–º–∏ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –∏—Ö –ø–æ –æ–¥–Ω–æ–π, –ø—Ä–æ–≤–µ—Ä—è—è, —á—Ç–æ –≥–¥–µ –ª–µ–∂–∏—Ç.",
    "options": [
      {
        "text": "**kwargs",
        "is_correct": true
      },
      {
        "text": "*args",
        "is_correct": false
      },
      {
        "text": "kwargs...",
        "is_correct": false
      },
      {
        "text": "dict_args",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ lambda-—Ñ—É–Ω–∫—Ü–∏—è?",
    "explanation": "Lambda ‚Äî —ç—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É üß† –û–±—ã—á–Ω–æ –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –æ—Å–æ–±–µ–Ω–Ω–æ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nsquare = lambda x: x * x\nprint(square(5))  # 25\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –±—ã—Å—Ç—Ä—É—é –∑–∞–º–µ—Ç–∫—É –≤–º–µ—Å—Ç–æ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ —ç—Å—Å–µ ‚Äî –±—ã—Å—Ç—Ä–æ –∏ –∫ –¥–µ–ª—É.",
    "options": [
      {
        "text": "–ê–Ω–æ–Ω–∏–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è",
        "is_correct": true
      },
      {
        "text": "–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è",
        "is_correct": false
      },
      {
        "text": "–ú–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞",
        "is_correct": false
      },
      {
        "text": "–û–±—ä–µ–∫—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef func(a, lst=[]):\n    lst.append(a)\n    return lst\n\nprint(func(1))\nprint(func(2))",
    "explanation": "–ò–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –æ–±–∞ –≤—ã–∑–æ–≤–∞ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç ü§Ø –ü–æ—ç—Ç–æ–º—É –≤—ã–≤–æ–¥ –±—É–¥–µ—Ç:\n\n```\n[1]\n[1, 2]\n```\n\n–≠—Ç–æ —á–∞—Å—Ç–∞—è –ª–æ–≤—É—à–∫–∞! –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–∞–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è, –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `None` –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏.",
    "options": [
      {
        "text": "[1], [1, 2]",
        "is_correct": true
      },
      {
        "text": "[1], [2]",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "[], [2]",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä?",
    "explanation": "–î–µ–∫–æ—Ä–∞—Ç–æ—Ä ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é, –¥–æ–±–∞–≤–ª—è—è –µ–π –ø–æ–≤–µ–¥–µ–Ω–∏–µ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef my_decorator(func):\n    def wrapper():\n        print('–î–æ –≤—ã–∑–æ–≤–∞')\n        func()\n        print('–ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞')\n    return wrapper\n\n@my_decorator\ndef say_hello():\n    print('–ü—Ä–∏–≤–µ—Ç!')\n```\n\n–≠—Ç–æ –∫–∞–∫ —É–ø–∞–∫–æ–≤–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –≤ –±—É–º–∞–≥—É, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≥–ª—è–¥–µ–ª –∫—Ä–∞—Å–∏–≤–µ–µ. –¢—ã –Ω–µ –º–µ–Ω—è–µ—à—å —Å–∞–º—É —Ñ—É–Ω–∫—Ü–∏—é, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ—à—å –µ–π ¬´–æ–±—ë—Ä—Ç–∫—É¬ª.",
    "options": [
      {
        "text": "–û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é",
        "is_correct": true
      },
      {
        "text": "–ò–∑–º–µ–Ω—è–µ—Ç –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      },
      {
        "text": "–£—Å–∫–æ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–æ–¥–∏—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef decor(func):\n    def wrapper():\n        print('start')\n        func()\n        print('end')\n    return wrapper\n\n@decor\ndef say():\n    print('Hello')\nsay()",
    "explanation": "–ö–æ–¥ –≤—ã–≤–µ–¥–µ—Ç:\n```\nstart\nHello\nend\n```\n\n–î–µ–∫–æ—Ä–∞—Ç–æ—Ä `decor` –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é `say()` –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤—ã–≤–æ–¥ –¥–æ –∏ –ø–æ—Å–ª–µ –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ü™Ñ –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å ‚Äî —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º, –ø–æ—Ç–æ–º –≤—ã–ø–æ–ª–Ω–∏ –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Ç–æ–º —Å–∫–∞–∂–∏ ‚Äú–≥–æ—Ç–æ–≤–æ‚Äù¬ª.",
    "options": [
      {
        "text": "start Hello end",
        "is_correct": true
      },
      {
        "text": "Hello",
        "is_correct": false
      },
      {
        "text": "start end",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç functools.wraps?",
    "explanation": "–§—É–Ω–∫—Ü–∏—è `functools.wraps` –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ üß† –ë–µ–∑ –Ω–µ—ë –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–º—è –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è) –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω–∞. –≠—Ç–æ –∫–∞–∫ –Ω–∞–¥–µ—Ç—å –º–∞—Å–∫–∞—Ä–∞–¥–Ω—É—é –º–∞—Å–∫—É, –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ —Ö–æ—Ç–µ—Ç—å, —á—Ç–æ–±—ã —Ç–µ–±—è —É–∑–Ω–∞–ª–∏ –ø–æ –≥–æ–ª–æ—Å—É.",
    "options": [
      {
        "text": "–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–º—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é",
        "is_correct": true
      },
      {
        "text": "–£—Å–∫–æ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é",
        "is_correct": false
      },
      {
        "text": "–î–æ–±–∞–≤–ª—è–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef rec(n):\n    if n <= 0:\n        return 0\n    return n + rec(n - 1)\n\nprint(rec(3))",
    "explanation": "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Å—É–º–º—ã –æ—Ç 1 –¥–æ N —á–µ—Ä–µ–∑ —Ä–µ–∫—É—Ä—Å–∏—é üß† `rec(3)` ‚Üí 3 + rec(2) ‚Üí 2 + rec(1) ‚Üí 1 + rec(0) ‚Üí 0. –ò—Ç–æ–≥–æ: 3+2+1 = 6. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —Å–∫–ª–∞–¥—ã–≤–∞–µ—à—å –º–æ–Ω–µ—Ç—ã –æ–¥–Ω—É –∑–∞ –¥—Ä—É–≥–æ–π, –ø–æ–∫–∞ –Ω–µ –¥–æ–π–¥—ë—à—å –¥–æ –Ω—É–ª—è.",
    "options": [
      {
        "text": "6",
        "is_correct": true
      },
      {
        "text": "3",
        "is_correct": false
      },
      {
        "text": "9",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef counter():\n    count = 0\n    def incr():\n        nonlocal count\n        count += 1\n        return count\n    return incr\n\nc = counter()\nprint(c())\nprint(c())",
    "explanation": "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –∑–∞–º—ã–∫–∞–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ `nonlocal` ü§Ø –§—É–Ω–∫—Ü–∏—è `counter()` —Å–æ–∑–¥–∞—ë—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é `incr()`, –∫–æ—Ç–æ—Ä–∞—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫. –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ `c()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 1, 2, 3‚Ä¶ –≠—Ç–æ –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—á—ë—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–Ω–∏—Ç —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏.",
    "options": [
      {
        "text": "1 –∏ 2",
        "is_correct": true
      },
      {
        "text": "0 –∏ 1",
        "is_correct": false
      },
      {
        "text": "1 –∏ 1",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è —Å yield?",
    "explanation": "–§—É–Ω–∫—Ü–∏—è —Å `yield` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä üîÑ –û–Ω –Ω–µ –≤—ã—á–∏—Å–ª—è–µ—Ç –≤—Å—ë —Å—Ä–∞–∑—É, –∞ –≤—ã–¥–∞—ë—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –æ–¥–Ω–æ–º—É –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ `next()`. –≠—Ç–æ –∫–∞–∫ –±—Ä–∞—Ç—å –∫–Ω–∏–≥—É –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º, –∞ –Ω–µ —á–∏—Ç–∞—Ç—å –≤—Å—é —Å—Ä–∞–∑—É —Ü–µ–ª–∏–∫–æ–º.",
    "options": [
      {
        "text": "generator",
        "is_correct": true
      },
      {
        "text": "function",
        "is_correct": false
      },
      {
        "text": "iterator",
        "is_correct": false
      },
      {
        "text": "list",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef gen():\n    yield 1\n    yield 2\n\nfor x in gen():\n    print(x)",
    "explanation": "–≠—Ç–æ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–æ—á–µ—Ä—ë–¥–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1 –∏ 2 üì£ –ü—Ä–∏ –∏—Ç–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ `for` –æ–Ω –≤—ã–≤–æ–¥–∏—Ç –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –æ—á–µ—Ä–µ–¥–∏. –≠—Ç–æ –∫–∞–∫ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –ø–µ—Å–Ω—é –ø–æ —á–∞—Å—Ç—è–º, –∞ –Ω–µ —Å–∫–∞—á–∏–≤–∞—Ç—å –≤—Å—é —Å—Ä–∞–∑—É. –†–µ–∑—É–ª—å—Ç–∞—Ç: `1`, –∑–∞—Ç–µ–º `2`.",
    "options": [
      {
        "text": "1 –∏ 2",
        "is_correct": true
      },
      {
        "text": "[1, 2]",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ 1",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª —á–µ—Ä–µ–∑ reduce()?",
    "explanation": "`reduce()` –∏–∑ –º–æ–¥—É–ª—è `functools` –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é üß† –ù–∞–ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å—É–º–º—É:\n\n```python\nfrom functools import reduce\nreduce(lambda x, y: x + y, [1, 2, 3])  # 6\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–ª–æ–∂–∏—Ç—å –≤—Å–µ –º–æ–Ω–µ—Ç—ã –≤ –∫—É—á—É ‚Äî –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ —Ç—ã –¥–æ–±–∞–≤–ª—è–µ—à—å –Ω–æ–≤—É—é –º–æ–Ω–µ—Ç—É –∫ —É–∂–µ –∏–º–µ—é—â–µ–π—Å—è —Å—É–º–º–µ.",
    "options": [
      {
        "text": "lambda x,y: x + y",
        "is_correct": true
      },
      {
        "text": "lambda x: x + y",
        "is_correct": false
      },
      {
        "text": "lambda x: sum(x)",
        "is_correct": false
      },
      {
        "text": "lambda x: x * y",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç list comprehension?",
    "explanation": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞—ë—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É (–ª–µ–Ω–∏–≤–æ), –∞ list comprehension ‚Äî —Å—Ä–∞–∑—É –≤—Å—ë —Ö—Ä–∞–Ω–∏—Ç –≤ –ø–∞–º—è—Ç–∏ üîÅ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n(x**2 for x in range(10))  # –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä\n[x**2 for x in range(10)]   # —Å–ø–∏—Å–æ–∫\n```\n\n–≠—Ç–æ –∫–∞–∫ –≥–æ—Ç–æ–≤–∏—Ç—å –µ–¥—É –ø–æ –æ–¥–Ω–æ–π –ø–æ—Ä—Ü–∏–∏, –∞ –Ω–µ —Å—Ä–∞–∑—É –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å ‚Äî —ç–∫–æ–Ω–æ–º–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤!",
    "options": [
      {
        "text": "–í—ã—á–∏—Å–ª—è–µ—Ç –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é",
        "is_correct": true
      },
      {
        "text": "–†–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ",
        "is_correct": false
      },
      {
        "text": "–ú–µ–Ω—å—à–µ –∫–æ–¥–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ –∏–º–µ–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏–π",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfrom functools import reduce\n\nnums = [1, 2, 3, 4]\nresult = reduce(lambda x, y: x * y, nums, 1)\nprint(result)",
    "explanation": "–≠—Ç–æ—Ç –∫–æ–¥ –ø–µ—Ä–µ–º–Ω–æ–∂–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞, –Ω–∞—á–∏–Ω–∞—è —Å 1 üßÆ –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç. –ü–æ–ª—É—á–∞–µ–º: 1*1=1 ‚Üí 1*2=2 ‚Üí 2*3=6 ‚Üí 6*4=24. –≠—Ç–æ –∫–∞–∫ –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —É–º–µ —à–∞–≥ –∑–∞ —à–∞–≥–æ–º.",
    "options": [
      {
        "text": "24",
        "is_correct": true
      },
      {
        "text": "12",
        "is_correct": false
      },
      {
        "text": "1",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç functools.partial?",
    "explanation": "`functools.partial` –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ—ë üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom functools import partial\n\npow2 = partial(pow, 2)\nprint(pow2(5))  # 32\n```\n\n–¢–µ–ø–µ—Ä—å `pow2(x)` ‚Äî —ç—Ç–æ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ `pow(2, x)`. –≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å ¬´–∑–∞–≥–æ—Ç–æ–≤–∫—É¬ª –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –µ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—â–µ.",
    "options": [
      {
        "text": "–§–∏–∫—Å–∏—Ä—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": true
      },
      {
        "text": "–£—Å–∫–æ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ò–∑–º–µ–Ω—è–µ—Ç —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      },
      {
        "text": "–°–æ–∑–¥–∞—ë—Ç –∑–∞–º—ã–∫–∞–Ω–∏–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `partial`, —á—Ç–æ–±—ã –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef greet(name, msg='–ü—Ä–∏–≤–µ—Ç'):\n    print(f'{msg}, {name}')\n\nsay_hi = partial(greet, msg='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π')\nsay_hi('–ê–Ω–Ω–∞')  # –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –ê–Ω–Ω–∞\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –ø—Ä–æ—Å—Ç–æ –Ω–∞–∑—ã–≤–∞—Ç—å –∏–º—è.",
    "options": [
      {
        "text": "partial()",
        "is_correct": true
      },
      {
        "text": "lambda",
        "is_correct": false
      },
      {
        "text": "reduce()",
        "is_correct": false
      },
      {
        "text": "default args",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfrom functools import partial\n\nadd = lambda x, y: x + y\nadd5 = partial(add, 5)\nprint(add5(10))",
    "explanation": "–§—É–Ω–∫—Ü–∏—è `add5` —Å–æ–∑–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ `partial(add, 5)` ‚Üí —ç—Ç–æ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ `add(5, 10)` üì£ –†–µ–∑—É–ª—å—Ç–∞—Ç: `15`. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç 5 –∫ –ª—é–±–æ–º—É —á–∏—Å–ª—É ‚Äî —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è.",
    "options": [
      {
        "text": "15",
        "is_correct": true
      },
      {
        "text": "5",
        "is_correct": false
      },
      {
        "text": "10",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å partial —Å –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏?",
    "explanation": "–î–∞, `partial()` —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Å –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–º–∏, –∏ —Å –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom functools import partial\n\ndef power(base, exponent):\n    return base ** exponent\n\nsquare = partial(power, exponent=2)\nprint(square(5))  # 25\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø —Ö–æ—á—É –≤–æ–∑–≤–æ–¥–∏—Ç—å –≤ –∫–≤–∞–¥—Ä–∞—Ç¬ª, –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–º–∏",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å *args",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ì–¥–µ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–µ–Ω partial?",
    "explanation": "`partial()` –æ—á–µ–Ω—å —É–¥–æ–±–µ–Ω –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤ `tkinter`, `map`, `filter`, –∏ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö, –≥–¥–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ ü™Ñ –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º ‚Äî `partial` –ø–æ–º–æ–∂–µ—Ç.\n\n–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –Ω–∞—Å—Ç—Ä–∞–∏—à—å —Ä–∞–¥–∏–æ –Ω–∞ –æ–¥–Ω—É –≤–æ–ª–Ω—É, –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω–æ –∏–≥—Ä–∞–µ—Ç –∏–º–µ–Ω–Ω–æ —ç—Ç—É –º—É–∑—ã–∫—É –ø–æ –Ω–∞–∂–∞—Ç–∏—é.",
    "options": [
      {
        "text": "–í map/filter –∏ GUI",
        "is_correct": true
      },
      {
        "text": "–í —Ä–µ–∫—É—Ä—Å–∏–∏",
        "is_correct": false
      },
      {
        "text": "–í –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞—Ö",
        "is_correct": false
      },
      {
        "text": "–í –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞—Ö",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã partial?",
    "explanation": "–ù–µ—Ç, –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è üõë –ù–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –¥—Ä—É–≥–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ ‚Äî –æ–Ω–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ —É–∂–µ –∑–∞–¥–∞–Ω–Ω—ã–º. –≠—Ç–æ –∫–∞–∫ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É —á–∞—Å—Ç–∏—á–Ω–æ –∏ –¥–æ–¥–µ–ª–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ–∑–∂–µ.",
    "options": [
      {
        "text": "–ù–µ—Ç",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å mutable",
        "is_correct": false
      },
      {
        "text": "–î–∞",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å *args",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfrom functools import partial\n\ndef multiply(a, b):\n    return a * b\n\ndouble = partial(multiply, a=2)\nprint(double(b=5))",
    "explanation": "–ú—ã —Å–æ–∑–¥–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é `double`, –∫–æ—Ç–æ—Ä–∞—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç `a=2`, –∞ `b` –ø–µ—Ä–µ–¥–∞—ë–º –ø—Ä–∏ –≤—ã–∑–æ–≤–µ. –ü–æ–ª—É—á–∞–µ—Ç—Å—è: `2 * 5 = 10` üìå –≠—Ç–æ –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 2 –∏ –∑–∞—Ç–µ–º –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–π –º–Ω–æ–∂–∏—Ç–µ–ª—å. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –æ–±—â–∏—Ö.",
    "options": [
      {
        "text": "10",
        "is_correct": true
      },
      {
        "text": "5",
        "is_correct": false
      },
      {
        "text": "2",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef greet(greeting):\n    def inner(name):\n        return f'{greeting}, {name}!'\n    return inner\n\nhello = greet('–ü—Ä–∏–≤–µ—Ç')\nprint(hello('–ê–Ω–Ω–∞'))",
    "explanation": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è `inner` –∑–∞–ø–æ–º–Ω–∏–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ `greeting='–ü—Ä–∏–≤–µ—Ç'` –±–ª–∞–≥–æ–¥–∞—Ä—è –∑–∞–º—ã–∫–∞–Ω–∏—é ü™Ñ –ü–æ—ç—Ç–æ–º—É –≤—ã–∑–æ–≤ `hello('–ê–Ω–Ω–∞')` –≤–µ—Ä–Ω—ë—Ç `'–ü—Ä–∏–≤–µ—Ç, –ê–Ω–Ω–∞!'`. –≠—Ç–æ –∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞—Ä–∞–Ω–µ–µ –∏ –ø–æ—Ç–æ–º –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–º—è.",
    "options": [
      {
        "text": "'–ü—Ä–∏–≤–µ—Ç, –ê–Ω–Ω–∞!'",
        "is_correct": true
      },
      {
        "text": "'–ü—Ä–∏–≤–µ—Ç, name!'",
        "is_correct": false
      },
      {
        "text": "'greeting, –ê–Ω–Ω–∞!'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å lambda –¥–ª—è –∫–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏—è?",
    "explanation": "–î–∞, `lambda` –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏—è üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nadd = lambda x: lambda y: x + y\nadd5 = add(5)\nprint(add5(7))  # 12\n```\n\n–≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É, –Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–æ–∑–∂–µ. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å def",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å functools",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ?",
    "explanation": "–ö–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —á–∞—Å—Ç—å **—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è** üß† –í —ç—Ç–æ–º –ø–æ–¥—Ö–æ–¥–µ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏, –∏—Ö –º–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å, —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã. –≠—Ç–æ –∫–∞–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –±–µ—Ä—ë—à—å –∫—É—Å–æ—á–∫–∏ –∏ —Å–æ–±–∏—Ä–∞–µ—à—å –Ω—É–∂–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.",
    "options": [
      {
        "text": "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π",
        "is_correct": true
      },
      {
        "text": "–û–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
        "is_correct": false
      },
      {
        "text": "–ü—Ä–æ—Ü–µ–¥—É—Ä–Ω—ã–π",
        "is_correct": false
      },
      {
        "text": "–ò–º–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfrom functools import reduce\n\npipeline = reduce(\n    lambda f, g: lambda x: g(f(x)),\n    [\n        lambda x: x + 1,\n        lambda x: x * 2\n    ]\n)\n\nprint(pipeline(5))",
    "explanation": "–≠—Ç–æ—Ç –∫–æ–¥ —Å–æ–∑–¥–∞—ë—Ç —Ü–µ–ø–æ—á–∫—É —Ñ—É–Ω–∫—Ü–∏–π: —Å–Ω–∞—á–∞–ª–∞ `x + 1`, –ø–æ—Ç–æ–º `x * 2` üß† –¢–æ –µ—Å—Ç—å: `5 ‚Üí 6 ‚Üí 12`. –≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–º—ã–∫–∞–Ω–∏–π –≤ —Å–≤—è–∑–∫–µ —Å `reduce()`. –ö–∞–∫ –µ—Å–ª–∏ –±—ã —Ç—ã —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–¥–µ–ª –Ω–æ—Å–∫–∏, –∞ –ø–æ—Ç–æ–º –æ–±—É–≤—å ‚Äî –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ –ø–æ—Ä—è–¥–∫—É.",
    "options": [
      {
        "text": "12",
        "is_correct": true
      },
      {
        "text": "6",
        "is_correct": false
      },
      {
        "text": "10",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–í Python –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ –¥–≤–æ–µ—Ç–æ—á–∏—è üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef greet(name: str):\n    print(f'–ü—Ä–∏–≤–µ—Ç, {name}')\n```\n\n–≠—Ç–æ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –æ–∂–∏–¥–∞–µ—Ç—Å—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å: ¬´–Ø –∂–¥—É —Å—Ç—Ä–æ–∫—É¬ª, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—à—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ.",
    "options": [
      {
        "text": "name: str",
        "is_correct": true
      },
      {
        "text": "name = str",
        "is_correct": false
      },
      {
        "text": "str name",
        "is_correct": false
      },
      {
        "text": "name as str",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è?",
    "explanation": "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —Ç–∏–ø–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç—Ä–µ–ª–∫–∞ `->` –ø–µ—Ä–µ–¥ –¥–≤–æ–µ—Ç–æ—á–∏–µ–º üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef add(a: int, b: int) -> int:\n    return a + b\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ù–∞ –≤—Ö–æ–¥–µ –¥–≤–∞ —á–∏—Å–ª–∞, –Ω–∞ –≤—ã—Ö–æ–¥–µ —Ç–æ–∂–µ —á–∏—Å–ª–æ¬ª. –û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.",
    "options": [
      {
        "text": "-> int",
        "is_correct": true
      },
      {
        "text": "= int",
        "is_correct": false
      },
      {
        "text": "return int",
        "is_correct": false
      },
      {
        "text": ": return int",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –º–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–∏–ø—ã –¥–æ –∑–∞–ø—É—Å–∫–∞?",
    "explanation": "–î–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –≤ Python –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Ç–∏–ª–∏—Ç–∞ `mypy` üßê –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å:\n\n```python\ndef add(a: int, b: int) -> int:\n    return a + b\n\nadd('1', '2')  # mypy –Ω–∞–π–¥—ë—Ç –æ—à–∏–±–∫—É\n```\n\n`mypy` —Å–æ–æ–±—â–∏—Ç, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ–¥–∞–ª —Å—Ç—Ä–æ–∫–∏ –≤–º–µ—Å—Ç–æ —á–∏—Å–µ–ª ‚Äî –µ—â—ë –¥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã!",
    "options": [
      {
        "text": "mypy",
        "is_correct": true
      },
      {
        "text": "pytest",
        "is_correct": false
      },
      {
        "text": "typecheck",
        "is_correct": false
      },
      {
        "text": "lint",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç?",
    "explanation": "–ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é `None` üìå –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef say_hello() -> None:\n    print('–ü—Ä–∏–≤–µ—Ç')\n```\n\n–≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç: ¬´–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –≤–µ—Ä–Ω—É, –ø—Ä–æ—Å—Ç–æ —Å–¥–µ–ª–∞—é –¥–µ–π—Å—Ç–≤–∏–µ¬ª. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª: ¬´–Ø –Ω–µ –ø—Ä–∏–Ω–µ—Å—É —Ç–µ–±–µ –æ—Ç–≤–µ—Ç, —è –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂—É –ø—Ä–∏–≤–µ—Ç¬ª.",
    "options": [
      {
        "text": "-> None",
        "is_correct": true
      },
      {
        "text": "-> void",
        "is_correct": false
      },
      {
        "text": "-> Null",
        "is_correct": false
      },
      {
        "text": "–ù–∏—á–µ–≥–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ —É–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–ø–æ–≤ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞?",
    "explanation": "–î–∞, –¥–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `Union` –∏–∑ –º–æ–¥—É–ª—è `typing` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom typing import Union\n\ndef parse(value: Union[int, str]) -> int:\n    return int(value)\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –ø—Ä–∏–Ω–∏–º–∞—é –ª–∏–±–æ —á–∏—Å–ª–æ, –ª–∏–±–æ —Å—Ç—Ä–æ–∫—É, –Ω–æ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é —á–∏—Å–ª–æ¬ª. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ –≤—Ö–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º.",
    "options": [
      {
        "text": "Union[int, str]",
        "is_correct": true
      },
      {
        "text": "OneOf(int, str)",
        "is_correct": false
      },
      {
        "text": "int | str",
        "is_correct": false
      },
      {
        "text": "Optional[int]",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç Optional[str]?",
    "explanation": "`Optional[str]` ‚Äî —ç—Ç–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª—è `Union[str, None]` üß© –¢–æ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –Ω–∏—á–µ–≥–æ. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom typing import Optional\n\ndef greet(name: Optional[str]):\n    if name:\n        print(f'–ü—Ä–∏–≤–µ—Ç, {name}')\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–ø—Ä–æ—Å–∏—Ç—å: ¬´–¢—ã —Ö–æ—á–µ—à—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è? –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –µ—Å–ª–∏ –¥–∞ ‚Äî —è —Ä–∞–¥ —Ç–µ–±—è —É—Å–ª—ã—à–∞—Ç—å¬ª.",
    "options": [
      {
        "text": "–ú–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ None",
        "is_correct": true
      },
      {
        "text": "–°—Ç—Ä–æ–∫–∞ –∏–ª–∏ –ø—É—Å—Ç–∞—è",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ None",
        "is_correct": false
      },
      {
        "text": "–õ—é–±–æ–π —Ç–∏–ø",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç mypy –¥–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏?\n\ndef divide(a: int, b: int) -> float:\n    return a / b\n\nprint(divide('5', '2'))",
    "explanation": "Mypy –æ–±–Ω–∞—Ä—É–∂–∏—Ç –æ—à–∏–±–∫—É –Ω–∞ —ç—Ç–∞–ø–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: —Ç—ã –ø–µ—Ä–µ–¥–∞—ë—à—å —Å—Ç—Ä–æ–∫–∏, —Ö–æ—Ç—è —Ñ—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ üõë –ù–æ —Å–∞–º Python –≤—Å—ë —Ä–∞–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç –∫–æ–¥, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —è–∑—ã–∫. –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç –Ω–∞ –±—É–º–∞–∂–∫–µ, –≥–¥–µ —É–∫–∞–∑–∞–Ω–æ: ¬´–í–æ–¥–∞, —Å–æ–ª—å¬ª, –∞ —Ç—ã –ø–æ–ª–æ–∂–∏–ª —Å–∞—Ö–∞—Ä ‚Äî –≤–∫—É—Å –±—É–¥–µ—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–º, –Ω–æ —Ç—ã —Å–º–æ–∂–µ—à—å –µ–≥–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞ —Ç–∏–ø–æ–≤",
        "is_correct": true
      },
      {
        "text": "–†–µ–∑—É–ª—å—Ç–∞—Ç 2.5",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏?",
    "explanation": "–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏, –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –µ–≥–æ –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é ü™Ñ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@repeat(3)\ndef say_hello():\n    print('–ü—Ä–∏–≤–µ—Ç')\n```\n\n–¢–µ–ø–µ—Ä—å `say_hello()` –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å '–ü—Ä–∏–≤–µ—Ç' —Ç—Ä–∏–∂–¥—ã. –≠—Ç–æ –∫–∞–∫ –ø–æ–º–µ—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–±–ª–∏—á–∫–æ–π: ¬´–ü–æ–≤—Ç–æ—Ä–∏ –º–µ–Ω—è 3 —Ä–∞–∑–∞¬ª.",
    "options": [
      {
        "text": "@decorator(arg)",
        "is_correct": true
      },
      {
        "text": "@decorator",
        "is_correct": false
      },
      {
        "text": "func(decorator(arg))",
        "is_correct": false
      },
      {
        "text": "func.decorator(arg)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ —É –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏?",
    "explanation": "–î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∏–º–µ–µ—Ç **—Ç—Ä–∏ —É—Ä–æ–≤–Ω—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏**: –≤–Ω–µ—à–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, —Ç–æ—Ç –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç wrapper üß† –≠—Ç–æ –∫–∞–∫ –º–∞—Ç—Ä—ë—à–∫–∞: —Ç—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å –ø–µ—Ä–≤—É—é ‚Äî –≤–Ω—É—Ç—Ä–∏ –≤—Ç–æ—Ä–∞—è ‚Äî –≤–Ω—É—Ç—Ä–∏ —Ç—Ä–µ—Ç—å—è ‚Äî –∏ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—à—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.",
    "options": [
      {
        "text": "3 —É—Ä–æ–≤–Ω—è",
        "is_correct": true
      },
      {
        "text": "2 —É—Ä–æ–≤–Ω—è",
        "is_correct": false
      },
      {
        "text": "1 —É—Ä–æ–≤–µ–Ω—å",
        "is_correct": false
      },
      {
        "text": "–ë–µ–∑ —É—Ä–æ–≤–Ω–µ–π",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç functools.wraps –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–µ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏?",
    "explanation": "`functools.wraps` –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É `wrapper`, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–º—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ üß† –ë–µ–∑ –Ω–µ–≥–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ `wrapper`, —á—Ç–æ –º–µ—à–∞–µ—Ç –æ—Ç–ª–∞–¥–∫–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. –≠—Ç–æ –∫–∞–∫ –Ω–∞–¥–µ—Ç—å –º–∞—Å–∫—É, –Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å —É–∑–Ω–∞–≤–∞–µ–º—ã–º.",
    "options": [
      {
        "text": "–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ wrapper",
        "is_correct": true
      },
      {
        "text": "–ö —Å–∞–º–æ–º—É –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—É",
        "is_correct": false
      },
      {
        "text": "–ö –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      },
      {
        "text": "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏?",
    "explanation": "–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ —É–∫–∞–∑—ã–≤–∞–π –∏—Ö —Å–≤–µ—Ä—Ö—É –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@decorator1(arg1)\n@decorator2(arg2)\ndef my_func():\n    ...\n```\n\n–û–Ω–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö: —Å–Ω–∞—á–∞–ª–∞ `decorator2`, –ø–æ—Ç–æ–º `decorator1`. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –Ω–∞–¥–µ–≤–∞–µ—à—å –Ω–æ—Å–∫–∏, –∞ –ø–æ—Ç–æ–º –±–æ—Ç–∏–Ω–∫–∏ ‚Äî –ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω!",
    "options": [
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ @decorator(arg)",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å lambda",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ CLI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö?",
    "explanation": "–í CLI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö —á–∞—Å—Ç–æ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è üõ† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef parse_args():\n    ...\n\ndef main():\n    args = parse_args()\n    run_task(args)\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –û—á–µ–Ω—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–æ –≤ —É—Ç–∏–ª–∏—Ç–∞—Ö –∏ —Å–∫—Ä–∏–ø—Ç–∞—Ö.",
    "options": [
      {
        "text": "parse_args(), main(), run()",
        "is_correct": true
      },
      {
        "text": "start(), stop()",
        "is_correct": false
      },
      {
        "text": "init(), update()",
        "is_correct": false
      },
      {
        "text": "get(), set()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö?",
    "explanation": "–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —à–∞–±–ª–æ–Ω: –∑–∞–≥—Ä—É–∑–∫–∞ ‚Üí –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ ‚Üí —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef load_data(path):\n    return pd.read_csv(path)\n\ndef process(data):\n    return data.dropna()\n\ndef save(data, path):\n    data.to_csv(path)\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–æ—á–∏—Ç–∞–π —Ñ–∞–π–ª, –ø–æ—Ä–∞–±–æ—Ç–∞–π —Å –¥–∞–Ω–Ω—ã–º–∏, —Å–æ—Ö—Ä–∞–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç¬ª. –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ —á–∏—Ç–∞–µ–º—ã–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º.",
    "options": [
      {
        "text": "load ‚Üí process ‚Üí save",
        "is_correct": true
      },
      {
        "text": "read ‚Üí write ‚Üí delete",
        "is_correct": false
      },
      {
        "text": "input ‚Üí output",
        "is_correct": false
      },
      {
        "text": "start ‚Üí middle ‚Üí end",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ (Flask)?",
    "explanation": "–í Flask —Ñ—É–Ω–∫—Ü–∏–∏ —á–∞—â–µ –≤—Å–µ–≥–æ —Å–ª—É–∂–∞—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ üåê –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@app.route('/hello')\ndef hello():\n    return 'Hello, World!'\n```\n\n–ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–≤—è–∑–∞–Ω–∞ —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º URL –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É. –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –∑–∞–π–¥—ë—Ç –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.",
    "options": [
      {
        "text": "–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏",
        "is_correct": false
      },
      {
        "text": "–î–ª—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
        "is_correct": false
      },
      {
        "text": "–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è?",
    "explanation": "–ú–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –ª–æ–≥–∏–∫—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä ü™∂ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef log_call(func):\n    def wrapper(*args, **kwargs):\n        print(f'–í—ã–∑–æ–≤ {func.__name__}')\n        result = func(*args, **kwargs)\n        print(f'–ó–∞–≤–µ—Ä—à–µ–Ω–æ')\n        return result\n    return wrapper\n```\n\n–¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –ª–æ–≥–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∞–º–æ–π –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ—à—å –¥–Ω–µ–≤–Ω–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–æ–≥—Ä–∞–º–º—ã.",
    "options": [
      {
        "text": "–î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ print()",
        "is_correct": false
      },
      {
        "text": "–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ",
        "is_correct": false
      },
      {
        "text": "–õ—è–º–±–¥–∞-—Ñ—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —é–Ω–∏—Ç-—Ç–µ—Å—Ç–∞—Ö?",
    "explanation": "–í —Ç–µ—Å—Ç–∞—Ö —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –æ—á–∏—Å—Ç–∫–∏ üß™ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef create_test_user():\n    return User(name='Test', email='test@test.com')\n\ndef test_user_creation():\n    user = create_test_user()\n    assert user.name == 'Test'\n```\n\n–¢–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–µ–ª–∞—é—Ç —Ç–µ—Å—Ç—ã —á–∏—â–µ –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º—ã–º–∏. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞—ë—à—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞ ‚Äî —Ç–∞–∫ –ª–µ–≥—á–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
    "options": [
      {
        "text": "setup, teardown, helper",
        "is_correct": true
      },
      {
        "text": "run(), check()",
        "is_correct": false
      },
      {
        "text": "init(), destroy()",
        "is_correct": false
      },
      {
        "text": "only once()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏?",
    "explanation": "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è, –∑–∞–ø–∏—Å–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ üìÅ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef read_file(path):\n    with open(path) as f:\n        return f.readlines()\n\ndef write_file(path, content):\n    with open(path, 'w') as f:\n        f.writelines(content)\n```\n\n–≠—Ç–æ –¥–µ–ª–∞–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏ –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–º–∏. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –Ω–∞—É—á–∏–ª—Å—è –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –∫–Ω–∏–≥–∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ.",
    "options": [
      {
        "text": "read, write, process",
        "is_correct": true
      },
      {
        "text": "open(), close()",
        "is_correct": false
      },
      {
        "text": "file_in(), file_out()",
        "is_correct": false
      },
      {
        "text": "load(), dump()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef func(x, y=0):\n    print(y)\n\nfunc(x=5)\nfunc(x=3)",
    "explanation": "–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (`y=0`) –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ üîÑ –ï—Å–ª–∏ –±—ã –∑–¥–µ—Å—å –±—ã–ª –∏–∑–º–µ–Ω—è–µ–º—ã–π –æ–±—ä–µ–∫—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–∏—Å–æ–∫), —ç—Ç–æ –º–æ–≥–ª–æ –±—ã –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ù–æ —Å —á–∏—Å–ª–∞–º–∏ –≤—Å—ë –±–µ–∑–æ–ø–∞—Å–Ω–æ: –≤—Å–µ–≥–¥–∞ `y=0`. –≠—Ç–æ –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ –¥–æ —Å—Ç–∞—Ä—Ç–∞ ‚Äî –æ–Ω –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è —Å–∞–º –ø–æ —Å–µ–±–µ.",
    "options": [
      {
        "text": "0 –∏ 0",
        "is_correct": true
      },
      {
        "text": "5 –∏ 3",
        "is_correct": false
      },
      {
        "text": "None –∏ None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–∑ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏?",
    "explanation": "–î–∞, –º–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å, –Ω–æ **–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å**, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞—Ç—å `nonlocal` –∏–ª–∏ `global` üõë –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef outer():\n    x = 10\n    def inner():\n        x += 1  # –û—à–∏–±–∫–∞!\n    inner()\n```\n\nPython –¥—É–º–∞–µ—Ç, —á—Ç–æ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `x`, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—ã—Ç–∞–ª—Å—è –µ—ë –∏–∑–º–µ–Ω–∏—Ç—å. –ß—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å ‚Äî –Ω—É–∂–Ω–æ —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å `nonlocal x`.",
    "options": [
      {
        "text": "–ú–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å, –Ω–æ –Ω–µ –º–µ–Ω—è—Ç—å",
        "is_correct": true
      },
      {
        "text": "–ú–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ",
        "is_correct": false
      },
      {
        "text": "–ù–µ–ª—å–∑—è –¥–∞–∂–µ —á–∏—Ç–∞—Ç—å",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å global",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ndef make_funcs():\n    return [lambda: i for i in range(5)]\n\nfuncs = make_funcs()\nprint([f() for f in funcs])",
    "explanation": "–í—Å–µ –ª—è–º–±–¥—ã –∑–∞–ø–æ–º–Ω—è—Ç —Å—Å—ã–ª–∫—É –Ω–∞ `i`, –∞ –Ω–µ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è ü§Ø –¢–æ –µ—Å—Ç—å, –∫–æ–≥–¥–∞ —Ç—ã –∏—Ö –≤—ã–∑–æ–≤–µ—à—å, `i` –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω `4` –¥–ª—è –≤—Å–µ—Ö. –†–µ–∑—É–ª—å—Ç–∞—Ç: `[4, 4, 4, 4, 4]`. –≠—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –ª–æ–≤—É—à–µ–∫ –≤ –∑–∞–º—ã–∫–∞–Ω–∏—è—Ö. –ß—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å ‚Äî –Ω—É–∂–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ `i` –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª—è–º–±–¥—ã.",
    "options": [
      {
        "text": "[4, 4, 4, 4, 4]",
        "is_correct": true
      },
      {
        "text": "[0, 1, 2, 3, 4]",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "[None, None, ...]",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `sum()` –∏ `len()` –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef average(nums):\n    if not nums:\n        return 0\n    return sum(nums) / len(nums)\n```\n\n–¢–∞–∫–∂–µ –≤–∞–∂–Ω–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª—É—á–∞–π —Å –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å. –≠—Ç–æ –∫–∞–∫ –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∫–ª–∞—Å—Å–∞, –µ—Å–ª–∏ —Ç–∞–º –≤–æ–æ–±—â–µ –Ω–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤.",
    "options": [
      {
        "text": "sum(nums)/len(nums)",
        "is_correct": true
      },
      {
        "text": "nums.mean()",
        "is_correct": false
      },
      {
        "text": "sum(nums)//len(nums)",
        "is_correct": false
      },
      {
        "text": "reduce(lambda x,y: x+y, nums)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤–µ—Ä–Ω—ë—Ç —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è?\n\ndef get_func():\n    def inner():\n        return 'Hello'\n    return inner\n\nprint(get_func()())",
    "explanation": "–§—É–Ω–∫—Ü–∏—è `get_func()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é `inner`, –∫–æ—Ç–æ—Ä—É—é –º—ã —Å—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞–µ–º –¥–≤–æ–π–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏ ü™Ñ –†–µ–∑—É–ª—å—Ç–∞—Ç: `'Hello'`. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏–ª –∫–ª—é—á –æ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã, –∞ –ø–æ—Ç–æ–º —ç—Ç–∏–º –∫–ª—é—á–æ–º –æ—Ç–∫—Ä—ã–ª –¥–≤–µ—Ä—å ‚Äî –≤–æ—Ç —Ç–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.",
    "options": [
      {
        "text": "'Hello'",
        "is_correct": true
      },
      {
        "text": "<function inner>",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ–Ω—è–µ—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫–∞?",
    "explanation": "–ú–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ü–∏–∫–ª–æ–º –∏–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º —Å–ø–∏—Å–∫–∞ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef apply_each(func, items):\n    return [func(x) for x in items]\n\nresult = apply_each(str.upper, ['a', 'b'])  # ['A', 'B']\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–∏–º–µ–Ω–∏ —Ñ–∏–ª—å—Ç—Ä –∫–æ –≤—Å–µ–º —Ñ–æ—Ç–æ¬ª ‚Äî –∏ –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ –∫–æ–¥–∞.",
    "options": [
      {
        "text": "[func(x) for x in items]",
        "is_correct": true
      },
      {
        "text": "map(func, items)",
        "is_correct": false
      },
      {
        "text": "list(map(func, items))",
        "is_correct": false
      },
      {
        "text": "func(*items)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω–∞—è?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `functools.partial()` –∏–ª–∏ –≤—Ä—É—á–Ω—É—é –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ üß† –ü—Ä–∏–º–µ—Ä:\n\n```python\nfrom functools import partial\n\npow2 = partial(pow, 2)\nprint(pow2(5))  # 32\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —à–∞–±–ª–æ–Ω –∫–æ–º–∞–Ω–¥—ã: ¬´–í–æ–∑—å–º–∏ —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤–µ–¥–∏ –≤ —Å—Ç–µ–ø–µ–Ω—å¬ª, –Ω–æ —Å—Ç–µ–ø–µ–Ω—å —É–∫–∞–∑–∞–Ω–∞ –∑–∞—Ä–∞–Ω–µ–µ.",
    "options": [
      {
        "text": "partial(pow, 2)",
        "is_correct": true
      },
      {
        "text": "lambda x: pow(x, 2)",
        "is_correct": false
      },
      {
        "text": "def f(): return pow()",
        "is_correct": false
      },
      {
        "text": "pow(2, y=5)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –ø—É—Å—Ç–æ–π –∫–ª–∞—Å—Å?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ `class`:\n\n```python\nclass Cat:\n    pass\n\nmy_cat = Cat()  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞\n```\nüê± –ö–ª–∞—Å—Å ‚Äî —ç—Ç–æ —à–∞–±–ª–æ–Ω, –∞ –æ–±—ä–µ–∫—Ç (`my_cat`) ‚Äî –µ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä. –ü–æ–∫–∞ –∫–ª–∞—Å—Å –ø—É—Å—Ç–æ–π, –Ω–æ —ç—Ç–æ —É–∂–µ —Ä–∞–±–æ—á–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞!",
    "options": [
      {
        "text": "class Name:",
        "is_correct": true
      },
      {
        "text": "def Name():",
        "is_correct": false
      },
      {
        "text": "object Name:",
        "is_correct": false
      },
      {
        "text": "new class Name:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç –æ–±—ä–µ–∫—Ç—É?",
    "explanation": "–ß–µ—Ä–µ–∑ `self` –≤ –º–µ—Ç–æ–¥–µ –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é:\n\n```python\nclass Cat:\n    def __init__(self, name):\n        self.name = name  # –ê—Ç—Ä–∏–±—É—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞\n\nmy_cat = Cat('–ú—É—Ä–∑–∏–∫')\nmy_cat.age = 2  # –¢–∞–∫ —Ç–æ–∂–µ –º–æ–∂–Ω–æ!\n```\nüîπ `self.name` ‚Äî –∞—Ç—Ä–∏–±—É—Ç, —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.",
    "options": [
      {
        "text": "self.attr = value",
        "is_correct": true
      },
      {
        "text": "let self.attr = value",
        "is_correct": false
      },
      {
        "text": "attr = value",
        "is_correct": false
      },
      {
        "text": "Cat.attr = value",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω `__init__`?",
    "explanation": "–≠—Ç–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ ‚Äî –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞:\n\n```python\nclass Cat:\n    def __init__(self, name):\n        self.name = name\n\nmy_cat = Cat('–ë–∞—Ä—Å–∏–∫')  # –í—ã–∑–æ–≤ __init__\n```\nüöÄ `self` ‚Äî —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–º –æ–±—ä–µ–∫—Ç. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã (–∫—Ä–æ–º–µ `self`) –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏.",
    "options": [
      {
        "text": "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç",
        "is_correct": true
      },
      {
        "text": "–£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç",
        "is_correct": false
      },
      {
        "text": "–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –≤ —Å—Ç—Ä–æ–∫—É",
        "is_correct": false
      },
      {
        "text": "–°—Ä–∞–≤–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç—ã",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞?",
    "explanation": "–§—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º `self`:\n\n```python\nclass Cat:\n    def say_meow(self):\n        print(f'{self.name} –≥–æ–≤–æ—Ä–∏—Ç: –ú—è—É!')\n\nmy_cat = Cat('–í–∞—Å—å–∫–∞')\nmy_cat.say_meow()\n```\nüåÄ `self` –¥–∞—ë—Ç –¥–æ—Å—Ç—É–ø –∫ –∞—Ç—Ä–∏–±—É—Ç–∞–º –æ–±—ä–µ–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `self.name`).",
    "options": [
      {
        "text": "def method(self):",
        "is_correct": true
      },
      {
        "text": "func method(self):",
        "is_correct": false
      },
      {
        "text": "method = def(self):",
        "is_correct": false
      },
      {
        "text": "def method():",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nclass Cat:\n    sound = '–ú—è—É'\n    def __init__(self, name):\n        self.name = name\n\nmy_cat = Cat('–ë–∞—Ä—Å–∏–∫')\nprint(my_cat.sound)",
    "explanation": "`'–ú—è—É'`! üéØ `sound` ‚Äî —ç—Ç–æ –∞—Ç—Ä–∏–±—É—Ç **–∫–ª–∞—Å—Å–∞** (–æ–±—â–∏–π –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤). –ï—Å–ª–∏ —Å–æ–∑–¥–∞—Ç—å `my_cat.sound = '–ì–∞–≤!'`, –æ–Ω —Å—Ç–∞–Ω–µ—Ç –∞—Ç—Ä–∏–±—É—Ç–æ–º **—ç–∫–∑–µ–º–ø–ª—è—Ä–∞** (–∏ –ø–µ—Ä–µ–∫—Ä–æ–µ—Ç –∫–ª–∞—Å—Å–æ–≤—ã–π).",
    "options": [
      {
        "text": "–ú—è—É",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–ë–∞—Ä—Å–∏–∫",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `dir(obj)` –∏–ª–∏ `obj.__dict__`:\n\n```python\nclass Cat:\n    def __init__(self, name):\n        self.name = name\n\nmy_cat = Cat('–ú—É—Ä–∫–∞')\nprint(dir(my_cat))  # –í—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã\nprint(my_cat.__dict__)  # {'name': '–ú—É—Ä–∫–∞'}\n```\nüîç –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º.",
    "options": [
      {
        "text": "dir(obj)",
        "is_correct": true
      },
      {
        "text": "obj.attributes()",
        "is_correct": false
      },
      {
        "text": "list(obj)",
        "is_correct": false
      },
      {
        "text": "obj.get_attrs()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫?",
    "explanation": "–£–∫–∞–∂–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –≤ —Å–∫–æ–±–∫–∞—Ö:\n\n```python\nclass Animal:\n    def eat(self):\n        print('–ù—è–º-–Ω—è–º')\n\nclass Cat(Animal):  # –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ\n    pass\n\nmy_cat = Cat()\nmy_cat.eat()  # –ù—è–º-–Ω—è–º\n```\nüê± –ö–ª–∞—Å—Å `Cat` —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–ª –º–µ—Ç–æ–¥ `eat()` –æ—Ç `Animal`!",
    "options": [
      {
        "text": "class Child(Parent):",
        "is_correct": true
      },
      {
        "text": "class Child extends Parent:",
        "is_correct": false
      },
      {
        "text": "class Child <- Parent:",
        "is_correct": false
      },
      {
        "text": "class Child with Parent:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è –≤ –∫–ª–∞—Å—Å–µ-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–µ?",
    "explanation": "–ü—Ä–æ—Å—Ç–æ –æ–±—ä—è–≤–∏ –º–µ—Ç–æ–¥ —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º:\n\n```python\nclass Animal:\n    def make_sound(self):\n        print('...')\n\nclass Cat(Animal):\n    def make_sound(self):  # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ\n        print('–ú—è—É!')\n\nmy_cat = Cat()\nmy_cat.make_sound()  # –ú—è—É!\n```\nüéØ –≠—Ç–æ –∏ –µ—Å—Ç—å **–ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º** ‚Äî –æ–¥–∏–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —Ä–∞–∑–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ!",
    "options": [
      {
        "text": "–°–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥ —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @override",
        "is_correct": false
      },
      {
        "text": "–£–¥–∞–ª–∏—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è",
        "is_correct": false
      },
      {
        "text": "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è –∏–∑ –∫–ª–∞—Å—Å–∞-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `super()`:\n\n```python\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\nclass Cat(Animal):\n    def __init__(self, name, breed):\n        super().__init__(name)  # –í—ã–∑–æ–≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ __init__\n        self.breed = breed\n```\nüîó `super()` –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞.",
    "options": [
      {
        "text": "super().method()",
        "is_correct": true
      },
      {
        "text": "parent().method()",
        "is_correct": false
      },
      {
        "text": "self.parent.method()",
        "is_correct": false
      },
      {
        "text": "Parent.method(self)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª–∞—Å—Å–æ–≤?",
    "explanation": "–ü–µ—Ä–µ—á–∏—Å–ª–∏ –∫–ª–∞—Å—Å—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:\n\n```python\nclass A:\n    pass\n\nclass B:\n    pass\n\nclass C(A, B):  # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ\n    pass\n```\n‚ö†Ô∏è –ü–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω! Python –∏—â–µ—Ç –º–µ—Ç–æ–¥—ã –≤ –ø–æ—Ä—è–¥–∫–µ **MRO** (Method Resolution Order). –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ `ClassName.__mro__`.",
    "options": [
      {
        "text": "class Child(A, B):",
        "is_correct": true
      },
      {
        "text": "class Child(A + B):",
        "is_correct": false
      },
      {
        "text": "class Child(A & B):",
        "is_correct": false
      },
      {
        "text": "class Child(A).Child(B):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π –º–æ–¥—É–ª—å `abc`:\n\n```python\nfrom abc import ABC, abstractmethod\n\nclass Animal(ABC):\n    @abstractmethod\n    def make_sound(self):\n        pass\n\nclass Cat(Animal):\n    def make_sound(self):\n        print('–ú—è—É!')\n\n# Animal()  # –û—à–∏–±–∫–∞: –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞\nmy_cat = Cat()  # OK\n```\nüìå –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã ‚Äî —ç—Ç–æ ¬´—à–∞–±–ª–æ–Ω—ã¬ª –¥–ª—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.",
    "options": [
      {
        "text": "@abstractmethod",
        "is_correct": true
      },
      {
        "text": "@must_implement",
        "is_correct": false
      },
      {
        "text": "def abstract method():",
        "is_correct": false
      },
      {
        "text": "class Abstract:",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –æ–±—ä–µ–∫—Ç ‚Äî —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `isinstance()` –∏ `issubclass()`:\n\n```python\nclass Animal: pass\nclass Cat(Animal): pass\n\nmy_cat = Cat()\nprint(isinstance(my_cat, Cat))  # True\nprint(isinstance(my_cat, Animal))  # True (–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ)\nprint(issubclass(Cat, Animal))  # True\n```\nüîç –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —É—á–∏—Ç—ã–≤–∞—é—Ç –≤—Å—é —Ü–µ–ø–æ—á–∫—É –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.",
    "options": [
      {
        "text": "isinstance(obj, Class)",
        "is_correct": true
      },
      {
        "text": "obj.isinstance(Class)",
        "is_correct": false
      },
      {
        "text": "obj.type() == Class",
        "is_correct": false
      },
      {
        "text": "Class in obj.classes()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π –¥–≤–æ–π–Ω–æ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ `__`:\n\n```python\nclass BankAccount:\n    def __init__(self, balance):\n        self.__balance = balance  # –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç\n\naccount = BankAccount(100)\n#print(account.__balance)  # –û—à–∏–±–∫–∞! –ù–æ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ _BankAccount__balance\n```\nüîí Python –¥–µ–ª–∞–µ—Ç ¬´name mangling¬ª: `__balance` –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ `_BankAccount__balance`. –≠—Ç–æ –Ω–µ –Ω–∞—Å—Ç–æ—è—â–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å, –Ω–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ!",
    "options": [
      {
        "text": "self.__attr",
        "is_correct": true
      },
      {
        "text": "self.private(attr)",
        "is_correct": false
      },
      {
        "text": "self._attr",
        "is_correct": false
      },
      {
        "text": "private self.attr",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö (protected) –∞—Ç—Ä–∏–±—É—Ç–æ–≤?",
    "explanation": "–û–¥–Ω–æ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ `_`:\n\n```python\nclass Person:\n    def __init__(self, name):\n        self._name = name  # –ó–∞—â–∏—â—ë–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç\n```\n‚ö†Ô∏è –≠—Ç–æ –ª–∏—à—å **—Å–æ–≥–ª–∞—à–µ–Ω–∏–µ** –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤! Python –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø, –Ω–æ —Ç–∞–∫ –æ–±–æ–∑–Ω–∞—á–∞—é—Ç ¬´–Ω–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏¬ª.",
    "options": [
      {
        "text": "self._attr",
        "is_correct": true
      },
      {
        "text": "self.__attr",
        "is_correct": false
      },
      {
        "text": "self.protected attr",
        "is_correct": false
      },
      {
        "text": "#protected attr",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç —Å –ª–æ–≥–∏–∫–æ–π, –Ω–æ –¥–æ—Å—Ç—É–ø–æ–º –∫–∞–∫ –∫ –ø–æ–ª—é?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `@property`:\n\n```python\nclass Temperature:\n    def __init__(self, celsius):\n        self._celsius = celsius\n\n    @property\n    def celsius(self):  # –ì–µ—Ç—Ç–µ—Ä\n        return self._celsius\n\n    @celsius.setter\n    def celsius(self, value):  # –°–µ—Ç—Ç–µ—Ä\n        if value < -273.15:\n            raise ValueError('–ù–∏–∂–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –Ω—É–ª—è!')\n        self._celsius = value\n\ntemp = Temperature(25)\nprint(temp.celsius)  # 25 (–≤—ã–∑–æ–≤ –≥–µ—Ç—Ç–µ—Ä–∞)\ntemp.celsius = 30    # –í—ã–∑–æ–≤ —Å–µ—Ç—Ç–µ—Ä–∞\n```\nüéâ –¢–µ–ø–µ—Ä—å `celsius` –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç, –Ω–æ —Å –ª–æ–≥–∏–∫–æ–π!",
    "options": [
      {
        "text": "@property –∏ @attr.setter",
        "is_correct": true
      },
      {
        "text": "@getter –∏ @setter",
        "is_correct": false
      },
      {
        "text": "def property(attr):",
        "is_correct": false
      },
      {
        "text": "@accessor(attr)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `@property` –±–µ–∑ —Å–µ—Ç—Ç–µ—Ä–∞:\n\n```python\nclass Circle:\n    def __init__(self, radius):\n        self._radius = radius\n\n    @property\n    def area(self):\n        return 3.14 * self._radius ** 2\n\ncircle = Circle(5)\nprint(circle.area)  # 78.5\n# circle.area = 10  # –û—à–∏–±–∫–∞: –Ω–µ—Ç —Å–µ—Ç—Ç–µ—Ä–∞!\n```\nüìå –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤—ã—á–∏—Å–ª—è–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –º–µ–Ω—è—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é.",
    "options": [
      {
        "text": "@property –±–µ–∑ setter",
        "is_correct": true
      },
      {
        "text": "@readonly",
        "is_correct": false
      },
      {
        "text": "self._attr = final(value)",
        "is_correct": false
      },
      {
        "text": "def get_attr():",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å email —á–µ—Ä–µ–∑ @property?",
    "explanation": "–î–æ–±–∞–≤—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤ —Å–µ—Ç—Ç–µ—Ä:\n\n```python\nclass User:\n    def __init__(self, email):\n        self.email = email  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ—Ç—Ç–µ—Ä\n\n    @property\n    def email(self):\n        return self._email\n\n    @email.setter\n    def email(self, value):\n        if '@' not in value:\n            raise ValueError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!')\n        self._email = value\n\nuser = User('test@example.com')\n# user.email = 'invalid'  # –í—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É!\n```\n‚úâÔ∏è –¢–µ–ø–µ—Ä—å `email` –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É!",
    "options": [
      {
        "text": "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ @email.setter",
        "is_correct": true
      },
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å if –≤ __init__",
        "is_correct": false
      },
      {
        "text": "–°–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥ validate_email()",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @validator",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å—Ä–∞–≤–Ω–∏—Ç—å –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é?",
    "explanation": "–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏ `__eq__`:\n\n```python\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    \n    def __eq__(self, other):\n        return self.x == other.x and self.y == other.y\n\np1 = Point(1, 2)\np2 = Point(1, 2)\nprint(p1 == p2)  # True (–±–µ–∑ __eq__ –±—ã–ª–æ –±—ã False)\n```\nüîç –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å `__lt__`, `__ge__` –∏ –¥—Ä—É–≥–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–π.",
    "options": [
      {
        "text": "def __eq__(self, other):",
        "is_correct": true
      },
      {
        "text": "def equals(self, other):",
        "is_correct": false
      },
      {
        "text": "def compare(self, other):",
        "is_correct": false
      },
      {
        "text": "–ü–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä =",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä `+`?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `__add__`:\n\n```python\nclass Vector:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    \n    def __add__(self, other):\n        return Vector(self.x + other.x, self.y + other.y)\n\nv1 = Vector(1, 2)\nv2 = Vector(3, 4)\nv3 = v1 + v2  # Vector(4, 6)\n```\nüßÆ –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ: `__sub__` –¥–ª—è `-`, `__mul__` –¥–ª—è `*`, –∏ —Ç.–¥.",
    "options": [
      {
        "text": "def __add__(self, other):",
        "is_correct": true
      },
      {
        "text": "def operator_add(self, other):",
        "is_correct": false
      },
      {
        "text": "def +(self, other):",
        "is_correct": false
      },
      {
        "text": "def add(self, other):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ—Ö–æ–∂–∏–º –Ω–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—é?",
    "explanation": "–†–µ–∞–ª–∏–∑—É–π `__len__` –∏ `__getitem__`:\n\n```python\nclass Library:\n    def __init__(self, books):\n        self.books = books\n    \n    def __len__(self):\n        return len(self.books)\n    \n    def __getitem__(self, index):\n        return self.books[index]\n\nlib = Library(['1984', '–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞'])\nprint(len(lib))    # 2\nprint(lib[1])      # '–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞'\n```\nüìö –¢–µ–ø–µ—Ä—å –æ–±—ä–µ–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç `len()` –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é, –∫–∞–∫ —Å–ø–∏—Å–æ–∫!",
    "options": [
      {
        "text": "__len__ –∏ __getitem__",
        "is_correct": true
      },
      {
        "text": "__length__ –∏ __item__",
        "is_correct": false
      },
      {
        "text": "__size__ –∏ __index__",
        "is_correct": false
      },
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç list",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ–±—ä–µ–∫—Ç –≤—ã–∑—ã–≤–∞–µ–º—ã–º, –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é?",
    "explanation": "–†–µ–∞–ª–∏–∑—É–π `__call__`:\n\n```python\nclass Multiplier:\n    def __init__(self, factor):\n        self.factor = factor\n    \n    def __call__(self, x):\n        return x * self.factor\n\ndouble = Multiplier(2)\nprint(double(5))  # 10 (–æ–±—ä–µ–∫—Ç –≤–µ–¥—ë—Ç —Å–µ–±—è –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—è!)\n```\nüé≠ –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ç–æ—Ä–æ–≤ (–æ–±—ä–µ–∫—Ç–æ–≤-—Ñ—É–Ω–∫—Ü–∏–π).",
    "options": [
      {
        "text": "def __call__(self, *args):",
        "is_correct": true
      },
      {
        "text": "def run(self, *args):",
        "is_correct": false
      },
      {
        "text": "def __invoke__(self, *args):",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @callable",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–º–µ–Ω—å—à–∏—Ç—å –ø–∞–º—è—Ç—å, –∑–∞–Ω–∏–º–∞–µ–º—É—é –æ–±—ä–µ–∫—Ç–∞–º–∏?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `__slots__` –¥–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤:\n\n```python\nclass Point:\n    __slots__ = ['x', 'y']  # –ó–∞–ø—Ä–µ—â–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤\n    \n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\np = Point(1, 2)\n# p.z = 3  # –û—à–∏–±–∫–∞: –Ω–µ—Ç —Å–ª–æ—Ç–∞ 'z'\n```\n‚ö° –≠–∫–æ–Ω–æ–º–∏—Ç –ø–∞–º—è—Ç—å (–æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –º–∏–ª–ª–∏–æ–Ω–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤), –Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –≥–∏–±–∫–æ—Å—Ç—å.",
    "options": [
      {
        "text": "__slots__ = [—Å–ø–∏—Å–æ–∫ –∞—Ç—Ä–∏–±—É—Ç–æ–≤]",
        "is_correct": true
      },
      {
        "text": "@dataclass(slots=True)",
        "is_correct": false
      },
      {
        "text": "def __compact__(self):",
        "is_correct": false
      },
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç CompactObject",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º?",
    "explanation": "–†–µ–∞–ª–∏–∑—É–π `__iter__` (–∏/–∏–ª–∏ `__next__`):\n\n```python\nclass Countdown:\n    def __init__(self, start):\n        self.start = start\n    \n    def __iter__(self):\n        current = self.start\n        while current > 0:\n            yield current\n            current -= 1\n\nfor num in Countdown(3):\n    print(num)  # 3, 2, 1\n```\nüåÄ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ü–∏–∫–ª–∞—Ö `for` –∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞—Ö.",
    "options": [
      {
        "text": "def __iter__(self):",
        "is_correct": true
      },
      {
        "text": "def __loop__(self):",
        "is_correct": false
      },
      {
        "text": "def __next__(self):",
        "is_correct": false
      },
      {
        "text": "def items(self):",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞?",
    "explanation": "–†–µ–∞–ª–∏–∑—É–π `__enter__` –∏ `__exit__`:\n\n```python\nclass Timer:\n    def __enter__(self):\n        self.start = time.time()\n    \n    def __exit__(self, *args):\n        print(f'–í—Ä–µ–º—è: {time.time() - self.start} —Å–µ–∫')\n\nwith Timer():\n    time.sleep(1)  # –í—Ä–µ–º—è: 1.0 —Å–µ–∫\n```\n‚è±Ô∏è –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ (—Ñ–∞–π–ª—ã, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ —Ç.–¥.).",
    "options": [
      {
        "text": "__enter__ –∏ __exit__",
        "is_correct": true
      },
      {
        "text": "__start__ –∏ __end__",
        "is_correct": false
      },
      {
        "text": "__open__ –∏ __close__",
        "is_correct": false
      },
      {
        "text": "@contextmanager",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥, –Ω–µ —Ç—Ä–µ–±—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫–∑–µ–º–ø–ª—è—Ä—É (`self`)?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `@staticmethod`:\n\n```python\nclass MathUtils:\n    @staticmethod\n    def add(a, b):\n        return a + b\n\nprint(MathUtils.add(2, 3))  # 5 (–≤—ã–∑–æ–≤ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞!)\n```\nüîπ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∏ `self`, –Ω–∏ `cls`. –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞.",
    "options": [
      {
        "text": "@staticmethod",
        "is_correct": true
      },
      {
        "text": "@classmethod",
        "is_correct": false
      },
      {
        "text": "def static():",
        "is_correct": false
      },
      {
        "text": "@nobind",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥, —Ä–∞–±–æ—Ç–∞—é—â–∏–π —Å –∫–ª–∞—Å—Å–æ–º (–Ω–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º)?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `@classmethod` (–ø–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä ‚Äî `cls`):\n\n```python\nclass Pizza:\n    def __init__(self, ingredients):\n        self.ingredients = ingredients\n    \n    @classmethod\n    def margherita(cls):\n        return cls(['—Ç–æ–º–∞—Ç', '–º–æ—Ü–∞—Ä–µ–ª–ª–∞'])  # cls() = Pizza()\n\npizza = Pizza.margherita()  # –°–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä Pizza\n```\nüçï `cls` ‚Äî —ç—Ç–æ —Å–∞–º –∫–ª–∞—Å—Å. –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ñ–∞–±—Ä–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤!",
    "options": [
      {
        "text": "@classmethod —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º cls",
        "is_correct": true
      },
      {
        "text": "@factorymethod",
        "is_correct": false
      },
      {
        "text": "def class_method():",
        "is_correct": false
      },
      {
        "text": "@staticmethod —Å cls",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?\n\nclass A:\n    @classmethod\n    def create(cls):\n        return cls()\n\nclass B(A):\n    pass\n\nobj = B.create()\nprint(type(obj))",
    "explanation": "`<class '__main__.B'>`! üéØ –î–∞–∂–µ —á–µ—Ä–µ–∑ –Ω–∞—Å–ª–µ–¥—É–µ–º—ã–π –∫–ª–∞—Å—Å–æ–≤—ã–π –º–µ—Ç–æ–¥ `cls` –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –∫–ª–∞—Å—Å (`B`), –∞ –Ω–µ –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π (`A`). –≠—Ç–æ –∏ –µ—Å—Ç—å –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º!",
    "options": [
      {
        "text": "<class '__main__.B'>",
        "is_correct": true
      },
      {
        "text": "<class '__main__.A'>",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü–∏—é –≤ Python?",
    "explanation": "–°–æ–∑–¥–∞–≤–∞–π –æ–±—ä–µ–∫—Ç—ã-—á–∞—Å—Ç–∏ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –∫–ª–∞—Å—Å–∞-—Ü–µ–ª–æ–≥–æ:\n\n```python\nclass Engine:\n    def start(self):\n        print('–î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–≤–µ–¥—ë–Ω')\n\nclass Car:\n    def __init__(self):\n        self.engine = Engine()  # –ö–æ–º–ø–æ–∑–∏—Ü–∏—è: –¥–≤–∏–≥–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –±–µ–∑ –º–∞—à–∏–Ω—ã\n    \n    def start(self):\n        self.engine.start()\n\nmy_car = Car()\nmy_car.start()  # –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–≤–µ–¥—ë–Ω\n```\nüöó **–ö–æ–º–ø–æ–∑–∏—Ü–∏—è** ‚Äî –∫–æ–≥–¥–∞ —á–∞—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –±–µ–∑ —Ü–µ–ª–æ–≥–æ (–¥–≤–∏–≥–∞—Ç–µ–ª—å —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –º–∞—à–∏–Ω–æ–π).",
    "options": [
      {
        "text": "–°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞",
        "is_correct": true
      },
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç –∫–ª–∞—Å—Å–∞-—á–∞—Å—Ç–∏",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç",
        "is_correct": false
      },
      {
        "text": "–ü–µ—Ä–µ–¥–∞—Ç—å –∫–ª–∞—Å—Å –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –∫–ª–∞—Å—Å –≤ Python?",
    "explanation": "–î–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ `class`, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º —Å–ª–µ–¥—É–µ—Ç –µ–≥–æ –∏–º—è üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Dog:\n    def __init__(self, name):\n        self.name = name\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏–º–µ—Ç—å —Ç–∞–∫–∏–µ-—Ç–æ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ¬ª.",
    "options": [
      {
        "text": "class",
        "is_correct": true
      },
      {
        "text": "def",
        "is_correct": false
      },
      {
        "text": "function",
        "is_correct": false
      },
      {
        "text": "object",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ó–∞—á–µ–º –Ω—É–∂–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä self?",
    "explanation": "`self` ‚Äî —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ ü§Ø –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–±–∞–∫, –∏ –∫–∞–∂–¥–∞—è –¥–æ–ª–∂–Ω–∞ –∑–Ω–∞—Ç—å —Å–≤–æ—ë –∏–º—è. –ë–µ–∑ `self` –æ–Ω–∏ –±—ã –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–ª–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞.",
    "options": [
      {
        "text": "–°—Å—ã–ª–∫–∞ –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä",
        "is_correct": true
      },
      {
        "text": "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–ª–∞—Å—Å",
        "is_correct": false
      },
      {
        "text": "–ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –¥–ª—è __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞?",
    "explanation": "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä, –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–≤–∞—Ç—å –∫–ª–∞—Å—Å –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Cat:\n    def __init__(self, name):\n        self.name = name\n\nmy_cat = Cat('–ú—É—Ä–∑–∏–∫')\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–°–æ–∑–¥–∞–π –º–Ω–µ –Ω–æ–≤–æ–≥–æ –∫–æ—Ç–∞ –ø–æ –∏–º–µ–Ω–∏ –ú—É—Ä–∑–∏–∫¬ª. –ò–º—è —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —ç–∫–∑–µ–º–ø–ª—è—Ä—É.",
    "options": [
      {
        "text": "Cat()",
        "is_correct": true
      },
      {
        "text": "new Cat()",
        "is_correct": false
      },
      {
        "text": "create Cat()",
        "is_correct": false
      },
      {
        "text": "instance Cat()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –∏–º—ë–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–ª–∞—Å—Å–æ–≤?",
    "explanation": "–í Python –¥–ª—è –∏–º—ë–Ω –∫–ª–∞—Å—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∏–ª—å **CamelCase** üìù –ù–∞–ø—Ä–∏–º–µ—Ä: `UserProfile`, `DataProcessor`. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å –∫–ª–∞—Å—Å—ã –æ—Ç —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –≥–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `snake_case`. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –Ω–∞ –∫–Ω–∏–∂–Ω–æ–π –ø–æ–ª–∫–µ –∫–Ω–∏–≥–∏ –∏ –∂—É—Ä–Ω–∞–ª—ã –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–π —à—Ä–∏—Ñ—Ç –æ–±–ª–æ–∂–∫–∏ ‚Äî —Ç–∞–∫ –ø—Ä–æ—â–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ–µ.",
    "options": [
      {
        "text": "CamelCase",
        "is_correct": true
      },
      {
        "text": "snake_case",
        "is_correct": false
      },
      {
        "text": "UPPER_CASE",
        "is_correct": false
      },
      {
        "text": "kebab-case",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Counter:\n    def __init__(self):\n        self.count = 0\n\n    def increment(self):\n        self.count += 1\n\nc = Counter()\nc.increment()\nprint(c.count)",
    "explanation": "–ú–µ—Ç–æ–¥ `increment()` —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∞—Ç—Ä–∏–±—É—Ç `count` –Ω–∞ 1 üß† –ü–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ `count` —Ä–∞–≤–µ–Ω 0 ‚Üí –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ `increment()` —Å—Ç–∞–Ω–µ—Ç 1. –≠—Ç–æ –∫–∞–∫ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å—á—ë—Ç—á–∏–∫–∞ –æ–¥–∏–Ω —Ä–∞–∑ ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç 1. –í—Å—ë –ª–æ–≥–∏—á–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ.",
    "options": [
      {
        "text": "1",
        "is_correct": true
      },
      {
        "text": "0",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç print(obj)?",
    "explanation": "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ `print(obj)` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ `__str__` üì£ –û–Ω –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef __str__(self):\n    return f'–ò–º—è: {self.name}'\n```\n\n–≠—Ç–æ –∫–∞–∫ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–±–ª–∏—á–∫—É —Å –∏–º–µ–Ω–µ–º –∏ –≤–æ–∑—Ä–∞—Å—Ç–æ–º ‚Äî —Ç–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –º–æ–∂–µ—Ç —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ –∫—Ä–∞—Å–∏–≤–æ.",
    "options": [
      {
        "text": "__str__",
        "is_correct": true
      },
      {
        "text": "__repr__",
        "is_correct": false
      },
      {
        "text": "__name__",
        "is_correct": false
      },
      {
        "text": "__print__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–î–∞, –≤ Python –º–æ–∂–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Person:\n    pass\n\np = Person()\np.name = '–ê–Ω–Ω–∞'\n```\n\n–≠—Ç–æ –≥–∏–±–∫–æ—Å—Ç—å —è–∑—ã–∫–∞, –Ω–æ –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω ‚Äî —Ç–∞–∫ –ª–µ–≥–∫–æ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è –≤ –∫–æ–¥–µ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –∫—É–ø–∏–ª —Ç–µ–ª–µ—Ñ–æ–Ω, –∞ –ø–æ—Ç–æ–º —Å–∞–º –ø—Ä–∏–∫—Ä—É—Ç–∏–ª –µ–º—É –∫–∞–º–µ—Ä—É.",
    "options": [
      {
        "text": "–î–∞, –º–æ–∂–Ω–æ",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ __init__",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @property",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å new()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?",
    "explanation": "–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–¥–Ω–æ–º—É –∫–ª–∞—Å—Å—É (–ø–æ—Ç–æ–º–∫—É) –±—Ä–∞—Ç—å –º–µ—Ç–æ–¥—ã –∏ –∞—Ç—Ä–∏–±—É—Ç—ã –¥—Ä—É–≥–æ–≥–æ (—Ä–æ–¥–∏—Ç–µ–ª—è) üß¨ –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø —Ö–æ—á—É, —á—Ç–æ–±—ã –∫–ª–∞—Å—Å `Dog` –±—ã–ª –ø–æ—Ö–æ–∂ –Ω–∞ –∫–ª–∞—Å—Å `Animal`, –Ω–æ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏¬ª. –û—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–π –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞.",
    "options": [
      {
        "text": "–ö–ª–∞—Å—Å –ø–æ–ª—É—á–∞–µ—Ç –º–µ—Ç–æ–¥—ã –¥—Ä—É–≥–æ–≥–æ",
        "is_correct": true
      },
      {
        "text": "–ö–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é",
        "is_correct": false
      },
      {
        "text": "–û–±—ä–µ–∫—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–æ–¥–∏—Ç–µ–ª–µ–º",
        "is_correct": false
      },
      {
        "text": "–§—É–Ω–∫—Ü–∏—è –Ω–∞—Å–ª–µ–¥—É–µ—Ç –∫–ª–∞—Å—Å",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass MyClass:\n    def __init__(self):\n        self.x = 10\n\na = MyClass()\nb = MyClass()\nMyClass.x = 20\nprint(a.x, b.x)",
    "explanation": "–ö–æ–≥–¥–∞ —Ç—ã –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ `a.x`, Python —Å–Ω–∞—á–∞–ª–∞ –∏—â–µ—Ç –∞—Ç—Ä–∏–±—É—Ç –≤ —Å–∞–º–æ–º –æ–±—ä–µ–∫—Ç–µ, –∞ –ø–æ—Ç–æ–º –≤ –∫–ª–∞—Å—Å–µ üîÑ –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ `a` –∏ `b` –Ω–µ –∏–º–µ—é—Ç —Å–≤–æ–µ–≥–æ `x` ‚Üí –±–µ—Ä—É—Ç –∏–∑ –∫–ª–∞—Å—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–æ–∑–∂–µ –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ 20. –†–µ–∑—É–ª—å—Ç–∞—Ç: `20 20`. –≠—Ç–æ –∫–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã ‚Äî –∏ –æ–Ω–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º.",
    "options": [
      {
        "text": "20 20",
        "is_correct": true
      },
      {
        "text": "10 10",
        "is_correct": false
      },
      {
        "text": "10 20",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∞—Ç—Ä–∏–±—É—Ç–∞—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞?",
    "explanation": "–ê—Ç—Ä–∏–±—É—Ç—ã —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Ö—Ä–∞–Ω—è—Ç –¥–∞–Ω–Ω—ã–µ, —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Dog:\n    def __init__(self, name):\n        self.name = name\n\na = Dog('–ë–æ–±–∏–∫')\nb = Dog('–®–∞—Ä–∏–∫')\n```\n\n–£ `a` –∏ `b` —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è `name`. –≠—Ç–æ –∫–∞–∫ —É –∫–∞–∂–¥–æ–π —Å–æ–±–∞–∫–∏ —Å–≤–æ—ë –∏–º—è ‚Äî –æ–Ω–æ –Ω–µ –æ–±—â–µ–µ –Ω–∞ –≤—Å–µ—Ö.",
    "options": [
      {
        "text": "–î–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞",
        "is_correct": true
      },
      {
        "text": "–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å–∞",
        "is_correct": false
      },
      {
        "text": "–ú–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞",
        "is_correct": false
      },
      {
        "text": "–§—É–Ω–∫—Ü–∏–∏",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ –±–µ–∑ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞?",
    "explanation": "–ú–æ–∂–Ω–æ, –Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –≤—Ä—É—á–Ω—É—é ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Dog:\n    def bark(self):\n        print('–ì–∞–≤!')\n\nDog.bark(Dog())  # –ì–∞–≤!\n```\n\nPython –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ `self` ‚Äî –µ—Å–ª–∏ —Ç—ã –µ–≥–æ –ø–µ—Ä–µ–¥–∞—à—å —Å–∞–º, –æ–Ω —Å—Ä–∞–±–æ—Ç–∞–µ—Ç. –≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å –ø—É–ª—å—Ç –æ—Ç —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä –Ω–µ –≤ —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Ö ‚Äî –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª —Ä—è–¥–æ–º.",
    "options": [
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ Class.method(obj)",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ obj.method()",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @classmethod",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É–¥–∞–ª–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `del` üóë –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\np = Person('–ê–Ω–Ω–∞')\ndel p.name\n```\n\n–≠—Ç–æ –∫–∞–∫ –≤—ã—á–µ—Ä–∫–Ω—É—Ç—å –∏–º—è –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫ ‚Äî –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç—ã –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—à—å –∫ –Ω–µ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è, –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—à—å –æ—à–∏–±–∫—É.",
    "options": [
      {
        "text": "del obj.attr",
        "is_correct": true
      },
      {
        "text": "obj.remove(attr)",
        "is_correct": false
      },
      {
        "text": "p.delete(name)",
        "is_correct": false
      },
      {
        "text": "del attr",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç hasattr()?",
    "explanation": "`hasattr()` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ —É –æ–±—ä–µ–∫—Ç–∞ üßê –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nif hasattr(obj, 'age'):\n    print(obj.age)\n```\n\n–≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∞—Ç—Ä–∏–±—É—Ç—É. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å, –µ—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∫–ª—é—á–∏, –ø—Ä–µ–∂–¥–µ —á–µ–º –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –¥–æ–º–∞.",
    "options": [
      {
        "text": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞",
        "is_correct": true
      },
      {
        "text": "–£–¥–∞–ª—è–µ—Ç –∞—Ç—Ä–∏–±—É—Ç",
        "is_correct": false
      },
      {
        "text": "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞",
        "is_correct": false
      },
      {
        "text": "–°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é `setattr()` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nsetattr(obj, 'name', '–ê–Ω–Ω–∞')\n```\n\n–≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ, –∫–æ–≥–¥–∞ –∏–º—è –∞—Ç—Ä–∏–±—É—Ç–∞ –∑–∞—Ä–∞–Ω–µ–µ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–æ –∏–ª–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –∑–∞–ø–æ–ª–Ω—è–µ—à—å –∞–Ω–∫–µ—Ç—É, –≥–¥–µ –ø–æ–ª—è –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –Ω–µ –¥–æ –Ω–∞—á–∞–ª–∞, –∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ.",
    "options": [
      {
        "text": "setattr(obj, 'name', value)",
        "is_correct": true
      },
      {
        "text": "obj.set('name', value)",
        "is_correct": false
      },
      {
        "text": "obj.name = value",
        "is_correct": false
      },
      {
        "text": "set(obj, name=value)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Student:\n    def __init__(self):\n        self._name = '–ê–Ω–æ–Ω–∏–º'\n\n    def get_name(self):\n        return self._name\n\ns = Student()\ns._name = '–ò–≤–∞–Ω'\nprint(s.get_name())",
    "explanation": "–í Python –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ `_name` ‚Äî —ç—Ç–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± **–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ**, –∞ –Ω–µ —Å—Ç—Ä–æ–≥–∞—è –∑–∞—â–∏—Ç–∞ üß± –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –º–µ–Ω—è–µ–º `_name` –Ω–∞–ø—Ä—è–º—É—é, –∏ `get_name()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –¢–∞–∫ –¥–µ–ª–∞—Ç—å –º–æ–∂–Ω–æ, –Ω–æ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ‚Äî –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `@property` –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –±—É–¥—É –ª–µ–∑—Ç—å –≤–Ω—É—Ç—Ä—å —á–∞—Å–æ–≤, —è –¥–æ–≤–µ—Ä—é –∏–º –∏—Ö —Ä–∞–±–æ—Ç—É¬ª.",
    "options": [
      {
        "text": "'–ò–≤–∞–Ω'",
        "is_correct": true
      },
      {
        "text": "'–ê–Ω–æ–Ω–∏–º'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ getattr()?",
    "explanation": "–î–∞, `getattr()` –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏ –º–µ—Ç–æ–¥—ã ü™Ñ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Dog:\n    def bark(self):\n        print('–ì–∞–≤!')\n\nobj = Dog()\nmethod = getattr(obj, 'bark')\nmethod()  # –ì–∞–≤!\n```\n\n–≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ, –∫–æ–≥–¥–∞ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å –∑–∞—Ä–∞–Ω–µ–µ, –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤—ã–∑–≤–∞—Ç—å. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å –∫–Ω–∏–≥—É –ø–æ –æ–≥–ª–∞–≤–ª–µ–Ω–∏—é –∏ –Ω–∞—Ö–æ–¥–∏—à—å –Ω—É–∂–Ω—É—é –≥–ª–∞–≤—É.",
    "options": [
      {
        "text": "–î–∞, –µ—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ –∞—Ç—Ä–∏–±—É—Ç—ã",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å hasattr()",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ __dict__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Box:\n    def __init__(self):\n        self._content = '–ü—É—Å—Ç–æ'\n\n    def get_content(self):\n        return self._content\n\nb = Box()\nprint(b.get_content())",
    "explanation": "–ú–µ—Ç–æ–¥ `get_content()` –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ `_content`, –∫–æ—Ç–æ—Ä–æ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ `'–ü—É—Å—Ç–æ'` üì¶ –≠—Ç–æ –ø—Ä–∏–º–µ—Ä –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏ ‚Äî –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —ç—Ç–æ —Å–µ–π—Ñ: —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å –µ–≥–æ, –∞ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –º–µ—Ç–æ–¥ `–æ—Ç–∫—Ä—ã—Ç—å()`.",
    "options": [
      {
        "text": "'–ü—É—Å—Ç–æ'",
        "is_correct": true
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "''",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –º–µ—Ç–æ–¥ —É –∫–ª–∞—Å—Å–∞?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `hasattr()` –∏–ª–∏ `getattr()` üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nif hasattr(obj, 'run'):\n    obj.run()\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–µ—Ç–æ–¥–æ–≤. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å, —É–º–µ–µ—Ç –ª–∏ —Ç–≤–æ–π –≥–µ—Ä–æ–π –±–µ–≥–∞—Ç—å, –ø—Ä–µ–∂–¥–µ —á–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏—è.",
    "options": [
      {
        "text": "hasattr(obj, 'run')",
        "is_correct": true
      },
      {
        "text": "isinstance(obj, run)",
        "is_correct": false
      },
      {
        "text": "callable(obj.run)",
        "is_correct": false
      },
      {
        "text": "dir(obj).has('run')",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä `@staticmethod` ü§Ø –û–Ω –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ –Ω–µ–∑–∞–≤–∏—Å—è—â–∏–º –æ—Ç `self`. –ü—Ä–∏–º–µ—Ä:\n\n```python\nclass Math:\n    @staticmethod\n    def square(x):\n        return x * x\n\nprint(Math.square(5))  # 25\n```\n\n–≠—Ç–æ –∫–∞–∫ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞: –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∞–º–∞ –ø–æ —Å–µ–±–µ, –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É.",
    "options": [
      {
        "text": "@staticmethod",
        "is_correct": true
      },
      {
        "text": "@classmethod",
        "is_correct": false
      },
      {
        "text": "def method():",
        "is_correct": false
      },
      {
        "text": "@property",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥–æ—Å—Ç—É–ø–∞?",
    "explanation": "–î–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ç—Ä–∏–±—É—Ç–∞–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `@property` üõ° –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Person:\n    def __init__(self, name):\n        self._name = name\n\n    @property\n    def name(self):\n        return self._name.upper()\n```\n\n–¢–µ–ø–µ—Ä—å `name` –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é, –∏ –≤—ã–≤–æ–¥ –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å: ¬´–Ø –ø–æ–∫–∞–∂—É —Ç–µ–±–µ —Å–≤–æ—ë –∏–º—è, –Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ¬ª.",
    "options": [
      {
        "text": "@property",
        "is_correct": true
      },
      {
        "text": "@property.setter",
        "is_correct": false
      },
      {
        "text": "@staticmethod",
        "is_correct": false
      },
      {
        "text": "@classmethod",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Student:\n    def __init__(self):\n        self.__secret = '–®–∏—Ñ—Ä'\n\ns = Student()\nprint(s.__secret)",
    "explanation": "–í Python –¥–≤–æ–π–Ω–æ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ `__secret` –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç name mangling ü§Ø –¢–æ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è `_Student__secret`. –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ `s.__secret` ‚Äî –±—É–¥–µ—Ç `AttributeError`. –≠—Ç–æ –Ω–µ –∑–∞—â–∏—Ç–∞, –∞ —Å–∫–æ—Ä–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ¬´–ù–µ —Ç—Ä–æ–≥–∞–π —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é¬ª. –≠—Ç–æ –∫–∞–∫ –ø–æ–º–µ—Ç–∏—Ç—å —Ñ–∞–π–ª –∫–∞–∫ —Å–∫—Ä—ã—Ç—ã–π ‚Äî –æ–Ω –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç, –Ω–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –º–µ–Ω–µ–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞: AttributeError",
        "is_correct": true
      },
      {
        "text": "'–®–∏—Ñ—Ä'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "NameError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ —á–µ—Ä–µ–∑ @property?",
    "explanation": "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è, –∑–∞—â–∏—â—ë–Ω–Ω–æ–≥–æ `@property`, –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `@property.setter` üõ° –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Person:\n    def __init__(self, name):\n        self._name = name\n\n    @property\n    def name(self):\n        return self._name.upper()\n\n    @name.setter\n    def name(self, value):\n        if not value:\n            raise ValueError('–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')\n        self._name = value\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –∏–º—è –≤—Å–µ–≥–¥–∞ –±—ã–ª–æ –≤–∞–ª–∏–¥–Ω—ã–º –∏ –∏–º–µ–ª–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –° –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥–æ—Å—Ç—É–ø–∞ —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è ¬´—Å—Ç—Ä–∞–∂—ë–º –¥–∞–Ω–Ω—ã—Ö¬ª üòé",
    "options": [
      {
        "text": "@property.setter",
        "is_correct": true
      },
      {
        "text": "@property.getter",
        "is_correct": false
      },
      {
        "text": "@property.updater",
        "is_correct": false
      },
      {
        "text": "–ù–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç property –±–µ–∑ setter'–∞?",
    "explanation": "–ï—Å–ª–∏ —É `@property` –Ω–µ—Ç `setter`'–∞, —Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –Ω–µ–ª—å–∑—è üß± –≠—Ç–æ —Å–æ–∑–¥–∞—ë—Ç **—Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è** –ø–æ–ª–µ. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@property\ndef age(self):\n    return self._age\n```\n\n–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å `obj.age = 30`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞¬ª. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è –∑–∞—â–∏—Ç—ã –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.",
    "options": [
      {
        "text": "–ó–∞–ø—Ä–µ—â–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ",
        "is_correct": true
      },
      {
        "text": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–í—ã–¥–∞—ë—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏",
        "is_correct": false
      },
      {
        "text": "–†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ staticmethod",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç obj.attr –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏?",
    "explanation": "–ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ `obj.attr` Python –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ `__getattribute__()` ü§Ø –û–Ω –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ—Ç. –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π `__getattr__()`. –≠—Ç–æ –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: `__getattribute__` ‚Äî –æ—Ö—Ä–∞–Ω–∞ —É –≤—Ö–æ–¥–∞, `__getattr__` ‚Äî –ø–æ–∏—Å–∫ –ø–æ –∫–∞–º–µ—Ä–∞–º —Ö—Ä–∞–Ω–µ–Ω–∏—è.",
    "options": [
      {
        "text": "__getattribute__()",
        "is_correct": true
      },
      {
        "text": "__getattr__()",
        "is_correct": false
      },
      {
        "text": "__getitem__()",
        "is_correct": false
      },
      {
        "text": "__call__()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å __dict__ —É –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–ù–µ—Ç, `__dict__` –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é üö´ –≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å, –∫–∞–∫–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π `__slots__`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–í —Ä—é–∫–∑–∞–∫–µ —Ç–æ–ª—å–∫–æ —ç—Ç–∏ –≤–µ—â–∏, –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –Ω–µ –ø—Ä–æ–Ω–µ—Å—ë—à—å¬ª.",
    "options": [
      {
        "text": "–ù–µ—Ç",
        "is_correct": true
      },
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ __dict__ = {}",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @property",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ –∫–ª–∞—Å—Å–µ object",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∫–ª–∞—Å—Å–∞?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `__slots__` üß± –û–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å —É —ç–∫–∑–µ–º–ø–ª—è—Ä–∞. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Point:\n    __slots__ = ('x', 'y')\n\np = Point()\np.x = 10\np.z = 5  # –û—à–∏–±–∫–∞!\n```\n\n–≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —ç–∫–æ–Ω–æ–º–∏—Ç—å –ø–∞–º—è—Ç—å –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤. –ö–∞–∫ –∑–∞–ø–µ—Ä–µ—Ç—å —è—â–∏–∫: –ø–æ–ª–æ–∂–∏—à—å —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –ø–æ–ª–æ–∂–µ–Ω–æ.",
    "options": [
      {
        "text": "__slots__",
        "is_correct": true
      },
      {
        "text": "restrict_attrs",
        "is_correct": false
      },
      {
        "text": "__dict__ = None",
        "is_correct": false
      },
      {
        "text": "freeze()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Student:\n    def __init__(self):\n        self.__secret = '–°–µ–∫—Ä–µ—Ç'\n\ns = Student()\nprint(s._Student__secret)",
    "explanation": "–í Python –¥–≤–æ–π–Ω–æ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ (`__secret`) –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç name mangling ‚Üí —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è `_Student__secret` ü§Ø –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–µ–º—É –º–æ–∂–Ω–æ, –Ω–æ —ç—Ç–æ –Ω–µ –∑–∞—â–∏—Ç–∞, –∞ —Å–∫–æ—Ä–µ–µ —Å–∏–≥–Ω–∞–ª: ¬´–ù–µ —Ç—Ä–æ–≥–∞–π —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é¬ª.\n\n–¢–∞–∫ —á—Ç–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ `'–°–µ–∫—Ä–µ—Ç'`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø —Å–ø—Ä—è—Ç–∞–ª –∫–ª—é—á –ø–æ–¥ –∫–æ–≤—Ä–∏–∫, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –µ–≥–æ –Ω–∞–π—Ç–∏¬ª.",
    "options": [
      {
        "text": "'–°–µ–∫—Ä–µ—Ç'",
        "is_correct": true
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞",
        "is_correct": false
      },
      {
        "text": "''",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è?",
    "explanation": "–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è ‚Äî —ç—Ç–æ –ø—Ä–∏–Ω—Ü–∏–ø –û–û–ü, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä—è—á–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–µ—Ç–∞–ª–∏ –æ–±—ä–µ–∫—Ç–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è üß± –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –≤–∏–¥–∏—à—å —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –ª–∏—Ü–µ–≤–æ–π –ø–∞–Ω–µ–ª–∏ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞, –Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏. –¢–∞–∫ –∂–µ –∏ –≤ –∫–æ–¥–µ: –º—ã —Å–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é, –æ—Å—Ç–∞–≤–ª—è—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã.",
    "options": [
      {
        "text": "–°–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏",
        "is_correct": true
      },
      {
        "text": "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª–∞—Å—Å–æ–≤",
        "is_correct": false
      },
      {
        "text": "–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π",
        "is_correct": false
      },
      {
        "text": "–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç?",
    "explanation": "–í Python –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏—è `_` üõ° –≠—Ç–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≥–æ–≤–æ—Ä–∏—Ç: ¬´–ù–µ —Ç—Ä–æ–≥–∞–π —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é¬ª. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Person:\n    def __init__(self):\n        self._secret = '–ü–∞—Ä–æ–ª—å'\n```\n\n–≠—Ç–æ –Ω–µ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø, –Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ –Ω–µ –ø—É–±–ª–∏—á–Ω–∞—è —á–∞—Å—Ç—å API. –ö–∞–∫ –±—É–¥—Ç–æ –Ω–∞ –¥–≤–µ—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ: ¬´–í—Ö–æ–¥ —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É¬ª.",
    "options": [
      {
        "text": "_attr",
        "is_correct": true
      },
      {
        "text": "__attr",
        "is_correct": false
      },
      {
        "text": "private attr",
        "is_correct": false
      },
      {
        "text": "protected attr",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç?",
    "explanation": "–í Python –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –¥–≤—É—Ö –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–π `__` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass BankAccount:\n    def __init__(self):\n        self.__balance = 0\n```\n\nPython –ø—Ä–∏–º–µ–Ω—è–µ—Ç **name mangling**, —á—Ç–æ–±—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç –≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞—Ö. –≠—Ç–æ –Ω–µ –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –∑–∞—â–∏—Ç–∞, –Ω–æ —Å–∏–≥–Ω–∞–ª: ¬´–ù–µ —Ç—Ä–æ–≥–∞–π —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é¬ª.",
    "options": [
      {
        "text": "__attr",
        "is_correct": true
      },
      {
        "text": "_attr",
        "is_correct": false
      },
      {
        "text": "private attr",
        "is_correct": false
      },
      {
        "text": "hidden attr",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç name mangling?",
    "explanation": "`__attr` –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ `_ClassName__attr` ü§Ø –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass A:\n    def __init__(self):\n        self.__secret = 123\n\nclass B(A):\n    def __init__(self):\n        super().__init__()\n        self.__secret = 456\n```\n\n–ó–¥–µ—Å—å `__secret` –≤ A –∏ B ‚Äî —Ä–∞–∑–Ω—ã–µ. –≠—Ç–æ –∫–∞–∫ –¥–≤–∞ —Å–µ–π—Ñ–∞ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –Ω–æ —Ä–∞–∑–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º.",
    "options": [
      {
        "text": "–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–º—è –≤ _Class__attr",
        "is_correct": true
      },
      {
        "text": "–î–µ–ª–∞–µ—Ç –∞—Ç—Ä–∏–±—É—Ç –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º",
        "is_correct": false
      },
      {
        "text": "–£–¥–∞–ª—è–µ—Ç –∞—Ç—Ä–∏–±—É—Ç",
        "is_correct": false
      },
      {
        "text": "–ë–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–ª–∞—Å—Å—É",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ —É –æ–±—ã—á–Ω–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞?",
    "explanation": "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã –≤ Python **–ø—É–±–ª–∏—á–Ω—ã–µ** üåê –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –∫ –Ω–∏–º –º–æ–∂–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ —á–∏—Ç–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\np = Person()\np.name = '–ê–Ω–Ω–∞'\n```\n\n–≠—Ç–æ —É–¥–æ–±–Ω–æ, –Ω–æ –Ω–µ –≤—Å–µ–≥–¥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –æ—Å—Ç–∞–≤–∏–ª –¥–≤–µ—Ä—å –≤ –¥–æ–º –æ—Ç–∫—Ä—ã—Ç–æ–π ‚Äî –∫—Ç–æ —É–≥–æ–¥–Ω–æ –º–æ–∂–µ—Ç –∑–∞–π—Ç–∏.",
    "options": [
      {
        "text": "–ü—É–±–ª–∏—á–Ω—ã–π",
        "is_correct": true
      },
      {
        "text": "–ó–∞—â–∏—â—ë–Ω–Ω—ã–π",
        "is_correct": false
      },
      {
        "text": "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π",
        "is_correct": false
      },
      {
        "text": "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç?",
    "explanation": "–î–∞, –º–æ–∂–Ω–æ, –µ—Å–ª–∏ –∑–Ω–∞—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è `_ClassName__attr` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Person:\n    def __init__(self):\n        self.__name = '–ê–Ω–Ω–∞'\n\np = Person()\nprint(p._Person__name)  # '–ê–Ω–Ω–∞'\n```\n\n–ù–æ –¥–µ–ª–∞—Ç—å —ç—Ç–æ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ‚Äî —ç—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é. –≠—Ç–æ –∫–∞–∫ –≤—Å–∫—Ä—ã—Ç—å —Å–µ–π—Ñ, –∑–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—é, –Ω–æ —ç—Ç–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ—ç—Ç–∏—á–Ω–æ.",
    "options": [
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ _Class__attr",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, –Ω–∏–∫–æ–≥–¥–∞",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @property",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç –≤—ã—á–∏—Å–ª—è–µ–º—ã–º?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `@property` üß† –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –∞—Ç—Ä–∏–±—É—Ç, –±–µ–∑ —Å–∫–æ–±–æ–∫. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Circle:\n    def __init__(self, radius):\n        self.radius = radius\n\n    @property\n    def diameter(self):\n        return self.radius * 2\n```\n\n–¢–µ–ø–µ—Ä—å `circle.diameter` –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ ‚Äî –∫–∞–∫ –±—É–¥—Ç–æ —ç—Ç–æ –æ–±—ã—á–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç, –Ω–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ ‚Äî –º–µ—Ç–æ–¥.",
    "options": [
      {
        "text": "@property",
        "is_correct": true
      },
      {
        "text": "@classmethod",
        "is_correct": false
      },
      {
        "text": "@staticmethod",
        "is_correct": false
      },
      {
        "text": "__init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Person:\n    def __init__(self):\n        self.__name = '–ê–Ω–Ω–∞'\n\n    def get_name(self):\n        return self.__name\n\np = Person()\np.__name = '–ú–∞—Ä–∏—è'\nprint(p.get_name())",
    "explanation": "–í Python `__name` –∏ `p.__name` ‚Äî —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã ü§Ø `__name` –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ `_Person__name`, –∞ `p.__name` ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–æ–≤—ã–π –ø—É–±–ª–∏—á–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç. –ú–µ—Ç–æ–¥ `get_name()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π `__name`, —Ç–æ –µ—Å—Ç—å '–ê–Ω–Ω–∞'. –≠—Ç–æ –∫–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª—é—á –ø–æ–¥ –∫–æ–≤—Ä–∏–∫–æ–º, –∞ –ø–æ—Ç–æ–º –Ω–∞–π—Ç–∏ –µ–≥–æ –∏ –ø–æ–¥—É–º–∞—Ç—å, —á—Ç–æ –æ–Ω –Ω–æ–≤—ã–π.",
    "options": [
      {
        "text": "'–ê–Ω–Ω–∞'",
        "is_correct": true
      },
      {
        "text": "'–ú–∞—Ä–∏—è'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç @property.setter?",
    "explanation": "`@property.setter` –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º üõ° –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Person:\n    @property\n    def age(self):\n        return self._age\n\n    @age.setter\n    def age(self, value):\n        if value < 0:\n            raise ValueError('–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º')\n        self._age = value\n```\n\n–≠—Ç–æ –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ö—Ä–∞–Ω—É —É –¥–≤–µ—Ä–µ–π: ¬´–ü—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º¬ª.",
    "options": [
      {
        "text": "–†–∞–∑—Ä–µ—à–∞–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –∞—Ç—Ä–∏–±—É—Ç",
        "is_correct": true
      },
      {
        "text": "–ó–∞–ø—Ä–µ—â–∞–µ—Ç —á—Ç–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –¥–ª—è –∫–ª–∞—Å—Å–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏ obj.attr = value?",
    "explanation": "–ü—Ä–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç—É –æ–±—ä–µ–∫—Ç–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ `__setattr__()` üß† –û–Ω —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–º, –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞. –≠—Ç–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–ª–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.\n\n–ù–∞–ø—Ä–∏–º–µ—Ä, —Ç—ã –º–æ–∂–µ—à—å —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ –ø—ã—Ç–∞–µ—à—å—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–º—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π¬ª. –≠—Ç–æ –∫–∞–∫ –¥–≤–µ—Ä–Ω–æ–π –∑–∞–º–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö.",
    "options": [
      {
        "text": "__setattr__()",
        "is_correct": true
      },
      {
        "text": "__set__()",
        "is_correct": false
      },
      {
        "text": "__assign__()",
        "is_correct": false
      },
      {
        "text": "__store__()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∑–∞—â–∏—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é?",
    "explanation": "–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫—Ä—ã—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–µ—Ç–∞–ª–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã üß± –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å—á–µ—Ç–∞ (`account.balance += 100`) –ª—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å –º–µ—Ç–æ–¥ `deposit(amount)`, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.\n\n–≠—Ç–æ –∫–∞–∫ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –º–µ–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏ —Å–∫–∞–∑–∞—Ç—å: ¬´–•–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å¬ª.",
    "options": [
      {
        "text": "–ß–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã",
        "is_correct": true
      },
      {
        "text": "–ß–µ—Ä–µ–∑ __init__",
        "is_correct": false
      },
      {
        "text": "–ß–µ—Ä–µ–∑ __dict__",
        "is_correct": false
      },
      {
        "text": "–ß–µ—Ä–µ–∑ hasattr()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–ø—Ä—è—Ç–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?",
    "explanation": "–í Python –Ω–µ–ª—å–∑—è –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–ø—Ä—è—Ç–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç ü§Ø –î–∞–∂–µ —Å `__attr` –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ `_Class__attr`. –≠—Ç–æ —Å–∫–æ—Ä–µ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ, —á–µ–º –∑–∞—â–∏—Ç–∞. –ù–æ –æ–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —ç—Ç–æ –Ω–µ —Å–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞, –∞ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–Ω–∞—Ç–∞ —Å —Ç–∞–±–ª–∏—á–∫–æ–π ¬´–ù–µ –≤—Ö–æ–¥–∏—Ç—å¬ª.",
    "options": [
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è",
        "is_correct": true
      },
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ private",
        "is_correct": false
      },
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ __slots__",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @property",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Secret:\n    def __init__(self):\n        self.__value = 42\n\ns = Secret()\nprint(s.__dict__)\nprint(s._Secret__value)",
    "explanation": "–í—ã–≤–æ–¥ –±—É–¥–µ—Ç:\n```\n{'_Secret__value': 42}\n42\n```\n\n`__value` –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ `_Secret__value` —á–µ—Ä–µ–∑ name mangling üß© –¢–∞–∫ —á—Ç–æ —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, –Ω–æ —É–∂–µ –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —ç—Ç–æ ¬´–≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –ø–æ–ª–µ¬ª. –≠—Ç–æ –∫–∞–∫ —É–≤–∏–¥–µ—Ç—å –Ω–∞–¥–ø–∏—Å—å: ¬´–Ø —Å–ø—Ä—è—Ç–∞–Ω, –Ω–æ –Ω–∞–π—Ç–∏ –º–µ–Ω—è –º–æ–∂–Ω–æ¬ª.",
    "options": [
      {
        "text": "{'_Secret__value': 42} –∏ 42",
        "is_correct": true
      },
      {
        "text": "{'__value': 42} –∏ 42",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None –∏ None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ —Å–∞–º—ã–π –≥–∏–±–∫–∏–π?",
    "explanation": "–°–∞–º—ã–π –≥–∏–±–∫–∏–π —Å–ø–æ—Å–æ–± ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `@property` –∏ `setter` üõ° –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π ‚Äî –∏ –≤—Å—ë —ç—Ç–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ API. –≠—Ç–æ –∫–∞–∫ –∏–º–µ—Ç—å –¥–≤–µ—Ä—å —Å –∫–æ–¥–æ–≤—ã–º –∑–∞–º–∫–æ–º: —Ç—ã –∑–Ω–∞–µ—à—å, –∫—Ç–æ –≤–æ—à—ë–ª, –∏ —á—Ç–æ –æ–Ω —Å–¥–µ–ª–∞–ª.",
    "options": [
      {
        "text": "@property + setter",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ public –∞—Ç—Ä–∏–±—É—Ç—ã",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ private –∞—Ç—Ä–∏–±—É—Ç—ã",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ __dict__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π?",
    "explanation": "–õ—É—á—à–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `@property.setter` –∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@name.setter\ndef name(self, value):\n    if not value:\n        raise ValueError('–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')\n    self._name = value\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–¢—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è, –Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª¬ª. –û—à–∏–±–∫–∏ ‚Äî —ç—Ç–æ —Ç–≤–æ–π —Å–æ—é–∑–Ω–∏–∫ –≤ –±–æ—Ä—å–±–µ –∑–∞ —á–∏—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ.",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤ setter",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å __slots__",
        "is_correct": false
      },
      {
        "text": "–£–±—Ä–∞—Ç—å setter",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å final",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –¥–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –≤ —Å–∫–æ–±–∫–∞—Ö üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Cat(Animal):\n    pass\n```\n\n–¢–µ–ø–µ—Ä—å `Cat` –∏–º–µ–µ—Ç –≤—Å—ë, —á—Ç–æ –µ—Å—Ç—å —É `Animal`. –≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å —Å—Ç–∞—Ä—ã–π —á–µ—Ä—Ç—ë–∂ –¥–æ–º–∞ –∏ –Ω–∞—á–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç—å –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤—ã–π ‚Äî –Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –¥–∏–∑–∞–π–Ω –∫—Ä—ã—à–∏ –∏ –æ–∫–æ–Ω.",
    "options": [
      {
        "text": "class Cat(Animal):",
        "is_correct": true
      },
      {
        "text": "def Cat extends Animal:",
        "is_correct": false
      },
      {
        "text": "class Cat: parent = Animal",
        "is_correct": false
      },
      {
        "text": "class Cat -> Animal",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—è?",
    "explanation": "–î–ª—è –≤—ã–∑–æ–≤–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `super().__init__()` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Dog(Animal):\n    def __init__(self, name):\n        super().__init__('dog')\n        self.name = name\n```\n\n–≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–¥–∏—Ç–µ–ª—è —Ç–æ–∂–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª: ¬´–°–Ω–∞—á–∞–ª–∞ —è –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏ –æ–±—â—É—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É, –ø–æ—Ç–æ–º ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è¬ª.",
    "options": [
      {
        "text": "super().__init__()",
        "is_correct": true
      },
      {
        "text": "self.__init__()",
        "is_correct": false
      },
      {
        "text": "parent().__init__()",
        "is_correct": false
      },
      {
        "text": "Animal.init(self)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç super()?",
    "explanation": "`super()` –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –º–µ—Ç–æ–¥–∞–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ ü™Ñ –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—ã –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—à—å `__init__`, –Ω–æ —Ö–æ—á–µ—à—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–æ–¥–∏—Ç–µ–ª—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π `super()`. –≠—Ç–æ –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è: ¬´–Ø —Å–¥–µ–ª–∞—é –≤—Å—ë –ø–æ-—Å–≤–æ–µ–º—É, –Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—é, —á—Ç–æ —Ç—ã –º–Ω–µ –æ—Å—Ç–∞–≤–∏–ª¬ª.",
    "options": [
      {
        "text": "–û–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –º–µ—Ç–æ–¥–∞–º —Ä–æ–¥–∏—Ç–µ–ª—è",
        "is_correct": true
      },
      {
        "text": "–í—ã–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥",
        "is_correct": false
      },
      {
        "text": "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞",
        "is_correct": false
      },
      {
        "text": "–°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å—Ä–∞–∑—É –æ—Ç –¥–≤—É—Ö –∫–ª–∞—Å—Å–æ–≤?",
    "explanation": "–î–∞, Python –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç **–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ** üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass A:\n    def do(self):\n        print('A')\n\nclass B:\n    def do(self):\n        print('B')\n\nclass C(A, B):\n    pass\n\nC().do()  # –í—ã–≤–µ–¥–µ—Ç A (–ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω)\n```\n\nPython –∏—Å–ø–æ–ª—å–∑—É–µ—Ç MRO (Method Resolution Order) –¥–ª—è –≤—ã–±–æ—Ä–∞, –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞—Ç—å. –≠—Ç–æ –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å, —á—å—ë —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–µ—Ä–≤—ã–º ‚Äî –æ—Ç –º–∞–º—ã –∏–ª–∏ –ø–∞–ø—ã.",
    "options": [
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ class C(A, B):",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @mixin",
        "is_correct": false
      },
      {
        "text": "–ß–µ—Ä–µ–∑ import",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ MRO?",
    "explanation": "MRO ‚Äî —ç—Ç–æ –ø–æ—Ä—è–¥–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ (Method Resolution Order) üîÑ –û–Ω –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –ø—Ä–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏. Python –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º C3-linearization, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å.\n\n–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç –º–∞–º—ã –∏ –ø–∞–ø—ã. MRO –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ—à–∏—Ç—å, —á—å—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–µ—Ä–≤–æ–π.",
    "options": [
      {
        "text": "–ü–æ—Ä—è–¥–æ–∫ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–æ–≤",
        "is_correct": true
      },
      {
        "text": "–¢–∏–ø –º–µ—Ç–æ–¥–∞",
        "is_correct": false
      },
      {
        "text": "–ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤",
        "is_correct": false
      },
      {
        "text": "–ú–æ–¥—É–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å MRO –¥–ª—è –∫–ª–∞—Å—Å–∞?",
    "explanation": "–í Python –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ `mro()` –∏–ª–∏ –∞—Ç—Ä–∏–±—É—Ç `__mro__` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass D(B, C):\n    pass\n\nprint(D.mro())\n```\n\n–≠—Ç–æ –ø–æ–∫–∞–∂–µ—Ç, –≤ –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ Python –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –º–µ—Ç–æ–¥—ã –≤ –∫–ª–∞—Å—Å–∞—Ö. –≠—Ç–æ –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –ø–æ –º—É–∑–µ—é: —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ª A, –ø–æ—Ç–æ–º B, –ø–æ—Ç–æ–º C.",
    "options": [
      {
        "text": "D.mro()",
        "is_correct": true
      },
      {
        "text": "D.__mro__",
        "is_correct": false
      },
      {
        "text": "super().__order__",
        "is_correct": false
      },
      {
        "text": "inspect.getmro(D)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass A:\n    def do(self):\n        print('A')\n\nclass B(A):\n    def do(self):\n        print('B')\n\nclass C(B):\n    def do(self):\n        print('C')\n\nobj = C()\nobj.do()",
    "explanation": "–í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ `do()` –Ω–∞—á–Ω—ë—Ç—Å—è —Å —Å–∞–º–æ–≥–æ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∞ üß© –ü–æ—Å–∫–æ–ª—å–∫—É `C` –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç `do()` ‚Üí –≤—ã–≤–æ–¥ –±—É–¥–µ—Ç `'C'`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –∑–Ω–∞—é, –∫–∞–∫ –¥–µ–ª–∞—Ç—å –ª—É—á—à–µ¬ª ‚Äî –∏ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Ä–æ–¥–∏—Ç–µ–ª—è–º, –µ—Å–ª–∏ –Ω–µ—Ç –Ω—É–∂–¥—ã.",
    "options": [
      {
        "text": "'C'",
        "is_correct": true
      },
      {
        "text": "'B'",
        "is_correct": false
      },
      {
        "text": "'A'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—è super()?",
    "explanation": "–ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –∏–º—è —Ä–æ–¥–∏—Ç–µ–ª—è ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Dog(Animal):\n    def __init__(self, name):\n        Animal.__init__(self, 'dog')\n        self.name = name\n```\n\n–û–¥–Ω–∞–∫–æ —ç—Ç–æ –º–µ–Ω–µ–µ –≥–∏–±–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏. –≠—Ç–æ –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –∑–≤–æ–Ω–∏—Ç—å –º–∞–º–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∞ —É–∂–µ –Ω–µ –≥–ª–∞–≤–Ω–∞—è –ø–æ –¥–æ–º–∞—à–Ω–µ–º—É –ø—Ä–∞–≤–∏–ª—É.",
    "options": [
      {
        "text": "Animal.__init__(self)",
        "is_correct": true
      },
      {
        "text": "parent.__init__()",
        "is_correct": false
      },
      {
        "text": "self.__init__()",
        "is_correct": false
      },
      {
        "text": "__super__.__init__()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass A:\n    def greet(self):\n        print('A')\n\nclass B(A):\n    def greet(self):\n        print('B')\n\nclass C(A):\n    pass\n\nclass D(C, B):\n    pass\n\nD().greet()",
    "explanation": "MRO –¥–ª—è `D`: `D ‚Üí C ‚Üí B ‚Üí A ‚Üí object` ü§Ø –ü–æ—ç—Ç–æ–º—É —Å–Ω–∞—á–∞–ª–∞ –∏—â–µ—Ç—Å—è `greet()` –≤ `D`, –∑–∞—Ç–µ–º –≤ `C` (–Ω–µ—Ç), –ø–æ—Ç–æ–º –≤ `B` ‚Üí –≤—ã–≤–æ–¥–∏—Ç—Å—è `'B'`. –≠—Ç–æ –∫–∞–∫ –≤—ã–±–æ—Ä –º–∞—Ä—à—Ä—É—Ç–∞: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º D, –ø–æ—Ç–æ–º C, –ø–æ—Ç–æ–º B, –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ A.",
    "options": [
      {
        "text": "'B'",
        "is_correct": true
      },
      {
        "text": "'A'",
        "is_correct": false
      },
      {
        "text": "'C'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞?",
    "explanation": "–ü—Ä–æ—Å—Ç–æ –æ–±—ä—è–≤–∏ –º–µ—Ç–æ–¥ —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º –≤ –¥–æ—á–µ—Ä–Ω–µ–º –∫–ª–∞—Å—Å–µ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Animal:\n    def speak(self):\n        print('–ó–≤—É–∫')\n\nclass Cat(Animal):\n    def speak(self):\n        print('–ú—è—É')\n\nCat().speak()  # –ú—è—É\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–¢—ã –Ω–∞—Å–ª–µ–¥–Ω–∏–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö, –Ω–æ —Ç—ã –º—è—É–∫–∞–µ—à—å, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∑–≤—É—á–∏—à—å¬ª.",
    "options": [
      {
        "text": "–û–±—ä—è–≤–∏—Ç—å –º–µ—Ç–æ–¥ —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @override",
        "is_correct": false
      },
      {
        "text": "–£–¥–∞–ª–∏—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è",
        "is_correct": false
      },
      {
        "text": "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø –º–µ—Ç–æ–¥–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `super()` ü™Ñ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Parent:\n    def do(self):\n        print('Parent')\n\nclass Child(Parent):\n    def do(self):\n        print('Child')\n        super().do()\n\nChild().do()  # Child ‚Üí Parent\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø —Å–¥–µ–ª–∞—é —Å–≤–æ—ë –¥–µ–ª–æ, –Ω–æ –ø–æ—Ç–æ–º –≤—ã–ø–æ–ª–Ω—é –∏ —Ç–≤–æ—ë¬ª. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å, –∞ –Ω–µ –∑–∞–º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ.",
    "options": [
      {
        "text": "super().method()",
        "is_correct": true
      },
      {
        "text": "self.method()",
        "is_correct": false
      },
      {
        "text": "parent().method()",
        "is_correct": false
      },
      {
        "text": "Parent.method(self)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –º–µ—Ç–æ–¥ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤?",
    "explanation": "–î–∞, –µ—Å–ª–∏ –æ–Ω–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å üß© –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef make_sound(animal):\n    animal.speak()\n\nmake_sound(Cat())  # –ú—è—É\nmake_sound(Dog())  # –ì–∞–≤\n```\n\n–≠—Ç–æ –∏ –µ—Å—Ç—å –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º: —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º –æ–±—ä–µ–∫—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ `speak()`. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –≤—Å–µ —É–º–µ—é—Ç ¬´–≥–æ–≤–æ—Ä–∏—Ç—å¬ª, –Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å, –∫–∞–∫ –∏–º–µ–Ω–Ω–æ.",
    "options": [
      {
        "text": "–î–∞, –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ —Å –æ–¥–Ω–∏–º –∫–ª–∞—Å—Å–æ–º",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å –º–∏–∫—Å–∏–Ω–∞–º–∏",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ isinstance()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø—Ä–∏–Ω—Ü–∏–ø –û–û–ü –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –º–µ—Ç–æ–¥—ã?",
    "explanation": "–≠—Ç–æ –ø—Ä–∏–Ω—Ü–∏–ø **–ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞**, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –¥–æ—á–µ—Ä–Ω–∏–º –∫–ª–∞—Å—Å–∞–º –∏–∑–º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ, —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è üß± –≠—Ç–æ –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω –¥–æ–º–∞, –∞ –ø–æ—Ç–æ–º –∏–∑–º–µ–Ω–∏—Ç—å –¥–∏–∑–∞–π–Ω –∫—Ä—ã—à–∏ –∏–ª–∏ –æ–∫–æ–Ω. –í—Å—ë —Ä–∞–≤–Ω–æ –¥–æ–º, –Ω–æ —Ç–µ–ø–µ—Ä—å –æ–Ω —É–Ω–∏–∫–∞–ª–µ–Ω.",
    "options": [
      {
        "text": "–ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º",
        "is_correct": true
      },
      {
        "text": "–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è",
        "is_correct": false
      },
      {
        "text": "–ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è",
        "is_correct": false
      },
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞—Ö?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å (`ABC`) –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä `@abstractmethod` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom abc import ABC, abstractmethod\n\nclass Shape(ABC):\n    @abstractmethod\n    def area(self):\n        pass\n\nclass Square(Shape):\n    def __init__(self, side):\n        self.side = side\n\n    def area(self):\n        return self.side ** 2\n```\n\n–¢–µ–ø–µ—Ä—å –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä `Shape`, —Ç–æ–ª—å–∫–æ –µ–≥–æ –ø–æ–¥–∫–ª–∞—Å—Å—ã. –≠—Ç–æ –∫–∞–∫ —á–µ—Ä—Ç—ë–∂ –±–µ–∑ –≥–æ—Ç–æ–≤–æ–≥–æ –¥–æ–º–∞ ‚Äî –æ–Ω –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã —Å—Ç—Ä–æ–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥–æ–º–∞.",
    "options": [
      {
        "text": "@abstractmethod",
        "is_correct": true
      },
      {
        "text": "@staticmethod",
        "is_correct": false
      },
      {
        "text": "@property",
        "is_correct": false
      },
      {
        "text": "pass",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass A:\n    def method(self):\n        print('A')\n\nclass B(A):\n    def method(self):\n        print('B')\n\nclass C(B):\n    pass\n\nC().method()",
    "explanation": "–ö–ª–∞—Å—Å `C` –Ω–∞—Å–ª–µ–¥—É–µ—Ç `B`, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç `A`. –ü–æ—Å–∫–æ–ª—å–∫—É `C` –Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç `method()`, –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –º–µ—Ç–æ–¥ `B` üîÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: `'B'`. –≠—Ç–æ –∫–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ä—à–µ–º—É –±—Ä–∞—Ç—É, –µ—Å–ª–∏ —Ç—ã —Å–∞–º –Ω–µ –º–æ–∂–µ—à—å –∏—Ö –≤—ã–ø–æ–ª–Ω–∏—Ç—å.",
    "options": [
      {
        "text": "'B'",
        "is_correct": true
      },
      {
        "text": "'A'",
        "is_correct": false
      },
      {
        "text": "'C'",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass A:\n    def call(self):\n        self.callback()\n\n    def callback(self):\n        print('A')\n\nclass B(A):\n    def callback(self):\n        print('B')\n\nB().call()",
    "explanation": "–ú–µ—Ç–æ–¥ `callback()` –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ `call()`. –í –∫–ª–∞—Å—Å–µ `B` –æ–Ω –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω, –ø–æ—ç—Ç–æ–º—É –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ `'B'` üß† –≠—Ç–æ –ø—Ä–∏–º–µ—Ä **–ø–æ–ª–∏–º–æ—Ä—Ñ–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è**: –¥–∞–∂–µ –µ—Å–ª–∏ `call()` –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –≤ —Ä–æ–¥–∏—Ç–µ–ª–µ, –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∞.\n\n–ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –≤—ã–∑–≤–∞–ª —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é, –Ω–æ –æ–Ω–∞ —Ç–µ–ø–µ—Ä—å –¥–µ–ª–∞–µ—Ç –Ω–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚Äî –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è —Ä–∞—Å—à–∏—Ä—è–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º.",
    "options": [
      {
        "text": "'B'",
        "is_correct": true
      },
      {
        "text": "'A'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø—Ä–∏–Ω—Ü–∏–ø –û–û–ü –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤?",
    "explanation": "–≠—Ç–æ **–ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º** üß† –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö, –∏ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å –∫–∞–∂–¥–æ–º—É: ¬´–ü–æ–≥–æ–≤–æ—Ä–∏¬ª. –ö–∞–∂–¥—ã–π –≥–æ–≤–æ—Ä–∏—Ç –ø–æ-—Å–≤–æ–µ–º—É ‚Äî –∫–æ—à–∫–∞ –º—è—É–∫–∞–µ—Ç, —Å–æ–±–∞–∫–∞ –ª–∞–µ—Ç. –≠—Ç–æ –∏ –µ—Å—Ç—å –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º –≤ –¥–µ–π—Å—Ç–≤–∏–∏.",
    "options": [
      {
        "text": "–ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º",
        "is_correct": true
      },
      {
        "text": "–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è",
        "is_correct": false
      },
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–∞ —É —Å–ø–∏—Å–∫–∞ —Ä–∞–∑–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤?",
    "explanation": "Python –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–∏–ø—É –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Cat:\n    def speak(self): print('–ú—è—É')\n\nclass Dog:\n    def speak(self): print('–ì–∞–≤')\n\nanimals = [Cat(), Dog()]\nfor a in animals:\n    a.speak()\n```\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –ú—è—É ‚Üí –ì–∞–≤. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–í—ã –≤—Å–µ –º–æ–∂–µ—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å¬ª ‚Äî –∏ –∫–∞–∂–¥—ã–π –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –ø–æ-—Å–≤–æ–µ–º—É.",
    "options": [
      {
        "text": "–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ object",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –≤—ã–∑–æ–≤–µ—Ç—Å—è –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\nclass A:\n    def method(self):\n        print('A')\n\nclass B(A):\n    def method(self):\n        print('B')\n\nclass C(B):\n    pass\n\nC().method()",
    "explanation": "–ö–ª–∞—Å—Å `C` –Ω–µ –∏–º–µ–µ—Ç —Å–≤–æ–µ–≥–æ –º–µ—Ç–æ–¥–∞ `method()` ü§Ø –ü–æ—ç—Ç–æ–º—É Python –∏—â–µ—Ç –µ–≥–æ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –∫–ª–∞—Å—Å–∞—Ö. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç `B`, —Ç–∞–º –Ω–∞–π–¥—ë—Ç –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç. –†–µ–∑—É–ª—å—Ç–∞—Ç: `'B'`. –≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –æ—Ç —Å—Ç–∞—Ä—à–µ–≥–æ –±—Ä–∞—Ç–∞, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—ë –Ω–µ—Ç.",
    "options": [
      {
        "text": "'B'",
        "is_correct": true
      },
      {
        "text": "'A'",
        "is_correct": false
      },
      {
        "text": "'C'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è –¥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏?",
    "explanation": "–ö–æ–Ω–µ—á–Ω–æ! –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å `super()` –≤ –Ω–∞—á–∞–ª–µ –º–µ—Ç–æ–¥–∞, —á—Ç–æ–±—ã —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–¥ ü™Ñ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Animal:\n    def __init__(self):\n        self.type = '–∂–∏–≤–æ—Ç–Ω–æ–µ'\n\nclass Cat(Animal):\n    def __init__(self):\n        super().__init__()\n        self.name = '–ë–∞—Ä—Å–∏–∫'\n```\n\n–¢–µ–ø–µ—Ä—å `type` —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞, –∞ `name` –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ. –≠—Ç–æ –∫–∞–∫ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç—å –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ, –∞ –ø–æ—Ç–æ–º –∏–º—è.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å final",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å?",
    "explanation": "–≠—Ç–æ –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω –Ω–∞–ø—Ä—è–º—É—é üß± –û–Ω —Å–ª—É–∂–∏—Ç —à–∞–±–ª–æ–Ω–æ–º –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–ª–∞—Å—Å–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom abc import ABC, abstractmethod\n\nclass Animal(ABC):\n    @abstractmethod\n    def speak(self):\n        pass\n```\n\n–¢–µ–ø–µ—Ä—å –Ω–µ–ª—å–∑—è —Å–¥–µ–ª–∞—Ç—å `Animal()` ‚Äî —Ç–æ–ª—å–∫–æ –µ–≥–æ –ø–æ–¥–∫–ª–∞—Å—Å—ã. –≠—Ç–æ –∫–∞–∫ —á–µ—Ä—Ç—ë–∂ –¥–æ–º–∞ –±–µ–∑ —Å–∞–º–æ–≥–æ –¥–æ–º–∞.",
    "options": [
      {
        "text": "–®–∞–±–ª–æ–Ω –¥–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–æ–≤",
        "is_correct": true
      },
      {
        "text": "–û–±—ã—á–Ω—ã–π –∫–ª–∞—Å—Å",
        "is_correct": false
      },
      {
        "text": "–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–ª–∞—Å—Å",
        "is_correct": false
      },
      {
        "text": "–ö–ª–∞—Å—Å —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä `@abstractmethod` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Shape(ABC):\n    @abstractmethod\n    def area(self):\n        pass\n```\n\n–õ—é–±–æ–π –¥–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å –æ–±—è–∑–∞–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –º–µ—Ç–æ–¥. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —Ç—ã –±—É–¥–µ—à—å —Ñ–∏–≥—É—Ä–æ–π ‚Äî —Ç—ã –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å —Å—á–∏—Ç–∞—Ç—å –ø–ª–æ—â–∞–¥—å¬ª.",
    "options": [
      {
        "text": "@abstractmethod",
        "is_correct": true
      },
      {
        "text": "@abstract",
        "is_correct": false
      },
      {
        "text": "@staticmethod",
        "is_correct": false
      },
      {
        "text": "@property",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞?",
    "explanation": "–ù–µ—Ç, –µ—Å–ª–∏ –∫–ª–∞—Å—Å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ üö´ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\na = Animal()  # –û—à–∏–±–∫–∞!\n```\n\nPython –≤—ã–¥–∞—Å—Ç `TypeError`. –¢–∞–∫–∏–µ –∫–ª–∞—Å—Å—ã –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ—Å–µ–ª–∏—Ç—å—Å—è –≤ —á–µ—Ä—Ç–µ–∂–µ –¥–æ–º–∞ ‚Äî –æ–Ω –Ω–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∂–∏–∑–Ω–∏, –∞ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.",
    "options": [
      {
        "text": "–ù–µ—Ç",
        "is_correct": true
      },
      {
        "text": "–î–∞, –µ—Å–ª–∏ –µ—Å—Ç—å __init__",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ @classmethod",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥?",
    "explanation": "–ï—Å–ª–∏ –¥–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤—Å–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–æ–¥–∏—Ç–µ–ª—è ‚Äî –æ–Ω —Ç–æ–∂–µ —Å—Ç–∞–Ω–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Cat(Animal):\n    pass\n\nCat()  # –û—à–∏–±–∫–∞: –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω speak()\n```\n\n–≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å —à–∞–±–ª–æ–Ω –∞–Ω–∫–µ—Ç—ã, –Ω–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è ‚Äî –∞–Ω–∫–µ—Ç–∞ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞",
        "is_correct": true
      },
      {
        "text": "–í—Å—ë —Å—Ä–∞–±–æ—Ç–∞–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–í—ã–∑–æ–≤–µ—Ç—Å—è –º–µ—Ç–æ–¥ object",
        "is_correct": false
      },
      {
        "text": "None –≤–º–µ—Å—Ç–æ –º–µ—Ç–æ–¥–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–µ—Ç –ª–∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –∏–º–µ—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Ç–æ–¥–æ–≤?",
    "explanation": "–î–∞, –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–±—ã—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π üß© –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Animal(ABC):\n    @abstractmethod\n    def speak(self):\n        pass\n\n    def move(self):\n        print('–ü–µ—Ä–µ–¥–≤–∏–≥–∞–µ—Ç—Å—è')\n```\n\n–¢–µ–ø–µ—Ä—å –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å `move()` –±–µ–∑ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è. –≠—Ç–æ –∫–∞–∫ –æ–±—â–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: ¬´–ö–∞–∫ –¥–≤–∏–≥–∞—Ç—å—Å—è ‚Äî —è –≤–∞–º —Å–∫–∞–∂—É —Å–∞–º¬ª, –∞ ¬´–≥–æ–≤–æ—Ä–∏—Ç—å¬ª ‚Äî –≤—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—É—á–∏—Ç—å—Å—è —Å–∞–º–∏.",
    "options": [
      {
        "text": "–î–∞, –∫—Ä–æ–º–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö ABC?",
    "explanation": "–î–∞, Python –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö ABC ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass A(ABC):\n    @abstractmethod\n    def do_a(self):\n        pass\n\nclass B(ABC):\n    @abstractmethod\n    def do_b(self):\n        pass\n\nclass C(A, B):\n    def do_a(self): print('A')\n    def do_b(self): print('B')\n```\n\n–¢–µ–ø–µ—Ä—å `C` —Ä–µ–∞–ª–∏–∑—É–µ—Ç –æ–±–∞ –º–µ—Ç–æ–¥–∞. –≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å —Å—Ä–∞–∑—É –¥–≤–∞ —à–∞–±–ª–æ–Ω–∞ –∏ —Å–æ–µ–¥–∏–Ω–∏—Ç—å –∏—Ö –≤ –æ–¥–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –æ–¥–∏–Ω ABC",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å –º–∏–∫—Å–∏–Ω–∞–º–∏",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Base(ABC):\n    @abstractmethod\n    def method(self):\n        pass\n\nclass Child(Base):\n    def method(self):\n        print('–†–µ–∞–ª–∏–∑–∞—Ü–∏—è')\n\nChild().method()",
    "explanation": "–ö–ª–∞—Å—Å `Child` —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ `method()` üì£ –¢–µ–ø–µ—Ä—å –æ–Ω –Ω–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π, –∏ —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å. –†–µ–∑—É–ª—å—Ç–∞—Ç: `'–†–µ–∞–ª–∏–∑–∞—Ü–∏—è'`. –≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏.",
    "options": [
      {
        "text": "'–†–µ–∞–ª–∏–∑–∞—Ü–∏—è'",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "BaseError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @abstractmethod —Å @property?",
    "explanation": "–î–∞, –º–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å `@abstractmethod` –∏ `@property` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom abc import ABC, abstractmethod\n\nclass Shape(ABC):\n    @property\n    @abstractmethod\n    def area(self):\n        pass\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –≤—ã—á–∏—Å–ª—è–µ–º–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ —É –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–æ–≤. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–¢—ã –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø–ª–æ—â–∞–¥—å, –Ω–æ —è –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –∏–º–µ–Ω–Ω–æ –æ–Ω–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è¬ª.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @staticmethod",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –º–æ–¥—É–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è ABC?",
    "explanation": "–í Python –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º–∏ –±–∞–∑–æ–≤—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥—É–ª—å `abc` üì¶ –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –∏–∑ –Ω–µ–≥–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è `ABC` –∏ `abstractmethod`. –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—ë—Ç–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Ç–æ–¥–æ–≤ –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞—Ö.",
    "options": [
      {
        "text": "abc",
        "is_correct": true
      },
      {
        "text": "types",
        "is_correct": false
      },
      {
        "text": "abstract",
        "is_correct": false
      },
      {
        "text": "interface",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å @abstractmethod?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑—É–µ—à—å `@abstractmethod`, —Ç–æ –≤—Å—ë —Å—Ä–∞–±–æ—Ç–∞–µ—Ç üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Animal(ABC):\n    @abstractmethod\n    def speak(self):\n        pass\n\nclass Cat(Animal):\n    def speak(self):\n        print('–ú—è—É')\n\nCat().speak()  # –ú—è—É\n```\n\n–≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å —à–∞–±–ª–æ–Ω –∞–Ω–∫–µ—Ç—ã –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ ‚Äî —Ç–µ–ø–µ—Ä—å –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.",
    "options": [
      {
        "text": "–†–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ ABC",
        "is_correct": false
      },
      {
        "text": "–í—ã–∑–æ–≤–µ—Ç—Å—è object.method()",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–µ—Ç –ª–∏ –æ–±—ã—á–Ω—ã–π –∫–ª–∞—Å—Å –±—ã—Ç—å —Ä–æ–¥–∏—Ç–µ–ª–µ–º –¥–ª—è ABC?",
    "explanation": "–î–∞, –æ–±—ã—á–Ω—ã–π –∫–ª–∞—Å—Å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–æ–¥–∏—Ç–µ–ª–µ–º –¥–ª—è ABC ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Base:\n    def greet(self):\n        print('–ü—Ä–∏–≤–µ—Ç')\n\nclass A(Base, ABC):\n    pass\n\na = A()\na.greet()  # –ü—Ä–∏–≤–µ—Ç\n```\n\n–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Ç–æ–º—É, —á—Ç–æ `ABC` ‚Äî –ø—Ä–æ—Å—Ç–æ –µ—â—ë –æ–¥–∏–Ω –∫–ª–∞—Å—Å, –∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö –∫–ª–∞—Å—Å–æ–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –≤–∑—è–ª –≥–æ—Ç–æ–≤—ã–π –¥–æ–º –∏ –¥–æ–±–∞–≤–∏–ª –∫ –Ω–µ–º—É –æ—Ö—Ä–∞–Ω—É.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å –º–∏–∫—Å–∏–Ω–∞–º–∏",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass Parent(ABC):\n    @abstractmethod\n    def method(self):\n        pass\n\nclass Child(Parent):\n    def method(self):\n        return '–ì–æ—Ç–æ–≤–æ'\n\nprint(Child().method())",
    "explanation": "–ö–ª–∞—Å—Å `Child` —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ `method()` üì£ –¢–µ–ø–µ—Ä—å —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å, –∏ –º–µ—Ç–æ–¥ –≤–µ—Ä–Ω—ë—Ç `'–ì–æ—Ç–æ–≤–æ'`. –≠—Ç–æ –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—å —á–µ—Ä—Ç—ë–∂ –¥–æ–º–∞ –∏ –Ω–∞—á–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ ‚Äî —Ç–µ–ø–µ—Ä—å –æ–±—ä–µ–∫—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.",
    "options": [
      {
        "text": "'–ì–æ—Ç–æ–≤–æ'",
        "is_correct": true
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "''",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∫–ª–∞—Å—Å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º –±–µ–∑ @abstractmethod?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –Ω–∞—Å–ª–µ–¥—É–µ—à—å—Å—è –æ—Ç `ABC`, —Ç–æ –∫–ª–∞—Å—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º üß± –î–∞–∂–µ –±–µ–∑ `@abstractmethod`. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Animal(ABC):\n    def move(self):\n        print('–ü–µ—Ä–µ–¥–≤–∏–≥–∞–µ—Ç—Å—è')\n\na = Animal()  # –û—à–∏–±–∫–∞!\n```\n\nPython –∑–∞–ø—Ä–µ—Ç–∏—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä, –¥–∞–∂–µ –µ—Å–ª–∏ –≤—Å–µ –º–µ—Ç–æ–¥—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∞–º –ø–æ —Å–µ–±–µ, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø–æ—Ç–æ–º–∫–æ–≤¬ª.",
    "options": [
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç ABC",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å final",
        "is_correct": false
      },
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –º–µ—Ç–æ–¥",
        "is_correct": false
      },
      {
        "text": "–£–∫–∞–∑–∞—Ç—å type: abstract",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –∫–ª–∞—Å—Å –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞?",
    "explanation": "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç ABC —Å `@abstractmethod` üß© –û–Ω –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã –±—É–¥—É—Ç –∏–º–µ—Ç—å –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã. –≠—Ç–æ –∫–∞–∫ –¥–æ–≥–æ–≤–æ—Ä: ¬´–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –±—ã—Ç—å –º–æ–∏–º –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º ‚Äî —Ç—ã –æ–±—è–∑–∞–Ω —ç—Ç–æ —É–º–µ—Ç—å¬ª. –¢–∞–∫–∏–µ –∫–ª–∞—Å—Å—ã —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞–∫ –æ—Å–Ω–æ–≤–∞ –¥–ª—è –ø–ª–∞–≥–∏–Ω–æ–≤ –∏–ª–∏ —Ä–∞—Å—à–∏—Ä—è–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º.",
    "options": [
      {
        "text": "ABC + @abstractmethod",
        "is_correct": true
      },
      {
        "text": "–û–±—ã—á–Ω—ã–π –∫–ª–∞—Å—Å",
        "is_correct": false
      },
      {
        "text": "–ö–ª–∞—Å—Å —Å __slots__",
        "is_correct": false
      },
      {
        "text": "–ö–ª–∞—Å—Å —Å property",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass A(ABC):\n    @abstractmethod\n    def foo(self):\n        pass\n\nclass B(A):\n    def bar(self):\n        print('B')\n\nb = B()\nb.bar()",
    "explanation": "–ö–ª–∞—Å—Å `B` –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ `foo()` ‚Üí –ø–æ—ç—Ç–æ–º—É –æ–Ω –æ—Å—Ç–∞—ë—Ç—Å—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º üõë –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ `B()` –≤—ã–∑–æ–≤—ë—Ç `TypeError`: ¬´Can't instantiate abstract class B with abstract method foo¬ª.\n\n–≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞, –≥–¥–µ –æ–¥–Ω–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ, –∞ —Ç—ã –µ–≥–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª ‚Äî —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞",
        "is_correct": true
      },
      {
        "text": "'B'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë —Å—Ä–∞–±–æ—Ç–∞–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–∞—Ç—Ç–µ—Ä–Ω **Decorator** ü™Ñ –ü—Ä–∏–º–µ—Ä:\n\n```python\ndef make_bold(func):\n    def wrapper():\n        return f'<b>{func()}</b>'\n    return wrapper\n\n@make_bold\ndef greet():\n    return '–ü—Ä–∏–≤–µ—Ç'\n\nprint(greet())  # <b>–ü—Ä–∏–≤–µ—Ç</b>\n```\n\n–≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –æ–±–µ—Ä–Ω—É—Ç—å –µ—ë –≤ –Ω–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –Ω–µ —Ç—Ä–æ–≥–∞—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥—Ä—É–≥–∏—Ö –∑–∞–¥–∞—á.",
    "options": [
      {
        "text": "Decorator",
        "is_correct": true
      },
      {
        "text": "Factory",
        "is_correct": false
      },
      {
        "text": "Strategy",
        "is_correct": false
      },
      {
        "text": "Adapter",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω **Factory Method** –∏–ª–∏ **Abstract Factory** üè≠ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Dog:\n    def speak(self): return '–ì–∞–≤'\n\nclass Cat:\n    def speak(self): return '–ú—è—É'\n\nclass AnimalFactory:\n    @staticmethod\n    def create(animal_type):\n        if animal_type == 'dog':\n            return Dog()\n        elif animal_type == 'cat':\n            return Cat()\n```\n\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∂–∏–≤–æ—Ç–Ω—ã—Ö –ø–æ —Å—Ç—Ä–æ–∫–µ. –≠—Ç–æ –∫–∞–∫ –∞–≤—Ç–æ–º–∞—Ç: –±—Ä–æ—Å–∏–ª –º–æ–Ω–µ—Ç—É ‚Äî –ø–æ–ª—É—á–∏–ª –Ω—É–∂–Ω—É—é –∏–≥—Ä—É—à–∫—É.",
    "options": [
      {
        "text": "Factory",
        "is_correct": true
      },
      {
        "text": "Builder",
        "is_correct": false
      },
      {
        "text": "Prototype",
        "is_correct": false
      },
      {
        "text": "Singleton",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–º–æ–≥–∞–µ—Ç –º–∞—Å–∫–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–∞—Ç—Ç–µ—Ä–Ω **Facade** üß± –û–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ —Å–ª–æ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å API —Å –¥–µ—Å—è—Ç–∫–æ–º –º–µ—Ç–æ–¥–æ–≤ ‚Äî Facade –º–æ–∂–µ—Ç —Å–∫—Ä—ã—Ç—å –≤—Å—ë —ç—Ç–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤—Å–µ–≥–æ –æ–¥–∏–Ω –≤—ã–∑–æ–≤.\n\n–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø—Ä–∏—à—ë–ª –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∏ —Å–∫–∞–∑–∞–ª –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—É: ¬´–Ø —Ö–æ—á—É –ø–æ–µ—Å—Ç—å¬ª, –∞ –Ω–µ –ø–µ—Ä–µ—á–∏—Å–ª—è–ª, –∫–∞–∫ –≥–æ—Ç–æ–≤–∏—Ç—å –µ–¥—É. –û—Ñ–∏—Ü–∏–∞–Ω—Ç ‚Äî —Ç–≤–æ–π Facade.",
    "options": [
      {
        "text": "Facade",
        "is_correct": true
      },
      {
        "text": "Proxy",
        "is_correct": false
      },
      {
        "text": "Adapter",
        "is_correct": false
      },
      {
        "text": "Composite",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —à–∞–≥–æ–≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞?",
    "explanation": "–≠—Ç–æ **Template Method** üîÑ –û–Ω –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–∫–µ–ª–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –≤ —Å—É–ø–µ—Ä–∫–ª–∞—Å—Å–µ, –Ω–æ –¥–µ–ª–µ–≥–∏—Ä—É–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–¥–∫–ª–∞—Å—Å–∞–º. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Game:\n    def play(self):\n        self.start()\n        self.turn()\n        self.end()\n\nclass Chess(Game):\n    def start(self): ...\n    def turn(self): ...\n    def end(self): ...\n```\n\n–≠—Ç–æ –∫–∞–∫ —à–∞–±–ª–æ–Ω –∏–≥—Ä—ã: –Ω–∞—á–∞—Ç—å ‚Üí —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥ ‚Üí –∑–∞–∫–æ–Ω—á–∏—Ç—å. –ö–∞–∂–¥—ã–π –≤–∏–¥ –∏–≥—Ä—ã –∑–∞–ø–æ–ª–Ω—è–µ—Ç –¥–µ—Ç–∞–ª–∏ —Å–≤–æ–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.",
    "options": [
      {
        "text": "Template Method",
        "is_correct": true
      },
      {
        "text": "Strategy",
        "is_correct": false
      },
      {
        "text": "Command",
        "is_correct": false
      },
      {
        "text": "Observer",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ GUI?",
    "explanation": "–í GUI —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω **Command** ‚öôÔ∏è –û–Ω –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –æ–±—ä–µ–∫—Ç, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ, —Å—Ç–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –∏–ª–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Command:\n    def execute(self):\n        pass\n\nclass Button:\n    def __init__(self, command):\n        self.command = command\n\n    def click(self):\n        self.command.execute()\n```\n\n–¢–µ–ø–µ—Ä—å –∫–Ω–æ–ø–∫–∞ –Ω–µ –∑–Ω–∞–µ—Ç, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω–∞ –¥–µ–ª–∞–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç `execute()`. –≠—Ç–æ –∫–∞–∫ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –±–µ–∑ –∑–Ω–∞–Ω–∏—è, —á—Ç–æ –æ–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç.",
    "options": [
      {
        "text": "Command",
        "is_correct": true
      },
      {
        "text": "Factory",
        "is_correct": false
      },
      {
        "text": "State",
        "is_correct": false
      },
      {
        "text": "MVC",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–≠—Ç–æ –ø–∞—Ç—Ç–µ—Ä–Ω **State** üîÑ –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç—É –∏–∑–º–µ–Ω—è—Ç—å —Å–≤–æ—ë –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass State:\n    def handle(self):\n        pass\n\nclass OnState(State):\n    def handle(self): print('–í–∫–ª—é—á–µ–Ω–æ')\n\nclass OffState(State):\n    def handle(self): print('–í—ã–∫–ª—é—á–µ–Ω–æ')\n\nclass Device:\n    def __init__(self):\n        self.state = OffState()\n\n    def switch(self):\n        if isinstance(self.state, OnState):\n            self.state = OffState()\n        else:\n            self.state = OnState()\n\n    def action(self):\n        self.state.handle()\n```\n\n–¢–µ–ø–µ—Ä—å –º–µ—Ç–æ–¥ `action()` –¥–µ–ª–∞–µ—Ç —Ä–∞–∑–Ω—ã–µ –≤–µ—â–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –≠—Ç–æ –∫–∞–∫ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å: –Ω–∞–∂–∞–ª ‚Äî –ª–∞–º–ø–æ—á–∫–∞ –≤–∫–ª—é—á–∏–ª–∞—Å—å, –µ—â—ë —Ä–∞–∑ ‚Äî –≤—ã–∫–ª—é—á–∏–ª–∞—Å—å.",
    "options": [
      {
        "text": "State",
        "is_correct": true
      },
      {
        "text": "Strategy",
        "is_correct": false
      },
      {
        "text": "Template Method",
        "is_correct": false
      },
      {
        "text": "Adapter",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω Observer?",
    "explanation": "Observer –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç—É —É–≤–µ–¥–æ–º–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö –æ —Å–≤–æ–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö ü´∂ –ü—Ä–∏–º–µ—Ä:\n\n```python\nclass Subject:\n    def __init__(self):\n        self._observers = []\n\n    def attach(self, observer):\n        self._observers.append(observer)\n\n    def notify(self):\n        for observer in self._observers:\n            observer.update(self)\n\nclass Observer:\n    def update(self, subject):\n        pass\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É: –∫–æ–≥–¥–∞ —á—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ ‚Äî —Ç–µ–±–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –¥–ª—è GUI, —Å–æ–±—ã—Ç–∏–π–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞.",
    "options": [
      {
        "text": "–£–≤–µ–¥–æ–º–ª—è–µ—Ç –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö",
        "is_correct": true
      },
      {
        "text": "–°–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä",
        "is_correct": false
      },
      {
        "text": "–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ò–∑–º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∞—Å—Å–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –º–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–∏?",
    "explanation": "–≠—Ç–æ –ø–∞—Ç—Ç–µ—Ä–Ω **Mock** –∏–ª–∏ –µ–≥–æ –±–ª–∏–∑–∫–∏–π —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫ ‚Äî **Proxy** üß† Proxy –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø–æ–º –∫ –Ω–µ–º—É. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—ã–∑–æ–≤—ã, –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –ø–æ–¥–º–µ–Ω—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n\n–í —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –≤—ã–∑–≤–∞–ª–∏—Å—å, –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω—ã–º —Å–∏—Å—Ç–µ–º–∞–º.",
    "options": [
      {
        "text": "Proxy",
        "is_correct": true
      },
      {
        "text": "Factory",
        "is_correct": false
      },
      {
        "text": "Singleton",
        "is_correct": false
      },
      {
        "text": "Facade",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–µ–º–µ–π—Å—Ç–≤–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω **Abstract Factory** üè≠ –û–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º–µ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞—è—Å—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∫–ª–∞—Å—Å–∞–º. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Button:\n    def click(self): pass\n\nclass WinButton(Button): ...\nclass MacButton(Button): ...\n\nclass Dialog:\n    def create_button(self) -> Button:\n        pass\n\nclass WindowsDialog(Dialog):\n    def create_button(self):\n        return WinButton()\n```\n\n–≠—Ç–æ –∫–∞–∫ –º–µ–Ω—è—Ç—å —Å—Ç–∏–ª—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ü–µ–ª–∏–∫–æ–º: –µ—Å–ª–∏ —Ç—ã –≤ Windows, —Ç–æ –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –æ–∫–æ–Ω–Ω—ã–µ, –µ—Å–ª–∏ –≤ macOS ‚Äî –º–∞–∫–æ–≤—ã–µ.",
    "options": [
      {
        "text": "Abstract Factory",
        "is_correct": true
      },
      {
        "text": "Factory Method",
        "is_correct": false
      },
      {
        "text": "Builder",
        "is_correct": false
      },
      {
        "text": "Prototype",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å Undo/Redo?",
    "explanation": "–î–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ Undo/Redo –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–∞—Ç—Ç–µ—Ä–Ω **Command** ‚öôÔ∏è –ö–æ–º–∞–Ω–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ–π—Å—Ç–≤–∏–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –µ—ë –æ–±—Ä–∞—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Command:\n    def execute(self): pass\n    def undo(self): pass\n\nclass AddText(Command):\n    def __init__(self, text):\n        self.text = text\n        self.prev_text = ''\n\n    def execute(self, editor):\n        self.prev_text = editor.text\n        editor.text += self.text\n\n    def undo(self, editor):\n        editor.text = self.prev_text\n```\n\n–¢–µ–ø–µ—Ä—å –∫–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ—à—å –∏—Å—Ç–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π –∏ –º–æ–∂–µ—à—å –µ—ë –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å.",
    "options": [
      {
        "text": "Command",
        "is_correct": true
      },
      {
        "text": "Memento",
        "is_correct": false
      },
      {
        "text": "Undo",
        "is_correct": false
      },
      {
        "text": "Action",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏?",
    "explanation": "–ü—Ä–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø–∞—Ç—Ç–µ—Ä–Ω **Memento** üß† –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –µ–≥–æ –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Memento:\n    def __init__(self, state):\n        self._state = state\n\nclass Originator:\n    def __init__(self):\n        self._state = ''\n\n    def save(self):\n        return Memento(self._state)\n\n    def restore(self, memento):\n        self._state = memento._state\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ –∏–≥—Ä—ã –∏ –ø–æ—Ç–æ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–µ–º—É. –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –Ω–æ —Å–∞–º–∞ –∏–≥—Ä–∞ –Ω–µ –∑–Ω–∞–µ—Ç, –∫–∞–∫ –∏–º–µ–Ω–Ω–æ.",
    "options": [
      {
        "text": "Memento",
        "is_correct": true
      },
      {
        "text": "Adapter",
        "is_correct": false
      },
      {
        "text": "Serializer",
        "is_correct": false
      },
      {
        "text": "Factory",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ self?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –∑–∞–±—É–¥–µ—à—å `self` –≤ –º–µ—Ç–æ–¥–µ –∫–ª–∞—Å—Å–∞, Python –≤—ã–¥–∞—Å—Ç `TypeError`: –æ–Ω –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç, –∞ –Ω–µ –ø–æ–ª—É—á–∏–ª üö´ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Cat:\n    def meow():\n        print('–ú—è—É')\n\nCat.meow()  # TypeError\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –¥—Ä—É–≥–∞ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ, –Ω–æ –Ω–µ —Å–∫–∞–∑–∞—Ç—å –µ–º—É –æ–± —ç—Ç–æ–º –Ω–∞–ø—Ä—è–º—É—é. `self` ‚Äî —ç—Ç–æ —Ç–≤–æ–π —Å–ø–æ—Å–æ–± —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –æ–±—Ä–∞—â–∞—é—Å—å –∫ —Ç–µ–±–µ, –æ–±—ä–µ–∫—Ç¬ª.",
    "options": [
      {
        "text": "TypeError",
        "is_correct": true
      },
      {
        "text": "NameError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "AttributeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–∞ –±–µ–∑ super() –≤ __init__?",
    "explanation": "–ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π `__init__` —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–∂–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é, –∞ —Ç—ã –µ–≥–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—à—å ‚Äî –¥–æ—á–µ—Ä–Ω–∏–π –æ–±—ä–µ–∫—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Animal:\n    def __init__(self):\n        self.type = '–∂–∏–≤–æ—Ç–Ω–æ–µ'\n\nclass Dog(Animal):\n    def __init__(self):\n        pass\n\nprint(Dog().type)  # –û—à–∏–±–∫–∞!\n```\n\n`type` –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–æ—Ç–æ–º—É —á—Ç–æ `Dog.__init__()` –Ω–µ –≤—ã–∑–≤–∞–ª `super().__init__()`. –≠—Ç–æ –∫–∞–∫ –∑–∞–±—ã—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥ –ø–æ–µ–∑–¥–∫–æ–π.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞: –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ—Ç",
        "is_correct": true
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë —Å—Ä–∞–±–æ—Ç–∞–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\ndef greet(self):\n    print('–ü—Ä–∏–≤–µ—Ç')\n\nclass Person:\n    method = greet\n\np = Person()\np.method()",
    "explanation": "–ú–µ—Ç–æ–¥ `greet()` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞, —á—Ç–æ–±—ã `self` —É–∫–∞–∑—ã–≤–∞–ª –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä ü§Ø –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ `greet()` –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –≤–Ω–µ –∫–ª–∞—Å—Å–∞, –∏ `self` –Ω–µ —Å–≤—è–∑–∞–Ω —Å –æ–±—ä–µ–∫—Ç–æ–º.\n\n–†–µ—à–µ–Ω–∏–µ: –æ–±—ä—è–≤–∏—Ç—å –º–µ—Ç–æ–¥ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞. –≠—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –æ—Ç –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∏ –¥–ª—è —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ ‚Äî –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.",
    "options": [
      {
        "text": "–ú–µ—Ç–æ–¥ –Ω–µ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç return",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ @property.setter –±–µ–∑ @property?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã —Å–æ–∑–¥–∞–µ—à—å `@property.setter`, –Ω–æ –Ω–µ —Å–æ–∑–¥–∞–ª –æ–±—ã—á–Ω—ã–π `@property` ‚Äî –±—É–¥–µ—Ç `AttributeError` üö´ –≠—Ç–æ –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–º–æ–∫ –Ω–∞ –¥–≤–µ—Ä—å, –Ω–æ –Ω–µ —Å–¥–µ–ª–∞—Ç—å —Å–∞–º—É –¥–≤–µ—Ä—å. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –≥–µ—Ç—Ç–µ—Ä, –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º —Å–µ—Ç—Ç–µ—Ä.\n\n```python\nclass Person:\n    @name.setter\n    def name(self, value):\n        self._name = value\n```\n\n–¢–∞–∫ –¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è ‚Äî —Å–Ω–∞—á–∞–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å `@property`.",
    "options": [
      {
        "text": "AttributeError",
        "is_correct": true
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "SyntaxError",
        "is_correct": false
      },
      {
        "text": "RuntimeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ —á–∞—Å—Ç–æ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ ABC?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ—à—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∞ ‚Äî –ø–æ–ª—É—á–∏—à—å `TypeError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom abc import ABC, abstractmethod\n\nclass Animal(ABC):\n    @abstractmethod\n    def speak(self):\n        pass\n\nclass Dog(Animal):\n    pass\n\nDog()  # TypeError\n```\n\n–≠—Ç–æ –∫–∞–∫ –≤–∑—è—Ç—å —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞, –≥–¥–µ –µ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ, –Ω–æ –µ–≥–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å ‚Äî —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç.",
    "options": [
      {
        "text": "TypeError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "NameError",
        "is_correct": false
      },
      {
        "text": "NotImplementedError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ __dict__ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞?",
    "explanation": "–ò–∑–º–µ–Ω—è—Ç—å `__dict__` –Ω–∞–ø—Ä—è–º—É—é –æ–ø–∞—Å–Ω–æ ‚Äî —ç—Ç–æ –º–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å –ª–æ–≥–∏–∫—É –∫–ª–∞—Å—Å–∞ üõë –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å `@property`, –∏ —Ç—ã –∏–∑–º–µ–Ω–∏—à—å –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ `__dict__`, —Ç—ã –æ–±–æ–π–¥—ë—à—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏. –≠—Ç–æ –∫–∞–∫ –æ–±–º–∞–Ω—É—Ç—å —Å–µ–±—è –≤ –∞–Ω–∫–µ—Ç–µ ‚Äî –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç, –Ω–æ –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏.",
    "options": [
      {
        "text": "–û–±–æ–π–¥—É—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ setter'—ã",
        "is_correct": true
      },
      {
        "text": "–ë—É–¥–µ—Ç –æ—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è",
        "is_correct": false
      },
      {
        "text": "–°–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –±–ª–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –æ—à–∏–±–æ–∫?",
    "explanation": "–î–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –æ—à–∏–±–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–ª–æ–∫ `except` ü§Ø –û–Ω —Å–ª–µ–¥—É–µ—Ç –ø–æ—Å–ª–µ `try` –∏ –ª–æ–≤–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–ª–∏ –æ–±—â–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    x = 5 / 0\nexcept ZeroDivisionError:\n    print('–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å')\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü–æ–ø—Ä–æ–±—É–π —Å–¥–µ–ª–∞—Ç—å, –Ω–æ –µ—Å–ª–∏ –≤—Å—ë –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫ ‚Äî —è –≥–æ—Ç–æ–≤¬ª. –û—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞.",
    "options": [
      {
        "text": "except",
        "is_correct": true
      },
      {
        "text": "if",
        "is_correct": false
      },
      {
        "text": "catch",
        "is_correct": false
      },
      {
        "text": "finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–ª–æ–∫ finally?",
    "explanation": "`finally` –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞ ‚Äî –∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ, –∏ –±–µ–∑ –Ω–µ—ë üîÑ –≠—Ç–æ –∏–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–∞—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π: –∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π, –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤.\n\n```python\ntry:\n    file = open('file.txt')\n    data = file.read()\nexcept FileNotFoundError:\n    print('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')\nfinally:\n    file.close()  # –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤—Å–µ–≥–¥–∞\n```\n\n–≠—Ç–æ –∫–∞–∫ –≤—ã–π—Ç–∏ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã –∏ –ø–æ—Ç—É—à–∏—Ç—å —Å–≤–µ—Ç ‚Äî –Ω–µ–≤–∞–∂–Ω–æ, —É—Å–ø–µ—à–Ω–æ —Ç—ã –≤–æ—à—ë–ª –∏–ª–∏ –Ω–µ—Ç.",
    "options": [
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞",
        "is_correct": true
      },
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ",
        "is_correct": false
      },
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–µ–∑ try",
        "is_correct": false
      },
      {
        "text": "–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ –±—ã–ª–æ?",
    "explanation": "–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–ª–æ–∫ `else` ü™Ñ –û–Ω –∏–¥—ë—Ç –ø–æ—Å–ª–µ `except`, –Ω–æ –¥–æ `finally`. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    result = 10 / 2\nexcept ZeroDivisionError:\n    print('–û—à–∏–±–∫–∞')\nelse:\n    print('–í—Å—ë –ø—Ä–æ—à–ª–æ —Ö–æ—Ä–æ—à–æ')\n```\n\n`else` –ø–æ–ª–µ–∑–µ–Ω, –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ ‚Äî –∏ –Ω–µ —Å–º–µ—à–∏–≤–∞—Ç—å –µ–≥–æ —Å –æ—Å–Ω–æ–≤–Ω—ã–º `try`.",
    "options": [
      {
        "text": "else",
        "is_correct": true
      },
      {
        "text": "noerror",
        "is_correct": false
      },
      {
        "text": "success",
        "is_correct": false
      },
      {
        "text": "finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ except-–±–ª–æ–∫–æ–≤?",
    "explanation": "–î–∞, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ `except` –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫ üìä –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    int('abc')\nexcept ValueError:\n    print('–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')\nexcept Exception as e:\n    print(f'–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}')\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø–æ-—Ä–∞–∑–Ω–æ–º—É. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å: ¬´–ï—Å–ª–∏ —Å–ª–æ–º–∞–ª–∞—Å—å –¥–≤–µ—Ä—å ‚Äî –≤—ã–∑–æ–≤–∏ —Å–ª–µ—Å–∞—Ä—è; –µ—Å–ª–∏ —Å–≤–µ—Ç ‚Äî —ç–ª–µ–∫—Ç—Ä–∏–∫–∞¬ª.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –æ–¥–∏–Ω except",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å else",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä raise?",
    "explanation": "`raise` –ø–æ–∑–≤–æ–ª—è–µ—Ç —è–≤–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ üö® –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nif age < 0:\n    raise ValueError('–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º')\n```\n\n–≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç: ¬´–Ø –Ω–∞—à—ë–ª –ø—Ä–æ–±–ª–µ–º—É, –∏ –ø—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç¬ª. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ, —á—Ç–æ–±—ã —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö.",
    "options": [
      {
        "text": "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ",
        "is_correct": true
      },
      {
        "text": "–ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É",
        "is_correct": false
      },
      {
        "text": "–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å –ª—é–±–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ?",
    "explanation": "–î–∞, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `except Exception` –∏–ª–∏ –¥–∞–∂–µ `except:` (–Ω–æ —ç—Ç–æ –ø–ª–æ—Ö–æ–π —Å—Ç–∏–ª—å) ü§Ø –û–¥–Ω–∞–∫–æ –ª—É—á—à–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –æ—à–∏–±–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nexcept ValueError:\n    print('–û—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è')\n```\n\n–ü–µ—Ä–µ—Ö–≤–∞—Ç –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –º–µ—à–∞–µ—Ç –æ—Ç–ª–∞–¥–∫–µ –∏ –º–æ–∂–µ—Ç —Å–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â—É—é –ø—Ä–æ–±–ª–µ–º—É. –≠—Ç–æ –∫–∞–∫ –Ω–∞–¥–µ—Ç—å –º–∞—Å–∫—É –Ω–∞ –≤–µ—Å—å –º–∏—Ä ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –≤–∏–¥–Ω–æ, –Ω–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    "options": [
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ except:",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å else",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ntry:\n    x = 1 / 0\nexcept ZeroDivisionError:\n    x = '–æ—à–∏–±–∫–∞'\nprint(x)",
    "explanation": "–í –±–ª–æ–∫–µ `try` –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ ‚Üí —Å—Ä–∞–±–æ—Ç–∞–ª `except` ‚Üí `x` —Å—Ç–∞–ª `'–æ—à–∏–±–∫–∞'` üì£ –ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –±–ª–æ–∫–∞ `try-except` –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∏–ª–∞ —Ä–∞–±–æ—Ç—É. –¢–∞–∫ —á—Ç–æ –≤—ã–≤–æ–¥: `'–æ—à–∏–±–∫–∞'`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–µ—Ç—Å—è ‚Äî —è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç¬ª.",
    "options": [
      {
        "text": "'–æ—à–∏–±–∫–∞'",
        "is_correct": true
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "0",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ –Ω–æ–ª—å?",
    "explanation": "–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ `ZeroDivisionError` üö´ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    x = 5 / 0\nexcept ZeroDivisionError:\n    print('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ')\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —Ä–∞–∑—Ä–µ–∑–∞—Ç—å —Ç–æ—Ä—Ç –Ω–∞ –Ω–æ–ª—å –∫—É—Å–æ—á–∫–æ–≤ ‚Äî –∑–∞–¥–∞—á–∞ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–∞, –∏ Python –æ–± —ç—Ç–æ–º –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç.",
    "options": [
      {
        "text": "ZeroDivisionError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "ArithmeticError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ, –Ω–æ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–µ–Ω, –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç `ValueError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nint('abc')  # ValueError\n```\n\n–≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞ (—ç—Ç–æ —Å—Ç—Ä–æ–∫–∞!), –∞ –æ—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –æ–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤—Å—Ç–∞–≤–∏—Ç—å –∫–ª—é—á –æ—Ç —Å–æ—Å–µ–¥–µ–π –≤ —Å–≤–æ–π –∑–∞–º–æ–∫ ‚Äî –æ–Ω –Ω–µ –ø–æ–¥–æ–π–¥—ë—Ç, —Ö–æ—Ç—è –∏ –ø–æ—Ö–æ–∂.",
    "options": [
      {
        "text": "ValueError",
        "is_correct": true
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "SyntaxError",
        "is_correct": false
      },
      {
        "text": "ConversionError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–ª—é—á—É —Å–ª–æ–≤–∞—Ä—è?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ –∫–ª—é—á—É —Å–ª–æ–≤–∞—Ä—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç, –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å `get()`, –≤–æ–∑–Ω–∏–∫–∞–µ—Ç `KeyError` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nd = {'a': 1}\nd['b']  # KeyError\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–ø—Ä–æ—Å–∏—Ç—å —É –¥—Ä—É–≥–∞: ¬´–°–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –¥–µ–Ω–µ–≥?¬ª, –∞ –æ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç: ¬´–£ –º–µ–Ω—è –∏—Ö –Ω–µ—Ç¬ª. Python —Ç–æ–∂–µ –Ω–µ –ª—é–±–∏—Ç –ø—É—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã.",
    "options": [
      {
        "text": "KeyError",
        "is_correct": true
      },
      {
        "text": "IndexError",
        "is_correct": false
      },
      {
        "text": "AttributeError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç—ã –ø–æ–ª—É—á–∏—à—å `NameError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nprint(x)  # NameError\n```\n\n–ü–æ—Ç–æ–º—É —á—Ç–æ `x` –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω. –≠—Ç–æ –∫–∞–∫ —Å–ø—Ä–æ—Å–∏—Ç—å —É –∫–æ–≥–æ-—Ç–æ: ¬´–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –ø–æ–∂–∏–≤–∞–µ—Ç —Ç–≤–æ–π –∫–æ—Ç –®–∞—Ä–∏–∫?¬ª, –∞ —É –Ω–µ–≥–æ –µ–≥–æ –Ω–µ—Ç. –ù–µ–ª–æ–≤–∫–æ, –Ω–æ Python –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–¥—É.",
    "options": [
      {
        "text": "NameError",
        "is_correct": true
      },
      {
        "text": "KeyError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–∫—Ä—ã—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª?",
    "explanation": "`FileNotFoundError` ‚Äî —ç—Ç–æ —á–∞—Å—Ç–Ω—ã–π —Å–ª—É—á–∞–π `OSError`, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∫–æ–≥–¥–∞ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω üìÅ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nopen('not_exists.txt')  # FileNotFoundError\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∑–∞–π—Ç–∏ –≤ –¥–æ–º, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–µ. Python –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–∫—Ä—ã—Ç—å —Ç–æ, —á–µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
    "options": [
      {
        "text": "FileNotFoundError",
        "is_correct": true
      },
      {
        "text": "IOError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "NotExistsError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∞—Ç—Ä–∏–±—É—Ç—É –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞—Ç—Ä–∏–±—É—Ç—É, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ, –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç `AttributeError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass Person:\n    pass\n\np = Person()\np.name  # –æ—à–∏–±–∫–∞, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–∞–¥–ø–∏—Å—å –Ω–∞ –¥–≤–µ—Ä–∏, –Ω–æ –¥–≤–µ—Ä—å –Ω–µ –∏–º–µ–µ—Ç —Ç–∞–±–ª–∏—á–∫–∏. Python –≥–æ–≤–æ—Ä–∏—Ç: ¬´–ó–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç¬ª.",
    "options": [
      {
        "text": "AttributeError",
        "is_correct": true
      },
      {
        "text": "KeyError",
        "is_correct": false
      },
      {
        "text": "NameError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ntry:\n    int('abc')\nexcept Exception:\n    print('–û—à–∏–±–∫–∞')",
    "explanation": "–ö–æ–¥ –≤—ã–≤–µ–¥–µ—Ç `'–û—à–∏–±–∫–∞'`, –ø–æ—Ç–æ–º—É —á—Ç–æ `int('abc')` –≤—ã–∑—ã–≤–∞–µ—Ç `ValueError`, –∞ `except Exception` –ª–æ–≤–∏—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –∫—Ä–æ–º–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö üì£ –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª—É—á–∏—Ç—Å—è ‚Äî —è –≥–æ—Ç–æ–≤¬ª. –ù–æ –ª—É—á—à–µ –ª–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –Ω–µ —Å–∫—Ä—ã—Ç—å –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏.",
    "options": [
      {
        "text": "'–û—à–∏–±–∫–∞'",
        "is_correct": true
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ç–∏–ø–µ –¥–∞–Ω–Ω—ã—Ö?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–µ—Ä–µ–¥–∞–ª –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞ ‚Äî `TypeError` üö´ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nlen(123)  # TypeError\n```\n\n–ü–æ—Ç–æ–º—É —á—Ç–æ `len()` –æ–∂–∏–¥–∞–µ—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –∞ —á–∏—Å–ª–æ ‚Äî –Ω–µ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∏–∑–º–µ—Ä–∏—Ç—å –¥–ª–∏–Ω—É —Å—Ç—É–ª–∞ ‚Äî –æ–Ω –∂–µ –Ω–µ –ª–∏–Ω–µ–π–∫–∞.",
    "options": [
      {
        "text": "TypeError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "KeyError",
        "is_correct": false
      },
      {
        "text": "ConversionError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø –æ—à–∏–±–∫–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö?",
    "explanation": "–ï—Å–ª–∏ –≤ –∫–æ–¥–µ –µ—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ ‚Äî –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –≤—ã–¥–∞—Å—Ç `SyntaxError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nif True\n    print('–ü—Ä–∏–≤–µ—Ç')  # –∑–∞–±—ã—Ç–æ –¥–≤–æ–µ—Ç–æ—á–∏–µ\n```\n\nPython –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è, –ø–æ–∫–∞ –Ω–µ –∏—Å–ø—Ä–∞–≤–∏—à—å. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É, –≥–¥–µ –Ω–µ—Ç –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è ‚Äî —Å–º—ã—Å–ª —Ç–µ—Ä—è–µ—Ç—Å—è.",
    "options": [
      {
        "text": "SyntaxError",
        "is_correct": true
      },
      {
        "text": "IndentationError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "RuntimeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ntry:\n    x = [1, 2, 3][5]\nexcept IndexError:\n    print('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞')\nexcept Exception:\n    print('–û–±—â–∞—è –æ—à–∏–±–∫–∞')",
    "explanation": "–í —ç—Ç–æ–º –∫–æ–¥–µ –º—ã –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –∏–Ω–¥–µ–∫—Å—É 5 –≤ —Å–ø–∏—Å–∫–µ –∏–∑ 3 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ü§Ø –≠—Ç–æ –≤—ã–∑–æ–≤–µ—Ç `IndexError`, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º `except`. –ü–æ—ç—Ç–æ–º—É –≤—ã–≤–æ–¥: `'–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞'`. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –≤–∑—è—Ç—å —à–µ—Å—Ç—É—é –∫–Ω–∏–≥—É —Å –ø–æ–ª–∫–∏, –≥–¥–µ –∏—Ö –≤—Å–µ–≥–æ —Ç—Ä–∏ ‚Äî Python –∑–Ω–∞–µ—Ç, —á—Ç–æ —Ç–∞–∫ –Ω–µ–ª—å–∑—è.",
    "options": [
      {
        "text": "'–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞'",
        "is_correct": true
      },
      {
        "text": "'–û–±—â–∞—è –æ—à–∏–±–∫–∞'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã —Å–ø–∏—Å–∫–∞?",
    "explanation": "–ö–æ–≥–¥–∞ —Ç—ã –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ –∏–Ω–¥–µ–∫—Å—É, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ ‚Äî —ç—Ç–æ `IndexError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nlst = [1, 2, 3]\nlst[5]  # IndexError\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ—Ç–∫—Ä—ã—Ç—å –ø—è—Ç—É—é –¥–≤–µ—Ä—å –≤ –¥–æ–º–µ, –≥–¥–µ –∏—Ö –≤—Å–µ–≥–æ —Ç—Ä–∏. Python –≥–æ–≤–æ—Ä–∏—Ç: ¬´–ó–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç¬ª.",
    "options": [
      {
        "text": "IndexError",
        "is_correct": true
      },
      {
        "text": "KeyError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "AttributeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–µ—Ç–æ–¥–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç —É –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç —É –æ–±—ä–µ–∫—Ç–∞ ‚Äî –±—É–¥–µ—Ç `AttributeError` üö´ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nx = 5\nx.upper()  # AttributeError\n```\n\n–ß–∏—Å–ª–æ –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ `upper()` ‚Äî –æ–Ω –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É —Å—Ç—Ä–æ–∫. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –≤–∫–ª—é—á–∏—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É–º–µ–µ—Ç –≤–∫–ª—é—á–∞—Ç—å—Å—è.",
    "options": [
      {
        "text": "AttributeError",
        "is_correct": true
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "MethodError",
        "is_correct": false
      },
      {
        "text": "NameError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–∞ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –≤—ã–∑–æ–≤–µ—à—å —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –º–µ—Ç–æ–¥ –±–µ–∑ –Ω—É–∂–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ ‚Äî –ø–æ–ª—É—á–∏—à—å `TypeError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef greet(name):\n    print(f'–ü—Ä–∏–≤–µ—Ç, {name}')\n\ngreet()  # TypeError\n```\n\nPython –æ–∂–∏–¥–∞–µ—Ç `name`, –Ω–æ –µ–≥–æ –Ω–µ—Ç. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∞—à–∏–Ω—É –±–µ–∑ –∫–ª—é—á–µ–π ‚Äî –æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ –∑–∞–≤–µ–¥—ë—Ç—Å—è.",
    "options": [
      {
        "text": "TypeError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "IndexError",
        "is_correct": false
      },
      {
        "text": "MissingArgumentError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏?",
    "explanation": "–ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Å–º—ã—Å–ª—É ‚Äî –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `ValueError` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nint('abc')  # ValueError\n```\n\n–≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞ (—ç—Ç–æ —Å—Ç—Ä–æ–∫–∞), –∞ –æ—à–∏–±–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤—Å—Ç–∞–≤–∏—Ç—å –∫–ª—é—á –≤ –∑–∞–º–æ–∫, –Ω–æ –æ–Ω –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚Äî —Ö–æ—Ç—è –∏ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –∫–ª—é—á.",
    "options": [
      {
        "text": "ValueError",
        "is_correct": true
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "KeyError",
        "is_correct": false
      },
      {
        "text": "IndexError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —É –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π?",
    "explanation": "–ü–æ—á—Ç–∏ –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –æ—Ç –∫–ª–∞—Å—Å–∞ `Exception` üß± –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    x = 5 / 0\nexcept Exception as e:\n    print(f'–û—à–∏–±–∫–∞: {e}')\n```\n\n–≠—Ç–æ –∫–∞–∫ –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º. –ù–æ –Ω–µ –ª–æ–≤–∏ –≤—Å—ë –ø–æ–¥—Ä—è–¥ ‚Äî –ª—É—á—à–µ –ª–æ–≤–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏.",
    "options": [
      {
        "text": "Exception",
        "is_correct": true
      },
      {
        "text": "BaseException",
        "is_correct": false
      },
      {
        "text": "Error",
        "is_correct": false
      },
      {
        "text": "SystemError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –ª–æ–≤–∏—Ç—å BaseException?",
    "explanation": "–ú–æ–∂–Ω–æ, –Ω–æ **–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è** üö´ `BaseException` ‚Äî —ç—Ç–æ —Ä–æ–¥–∏—Ç–µ–ª—å –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –≤–∫–ª—é—á–∞—è —Å–∏—Å—Ç–µ–º–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ `KeyboardInterrupt` –∏ `SystemExit`. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    raise KeyboardInterrupt\nexcept BaseException:\n    print('–ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ')\n```\n\n–¢–∞–∫–æ–π –∫–æ–¥ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –¥–∞–∂–µ `Ctrl+C`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ —Ö–æ—á—É, —á—Ç–æ–±—ã –º–µ–Ω—è –ø—Ä–µ—Ä–≤–∞–ª–∏¬ª ‚Äî –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω–æ.",
    "options": [
      {
        "text": "–î–∞, –Ω–æ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å Exception",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ ‚Äî –±—É–¥–µ—Ç `TypeError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n1 + '2'  # TypeError\n```\n\n–û–¥–∏–Ω —Ç–∏–ø ‚Äî —á–∏—Å–ª–æ, –¥—Ä—É–≥–æ–π ‚Äî —Å—Ç—Ä–æ–∫–∞. Python –Ω–µ –∑–Ω–∞–µ—Ç, –∫–∞–∫ –∏—Ö —Å–ª–æ–∂–∏—Ç—å. –≠—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è —Å–ª–æ–∂–∏—Ç—å —è–±–ª–æ–∫–æ –∏ —Å—Ç—É–ª ‚Äî —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ –≤–µ—â–∏.",
    "options": [
      {
        "text": "TypeError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "OperationError",
        "is_correct": false
      },
      {
        "text": "ArithmeticError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø –æ—à–∏–±–∫–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –≤—ã–∑–æ–≤–µ int('1.5')?",
    "explanation": "–í—ã–∑–æ–≤ `int('1.5')` –≤—ã–∑–æ–≤–µ—Ç `ValueError` ü§Ø –ü–æ—Ç–æ–º—É —á—Ç–æ `'1.5'` ‚Äî —ç—Ç–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞ ‚Äî —ç—Ç–æ –æ—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è. –ö–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–ª–æ–∂–∏—Ç—å –∫—Ä—É–≥–ª—ã–π –±–ª–æ–∫ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é —è–º—É ‚Äî –æ–Ω –Ω–µ –ø–æ–¥–æ–π–¥—ë—Ç, —Ö–æ—Ç—è –∏ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –±–ª–æ–∫.",
    "options": [
      {
        "text": "ValueError",
        "is_correct": true
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "ConversionError",
        "is_correct": false
      },
      {
        "text": "SyntaxError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –≤—ã–∑–æ–≤–µ exit()?",
    "explanation": "`SystemExit` ‚Äî —ç—Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ `exit()` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    exit()\nexcept SystemExit:\n    print('–í—ã—Ö–æ–¥ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω')\n```\n\n–≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞, –∞ —Å–∏–≥–Ω–∞–ª –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏. –ù–æ –ª–æ–≤–∏—Ç—å –µ–≥–æ **–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è** –≤ –æ–±—ã—á–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö ‚Äî —ç—Ç–æ –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.",
    "options": [
      {
        "text": "SystemExit",
        "is_correct": true
      },
      {
        "text": "ExitError",
        "is_correct": false
      },
      {
        "text": "KeyboardInterrupt",
        "is_correct": false
      },
      {
        "text": "RuntimeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\ntry:\n    d = {}\n    d['key']\nexcept Exception as e:\n    print(e)",
    "explanation": "–ü–æ–ø—ã—Ç–∫–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–ª—é—á—É –≤ —Å–ª–æ–≤–∞—Ä–µ –≤—ã–∑–æ–≤–µ—Ç `KeyError` ü§Ø –ü–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—à—å –∫–ª—é—á, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç. –≠—Ç–æ –∫–∞–∫ —Å–ø—Ä–æ—Å–∏—Ç—å: ¬´–ì–¥–µ –º–æ–ª–æ–∫–æ?¬ª, –∞ –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ –µ–≥–æ –Ω–µ—Ç. `KeyError` ‚Äî —á–∞—Å—Ç–Ω—ã–π —Å–ª—É—á–∞–π `LookupError`, –∏ –æ–Ω –ø–æ–ø–∞–¥–∞–µ—Ç –ø–æ–¥ `except Exception`.",
    "options": [
      {
        "text": "KeyError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "AttributeError",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–≤–∞—Ç—å next() –Ω–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–Ω–æ–º –∏—Ç–µ—Ä–∞—Ç–æ—Ä–µ?",
    "explanation": "–ö–æ–≥–¥–∞ –∏—Ç–µ—Ä–∞—Ç–æ—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –∏ —Ç—ã –≤—ã–∑—ã–≤–∞–µ—à—å `next()`, –≤–æ–∑–Ω–∏–∫–∞–µ—Ç `StopIteration` üîÑ –≠—Ç–æ —Å–∏–≥–Ω–∞–ª, —á—Ç–æ –±–æ–ª—å—à–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nit = iter([1, 2])\nnext(it)  # 1\nnext(it)  # 2\nnext(it)  # StopIteration\n```\n\n–≠—Ç–æ –∫–∞–∫ –¥–æ–π—Ç–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∫–Ω–∏–≥–∏ –∏ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —á–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.",
    "options": [
      {
        "text": "StopIteration",
        "is_correct": true
      },
      {
        "text": "EndOfIterator",
        "is_correct": false
      },
      {
        "text": "IterationError",
        "is_correct": false
      },
      {
        "text": "EmptyIteration",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏?",
    "explanation": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç `RuntimeError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nlst = [1, 2, 3]\nfor x in lst:\n    lst.append(x)  # RuntimeError\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –∞ –∫—Ç–æ-—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∏—Ö –¥–æ–±–∞–≤–ª—è–µ—Ç ‚Äî —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—à—å.",
    "options": [
      {
        "text": "RuntimeError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "IndexError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞?",
    "explanation": "–î–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –ø–æ–¥—Ö–æ–¥–∏—Ç `RuntimeError` üß± –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –º–∞—à–∏–Ω–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞, –Ω–æ —Ç—ã –ø—ã—Ç–∞–µ—à—å—Å—è –µ—Ö–∞—Ç—å. –ò–ª–∏ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –æ—Ç–∫—Ä—ã—Ç, –Ω–æ —Ç—ã —á–∏—Ç–∞–µ—à—å.\n\n–≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏–ª–∏ —Ç–∏–ø–∞ ‚Äî —ç—Ç–æ –æ—à–∏–±–∫–∞ –ª–æ–≥–∏–∫–∏. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø—ã—Ç–∞–µ—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.",
    "options": [
      {
        "text": "RuntimeError",
        "is_correct": true
      },
      {
        "text": "StateError",
        "is_correct": false
      },
      {
        "text": "ObjectError",
        "is_correct": false
      },
      {
        "text": "LogicError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ntry:\n    d = {}\n    d = dict([('a', 1), ('a', 2)])\nexcept Exception as e:\n    print(type(e).__name__)",
    "explanation": "–ú–µ—Ç–æ–¥ `dict()` –Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å –∏–∑ —Å–ø–∏—Å–∫–∞ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è –∫–ª—é—á–∞–º–∏ ü§Ø –ù–æ —ç—Ç–æ –Ω–µ `KeyError`! –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏, –∏ —ç—Ç–æ `TypeError`, –ø–æ—Ç–æ–º—É —á—Ç–æ `dict()` –æ–∂–∏–¥–∞–µ—Ç, —á—Ç–æ –∫–æ—Ä—Ç–µ–∂–∏ –≤ —Å–ø–∏—Å–∫–µ –±—É–¥—É—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª: ¬´–°–æ–∑–¥–∞–π —Å–ª–æ–≤–∞—Ä—å¬ª, –∞ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–¥–∞–ª –¥—É–±–ª–∏–∫–∞—Ç—ã –∫–ª—é—á–µ–π.",
    "options": [
      {
        "text": "TypeError",
        "is_correct": true
      },
      {
        "text": "KeyError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "SyntaxError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–µ—Ä–µ–¥–∞—à—å **—Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ** –∏–ª–∏ **—Å–ª–∏—à–∫–æ–º –º–∞–ª–æ** –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤ —Ñ—É–Ω–∫—Ü–∏—é ‚Äî –±—É–¥–µ—Ç `TypeError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef greet(name):\n    print(name)\n\ngreet()  # TypeError\ngreet('–ê–Ω–Ω–∞', '–ü—Ä–∏–≤–µ—Ç')  # —Ç–æ–∂–µ TypeError\n```\n\nPython —Å—Ç—Ä–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –≠—Ç–æ –∫–∞–∫ –ø—Ä–∏–π—Ç–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω —Å –±—Ä–æ–Ω—å—é –Ω–∞ –æ–¥–Ω–æ–≥–æ, –∞ –ø—Ä–∏–≤–µ—Å—Ç–∏ –¥–≤–æ–∏—Ö ‚Äî –º–µ—Å—Ç–æ –Ω–µ –≤—ã–¥–µ–ª–µ–Ω–æ, –∏ –≤—Å–µ–º –Ω–µ—É–¥–æ–±–Ω–æ.",
    "options": [
      {
        "text": "TypeError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "IndexError",
        "is_correct": false
      },
      {
        "text": "ArgumentError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø –æ—à–∏–±–∫–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω?",
    "explanation": "`NotImplementedError` ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç, —á—Ç–æ –º–µ—Ç–æ–¥ –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef do_something():\n    raise NotImplementedError()\n```\n\n–≠—Ç–æ –∫–∞–∫ –ø–æ–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ ¬´–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ¬ª ‚Äî —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å: ¬´–Ø –∑–Ω–∞—é, —á—Ç–æ –¥–æ–ª–∂–µ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–æ –ø–æ–∫–∞ –Ω–µ —Å–¥–µ–ª–∞–ª¬ª.",
    "options": [
      {
        "text": "NotImplementedError",
        "is_correct": true
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "RuntimeError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –∫–ª–∞—Å—Å –æ—à–∏–±–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—à–∏–±–æ–∫ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞?",
    "explanation": "–î–ª—è –æ—à–∏–±–æ–∫ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ–∞–π–ª–∞–º–∏, —Å–µ—Ç—å—é) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `OSError` üìÅ –û–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Ç–æ—á–Ω—ë–Ω –¥–æ `FileNotFoundError`, `PermissionError`, `EOFError` –∏ –¥—Ä—É–≥–∏—Ö.\n\n–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–æ–ø—ã—Ç–∞–ª—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª, –Ω–æ –µ–≥–æ –Ω–µ—Ç –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ ‚Äî `OSError` –ø–æ–∫–∞–∂–µ—Ç, —á—Ç–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å —Å–∏—Å—Ç–µ–º–æ–π.",
    "options": [
      {
        "text": "OSError",
        "is_correct": true
      },
      {
        "text": "IOError",
        "is_correct": false
      },
      {
        "text": "FileError",
        "is_correct": false
      },
      {
        "text": "SystemError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–æ–¥—É–ª—å?",
    "explanation": "–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–æ–¥—É–ª—å –≤–æ–∑–Ω–∏–∫–∞–µ—Ç `ImportError` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport mymodule  # ImportError\n```\n\n–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–ª–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –æ—à–∏–±–∫—É, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `ModuleNotFoundError` ‚Äî –æ–Ω –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç `ImportError`. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–µ.",
    "options": [
      {
        "text": "ImportError",
        "is_correct": true
      },
      {
        "text": "ModuleNotFoundError",
        "is_correct": false
      },
      {
        "text": "FileNotFoundError",
        "is_correct": false
      },
      {
        "text": "NameError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–º –∞—Ç—Ä–∏–±—É—Ç–µ –∏–ª–∏ –º–µ—Ç–æ–¥–µ?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∞—Ç—Ä–∏–±—É—Ç—É –∏–ª–∏ –º–µ—Ç–æ–¥—É ‚Äî —ç—Ç–æ `AttributeError` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nx = 5\nx.my_method()  # AttributeError\n```\n\n–≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî —ç—Ç–æ –æ—à–∏–±–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É —Å–æ–±–∞–∫–∏ ¬´–ø—Ä–∏–Ω–µ—Å—Ç–∏¬ª ‚Äî –∞ –æ–Ω–∞ –Ω–µ –∑–Ω–∞–µ—Ç —Ç–∞–∫–æ–≥–æ –º–µ—Ç–æ–¥–∞.",
    "options": [
      {
        "text": "AttributeError",
        "is_correct": true
      },
      {
        "text": "NameError",
        "is_correct": false
      },
      {
        "text": "KeyError",
        "is_correct": false
      },
      {
        "text": "MethodError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø –æ—à–∏–±–∫–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –∏–º–µ–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É ‚Äî –±—É–¥–µ—Ç `SyntaxError` üö´ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n1var = 10  # SyntaxError\n```\n\n–ò–ª–∏:\n\n```python\nif True  # –∑–∞–±—ã—Ç–æ –¥–≤–æ–µ—Ç–æ—á–∏–µ\n    print('Yes')\n```\n\n–≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã ‚Äî –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –Ω–µ –ø–æ–π–º—ë—Ç, —á—Ç–æ —Ç—ã –∏–º–µ–ª –≤ –≤–∏–¥—É.",
    "options": [
      {
        "text": "SyntaxError",
        "is_correct": true
      },
      {
        "text": "NameError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "ValueError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\ntry:\n    import math\n    math.some_undefined_method()\nexcept AttributeError:\n    print('–ú–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω')\nexcept ImportError:\n    print('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')",
    "explanation": "–ú—ã —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ `math`, –Ω–æ –≤—ã–∑–≤–∞–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥ ü§Ø –≠—Ç–æ –≤—ã–∑–æ–≤–µ—Ç `AttributeError`, –∏ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–µ—Ä–≤—ã–π `except`. –≠—Ç–æ –∫–∞–∫ –∑–∞–π—Ç–∏ –≤ –¥–æ–º, –Ω–æ –Ω–µ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–Ω–∞—Ç—É. –ú–æ–¥—É–ª—å –µ—Å—Ç—å, –∞ –º–µ—Ç–æ–¥–∞ –≤ –Ω—ë–º –Ω–µ—Ç.\n\n–ï—Å–ª–∏ –±—ã –º–æ–¥—É–ª—è –Ω–µ –±—ã–ª–æ ‚Äî —Å—Ä–∞–±–æ—Ç–∞–ª –±—ã `ImportError`. –ê –∑–¥–µ—Å—å ‚Äî `AttributeError`.",
    "options": [
      {
        "text": "'–ú–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω'",
        "is_correct": true
      },
      {
        "text": "'–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ?",
    "explanation": "–°–æ–∑–¥–∞–π –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å, —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω—ã–π –æ—Ç `Exception` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass InvalidAgeError(Exception):\n    pass\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\nraise InvalidAgeError('–í–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º')\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ—á–Ω–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –∑–∞ –æ—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ `ValueError`, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º. –≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—á–∫—É ¬´–í—ã—Ö–æ–¥¬ª –≤–º–µ—Å—Ç–æ ¬´–ù–µ —Ö–æ–¥–∏—Ç–µ —Å—é–¥–∞¬ª.",
    "options": [
      {
        "text": "class MyError(Exception):",
        "is_correct": true
      },
      {
        "text": "def MyError():",
        "is_correct": false
      },
      {
        "text": "error MyError",
        "is_correct": false
      },
      {
        "text": "lambda: raise Exception",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ?",
    "explanation": "–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –∞—Ç—Ä–∏–±—É—Ç—ã –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ üì¶ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass ValidationError(Exception):\n    def __init__(self, message, field):\n        super().__init__(message)\n        self.field = field\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\ntry:\n    raise ValidationError('–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', 'email')\nexcept ValidationError as e:\n    print(f'–û—à–∏–±–∫–∞ –≤ –ø–æ–ª–µ {e.field}: {e}')\n```\n\n–≠—Ç–æ –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –≤ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç, –Ω–æ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç: ¬´–û—à–∏–±–∫–∞ –≤ –ø–æ–ª–µ email¬ª.",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å –≤ __init__ –∞—Ç—Ä–∏–±—É—Ç—ã",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É",
        "is_correct": false
      },
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ raise",
        "is_correct": false
      },
      {
        "text": "–ß–µ—Ä–µ–∑ __dict__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞?",
    "explanation": "–î–∞, —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å –∏–µ—Ä–∞—Ä—Ö–∏—é –∏—Å–∫–ª—é—á–µ–Ω–∏–π üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass AppError(Exception):\n    pass\n\nclass ValidationError(AppError):\n    pass\n\nclass AuthError(AppError):\n    pass\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ª–æ–≤–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è `except AppError`, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ ‚Äî —á–µ—Ä–µ–∑ `except ValidationError`. –≠—Ç–æ –∫–∞–∫ –æ–±—â–∏–π —è—â–∏–∫ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –≤–Ω—É—Ç—Ä–∏.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –æ—Ç BaseException",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @abstractmethod",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –±–ª–æ–∫ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –æ—à–∏–±–æ–∫?",
    "explanation": "–õ—É—á—à–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `try` –∏ `except`, —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å —Å–≤–æ–∏ –æ—à–∏–±–∫–∏ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass InvalidEmailError(Exception):\n    pass\n\ntry:\n    raise InvalidEmailError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email')\nexcept InvalidEmailError as e:\n    print(f'–û—à–∏–±–∫–∞: {e}')\n```\n\n–≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –ø–æ–Ω—è—Ç–Ω—ã–º –∏ —É–ø—Ä–∞–≤–ª—è–µ–º—ã–º. –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞—ë—à—å —Å–≤–æ–∏ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–≤–æ–∏ –æ—à–∏–±–∫–∏ ‚Äî —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏—Ö –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ-—Å–≤–æ–µ–º—É.",
    "options": [
      {
        "text": "try / except",
        "is_correct": true
      },
      {
        "text": "if / else",
        "is_correct": false
      },
      {
        "text": "with / as",
        "is_correct": false
      },
      {
        "text": "for / else",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö?",
    "explanation": "–î–∞, –∏ –¥–∞–∂–µ –Ω—É–∂–Ω–æ! üì¶ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–µ–ª–∞—é—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É **–±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º–æ–π –∏ –ø–æ–Ω—è—Ç–Ω–æ–π**. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass APIError(Exception):\n    pass\n\nclass NotFound(APIError):\n    pass\n\nclass Unauthorized(APIError):\n    pass\n```\n\n–¢–µ–ø–µ—Ä—å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –º–æ–∂–µ—Ç –ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ —É—Ä–æ–≤–Ω—è API, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ `Exception`. –≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: —Ç—ã –∑–Ω–∞–µ—à—å, –≥–¥–µ –∏—Å–∫–∞—Ç—å –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä.",
    "options": [
      {
        "text": "–î–∞, —ç—Ç–æ —Ö–æ—Ä–æ—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å raise",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏?",
    "explanation": "–î–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç `Exception` üß© –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass ValidationError(Exception):\n    pass\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\nif not is_valid_email(email):\n    raise ValidationError('–ù–µ–≤–µ—Ä–Ω—ã–π email')\n```\n\n–≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –ø–æ–Ω—è—Ç–Ω—ã–º: —Ç—ã —Å—Ä–∞–∑—É –≤–∏–¥–∏—à—å, —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –∞ –Ω–µ –≤ —Ç–∏–ø–µ –∏–ª–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ. –≠—Ç–æ –∫–∞–∫ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—á–∫—É ¬´–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å¬ª –Ω–∞ —Ä–∞–∑–≤–∏–ª–∫–µ –¥–æ—Ä–æ–≥–∏.",
    "options": [
      {
        "text": "ValidationError",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "SyntaxError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ª–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è?",
    "explanation": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ª–æ–≤—è—Ç—Å—è —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass InvalidPassword(Exception):\n    pass\n\ntry:\n    raise InvalidPassword('–°–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å')\nexcept InvalidPassword as e:\n    print(e)\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ **–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∏ —è—Å–Ω–æ**, –Ω–µ —Å–º–µ—à–∏–≤–∞—è —Å –¥—Ä—É–≥–∏–º–∏ —Ç–∏–ø–∞–º–∏. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ª–æ–≤–∏—à—å –Ω–µ –ø—Ä–æ—Å—Ç–æ ¬´—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫¬ª, –∞ ¬´–æ—à–∏–±–∫–∞ –ø–∞—Ä–æ–ª—è¬ª.",
    "options": [
      {
        "text": "except MyError as e",
        "is_correct": true
      },
      {
        "text": "catch MyError",
        "is_correct": false
      },
      {
        "text": "except: MyError",
        "is_correct": false
      },
      {
        "text": "if isinstance(e, MyError)",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass AppError(Exception):\n    pass\n\nclass NotFound(AppError):\n    pass\n\ntry:\n    raise NotFound('–ù–µ –Ω–∞–π–¥–µ–Ω–æ')\nexcept AppError as e:\n    print('–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')\n```\n\n",
    "explanation": "–ü–æ—Å–∫–æ–ª—å–∫—É `NotFound` –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç `AppError`, –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ üß† –†–µ–∑—É–ª—å—Ç–∞—Ç: `'–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'`. –≠—Ç–æ –∫–∞–∫ –ª–æ–≤–∏—Ç—å –Ω–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∞, –∞ –≤—Å–µ—Ö –∏–∑ –µ–≥–æ –≥—Ä—É–ø–ø—ã. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.",
    "options": [
      {
        "text": "'–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'",
        "is_correct": true
      },
      {
        "text": "'–ù–µ –Ω–∞–π–¥–µ–Ω–æ'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Ç–æ–¥ `__str__` –∏–ª–∏ `__repr__` –≤ —Å–≤–æ—ë–º –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass MyError(Exception):\n    def __str__(self):\n        return '–≠—Ç–æ –º–æ—è –æ—à–∏–±–∫–∞'\n\nprint(MyError())  # –≠—Ç–æ –º–æ—è –æ—à–∏–±–∫–∞\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å **–ø–æ–Ω—è—Ç–Ω—ã–µ –∏ –∫—Ä–∞—Å–∏–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è**, –≤–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–ª –∫—Ä–∞—Å–∏–≤—É—é —ç—Ç–∏–∫–µ—Ç–∫—É –Ω–∞ –±–∞–Ω–∫–µ —Å –æ—à–∏–±–∫–∞–º–∏.",
    "options": [
      {
        "text": "__str__",
        "is_correct": true
      },
      {
        "text": "__init__",
        "is_correct": false
      },
      {
        "text": "__repr__",
        "is_correct": false
      },
      {
        "text": "__error__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ?",
    "explanation": "–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –≤ `__init__`, –∞ –ø–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –≤ `except` üì¶ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass AuthError(Exception):\n    def __init__(self, user, reason):\n        super().__init__('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏')\n        self.user = user\n        self.reason = reason\n\ntry:\n    raise AuthError('anna', '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å')\nexcept AuthError as e:\n    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {e.user}, –ü—Ä–∏—á–∏–Ω–∞: {e.reason}')\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ—à–∏–±–∫—É –Ω–µ –ø—Ä–æ—Å—Ç–æ ¬´—á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫¬ª, –∞ **–æ—à–∏–±–∫—É —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º**: —Ç–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, **–∫—Ç–æ –∏ –ø–æ—á–µ–º—É** –Ω–µ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É.",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –≤ __init__",
        "is_correct": true
      },
      {
        "text": "–ß–µ—Ä–µ–∑ __dict__",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å raise",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞—Ç—å –∏–µ—Ä–∞—Ä—Ö–∏—é –∏—Å–∫–ª—é—á–µ–Ω–∏–π?",
    "explanation": "–î–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å, —Å–æ–∑–¥–∞–≤–∞—è **–∏–µ—Ä–∞—Ä—Ö–∏–∏ –æ—à–∏–±–æ–∫** üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass AppError(Exception):\n    pass\n\nclass DBError(AppError):\n    pass\n\nclass AuthError(AppError):\n    pass\n```\n\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ª–æ–≤–∏—Ç—å –æ–±—â–∏–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å **—Ä–∞–∑–¥–µ–ª—ã –≤ —Å–ª–æ–≤–∞—Ä–µ –æ—à–∏–±–æ–∫**: ¬´–°–∏—Å—Ç–µ–º–Ω—ã–µ¬ª, ¬´–û—à–∏–±–∫–∞ –±–∞–∑—ã¬ª, ¬´–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å @abstractmethod",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å BaseException",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ —Å–æ–¥–µ—Ä–∂–∞–ª–æ –∫–æ–¥ –æ—à–∏–±–∫–∏?",
    "explanation": "–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ `code` –≤ `__init__` –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ `raise` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass APIError(Exception):\n    def __init__(self, message, code):\n        super().__init__(message)\n        self.code = code\n\nraise APIError('–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å', 400)\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ, –Ω–æ –∏ –ø–µ—Ä–µ–¥–∞—Ç—å **HTTP-–∫–æ–¥** –∏–ª–∏ **–∫–æ–¥ –æ—à–∏–±–∫–∏** –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è. –ö–∞–∫ –±—É–¥—Ç–æ –∫–∞–∂–¥–∞—è –æ—à–∏–±–∫–∞ —Ç–µ–ø–µ—Ä—å —Å –ø–∞—Å–ø–æ—Ä—Ç–æ–º ‚Äî –∏ —Ç—ã –∑–Ω–∞–µ—à—å, –∫—Ç–æ –æ–Ω–∞ –∏ —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç.",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ –≤ __init__",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å __str__",
        "is_correct": false
      },
      {
        "text": "–£–∫–∞–∑–∞—Ç—å –≤ raise",
        "is_correct": false
      },
      {
        "text": "–ß–µ—Ä–µ–∑ __dict__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Ç–∏–ø –æ—à–∏–±–∫–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è API?",
    "explanation": "–î–ª—è API-–æ—à–∏–±–æ–∫ –ª—É—á—à–µ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç `Exception` üß© –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass APIError(Exception):\n    def __init__(self, message, code=500):\n        super().__init__(message)\n        self.code = code\n\nclass NotFound(APIError):\n    def __init__(self):\n        super().__init__('–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω', 404)\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ª–µ–≥–∫–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç HTTP-–∫–æ–¥—ã. –≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å **–æ—à–∏–±–∫–∏ API —á–∏—Ç–∞–µ–º—ã–º–∏ –∏ –ø–æ–Ω—è—Ç–Ω—ã–º–∏**, –∫–∞–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞, —Ç–∞–∫ –∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞.",
    "options": [
      {
        "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ",
        "is_correct": true
      },
      {
        "text": "ValueError",
        "is_correct": false
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "BaseException",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ?",
    "explanation": "–°–æ–∑–¥–∞–π –∏–µ—Ä–∞—Ä—Ö–∏—é –∏—Å–∫–ª—é—á–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –º–æ–≥ –ª–æ–≤–∏—Ç—å –æ–±—â–∏–µ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏ üì¶ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass LibraryError(Exception):\n    pass\n\nclass FileError(LibraryError):\n    pass\n\nclass NetworkError(LibraryError):\n    pass\n```\n\n–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ª–æ–≤–∏—Ç—å `LibraryError`, –µ—Å–ª–∏ –µ–º—É –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å **–≤—Å–µ –æ—à–∏–±–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏**, –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã ‚Äî –µ—Å–ª–∏ —Ö–æ—á–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –ø–æ-—Ä–∞–∑–Ω–æ–º—É. –≠—Ç–æ –∫–∞–∫ –∏–º–µ—Ç—å –æ–±—â–∏–π —á–∞—Ç —Å –æ—à–∏–±–∫–∞–º–∏ –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.",
    "options": [
      {
        "text": "–°–æ–∑–¥–∞—Ç—å –∏–µ—Ä–∞—Ä—Ö–∏—é –∏—Å–∫–ª—é—á–µ–Ω–∏–π",
        "is_correct": true
      },
      {
        "text": "–í—Å—ë —á–µ—Ä–µ–∑ ValueError",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –Ω—É–∂–Ω–æ –ª–æ–≤–∏—Ç—å?",
    "explanation": "–ï—Å–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ –∫—Ä–∞—Ö—É, –µ–≥–æ –º–æ–∂–Ω–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç `BaseException` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass CriticalError(BaseException):\n    pass\n\ntry:\n    raise CriticalError('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞')\nexcept Exception:\n    print('–û–±—ã—á–Ω–∞—è –æ—à–∏–±–∫–∞')\n```\n\n–≠—Ç–æ—Ç –∫–æ–¥ **–Ω–µ –ø–æ–π–º–∞–µ—Ç** `CriticalError`, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –Ω–µ –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç `Exception`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—à–∏–±–∫–∞, —ç—Ç–æ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞¬ª.",
    "options": [
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç BaseException",
        "is_correct": true
      },
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç Exception",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å raise –±–µ–∑ –∫–ª–∞—Å—Å–∞",
        "is_correct": false
      },
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å final",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å?",
    "explanation": "–î–æ–±–∞–≤—å –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω—É–∂–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏ `__str__` üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass LoggableError(Exception):\n    def __init__(self, msg, user_id):\n        super().__init__(msg)\n        self.user_id = user_id\n\n    def __str__(self):\n        return f'[{self.user_id}] {self.args[0]}'\n\nraise LoggableError('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', 123)\n```\n\n–¢–µ–ø–µ—Ä—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º. –≠—Ç–æ –∫–∞–∫ —Å–æ–æ–±—â–∏—Ç—å: ¬´–û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞, –∏ –≤–æ—Ç –∫—Ç–æ –≤ –Ω–µ–π –∑–∞–º–µ—à–∞–Ω¬ª.",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –∏ __str__",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å __repr__",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ª–æ–≤–∏—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º except?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞—Å–ª–µ–¥—É–π –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç `BaseException`, –∞ –Ω–µ –æ—Ç `Exception` üö´ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass FatalError(BaseException):\n    pass\n\ntry:\n    raise FatalError('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞')\nexcept Exception:\n    print('–û–±—ã—á–Ω–∞—è –æ—à–∏–±–∫–∞')\n```\n\n–≠—Ç–æ—Ç –∫–æ–¥ **–Ω–µ –≤–æ–π–¥—ë—Ç –≤ –±–ª–æ–∫ except**, –ø–æ—Ç–æ–º—É —á—Ç–æ `FatalError` –Ω–µ –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç `Exception`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–≠—Ç–æ –Ω–µ –æ–±—ã—á–Ω–∞—è –æ—à–∏–±–∫–∞ ‚Äî —ç—Ç–æ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞¬ª.",
    "options": [
      {
        "text": "–ù–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç BaseException",
        "is_correct": true
      },
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å raise –≤ except",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nclass MyError(Exception):\n    def __str__(self):\n        return '–û—à–∏–±–∫–∞!'\n\ntry:\n    raise MyError('–°–æ–æ–±—â–µ–Ω–∏–µ')\nexcept MyError as e:\n    print(e)",
    "explanation": "–ú–µ—Ç–æ–¥ `__str__` –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω, –∏ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `'–û—à–∏–±–∫–∞!'`, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üß† –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å, –∫–∞–∫ –≤—ã–≤–æ–¥–∏—Ç—Å—è –æ—à–∏–±–∫–∞. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª: ¬´–ú–Ω–µ –Ω–µ –≤–∞–∂–Ω–æ, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª, —è —Å–∞–º —Ä–µ—à—É, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –º–æ—è –æ—à–∏–±–∫–∞¬ª.",
    "options": [
      {
        "text": "'–û—à–∏–±–∫–∞!'",
        "is_correct": true
      },
      {
        "text": "'–°–æ–æ–±—â–µ–Ω–∏–µ'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å?",
    "explanation": "–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –Ω–µ–≥–æ **—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã**, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ JSON –∏–ª–∏ –ª–æ–≥ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass LoggableError(Exception):\n    def __init__(self, message, code):\n        super().__init__(message)\n        self.code = code\n\n    def to_dict(self):\n        return {\n            'message': str(self),\n            'code': self.code\n        }\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤ –ª–æ–≥ –∏–ª–∏ API. –≠—Ç–æ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ—à–∏–±–∫—É ¬´–ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π¬ª –Ω–∞ —è–∑—ã–∫ JSON –∏–ª–∏ HTTP-–æ—Ç–≤–µ—Ç–æ–≤.",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ to_dict()",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É",
        "is_correct": false
      },
      {
        "text": "–°–¥–µ–ª–∞—Ç—å __repr__",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å raise –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è?",
    "explanation": "–î–∞, `raise` –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è **–ø–æ–≤—Ç–æ—Ä—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—à–∏–±–∫—É** ü§Ø –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –≤ `except` –¥–ª—è –ø—Ä–æ–±—Ä–æ—Å–∞ –æ—à–∏–±–∫–∏ –¥–∞–ª—å—à–µ. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    x = 5 / 0\nexcept ZeroDivisionError:\n    print('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è')\n    raise  # –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –æ—à–∏–±–∫—É\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –∑–Ω–∞—é, —á—Ç–æ –∑–¥–µ—Å—å –æ—à–∏–±–∫–∞, –Ω–æ –ø—É—Å—Ç—å –µ—ë –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π¬ª.",
    "options": [
      {
        "text": "–î–∞, –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ raise",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, –≤—Å–µ–≥–¥–∞ –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ assert?",
    "explanation": "`assert` –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è ü§Ø –ù–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫:\n\n```python\ndef check_positive(x):\n    if x <= 0:\n        raise InvalidValueError(f'{x} –Ω–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ')\n```\n\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `assert` —Ç–æ–ª—å–∫–æ –¥–ª—è **–±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö –∏ –æ—Ç–ª–∞–¥–∫–µ**. –≠—Ç–æ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ¬´—Å—Ç–æ–ø¬ª-—Å–∏–≥–Ω–∞–ª, –µ—Å–ª–∏ —Ç—ã –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –∏ ¬´–∫—Ä–∞—Å–Ω—É—é –∫–Ω–æ–ø–∫—É¬ª ‚Äî –µ—Å–ª–∏ –≤ production.",
    "options": [
      {
        "text": "–ù–µ–ª—å–∑—è –Ω–∞–ø—Ä—è–º—É—é",
        "is_correct": true
      },
      {
        "text": "assert ... raise MyError",
        "is_correct": false
      },
      {
        "text": "assert isinstance(x, MyError)",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏?",
    "explanation": "–ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –≤ `__init__` üìù –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass LoggedError(Exception):\n    def __init__(self, message):\n        super().__init__(message)\n        logging.error(message)\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\nraise LoggedError('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏')\n```\n\n–≠—Ç–æ —É–¥–æ–±–Ω–æ, –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –∫–∞–∂–¥–∞—è –æ—à–∏–±–∫–∞ **–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–∞–ª–∞ –≤ –ª–æ–≥–∏**. –ö–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª: ¬´–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –ø—É—Å—Ç—å –æ –Ω–µ–π —É–∑–Ω–∞—é—Ç¬ª.",
    "options": [
      {
        "text": "–õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤ __init__",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ except",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å raise",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx = 5\nassert x == 10, 'x –Ω–µ —Ä–∞–≤–Ω–æ 10'\nprint('–ì–æ—Ç–æ–≤–æ')",
    "explanation": "–ö–æ–¥ –≤—ã–¥–∞—Å—Ç `AssertionError`: —É—Å–ª–æ–≤–∏–µ `x == 10` –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ üö´ –ü–æ—ç—Ç–æ–º—É `print()` –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–æ–≤–µ—Ä—å, –≤—Å—ë –ª–∏ –≤ –ø–æ—Ä—è–¥–∫–µ¬ª, –∏ –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî ¬´–æ—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É¬ª.",
    "options": [
      {
        "text": "AssertionError",
        "is_correct": true
      },
      {
        "text": "'–ì–æ—Ç–æ–≤–æ'",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx = 5\nassert x == 5, '–û—à–∏–±–∫–∞'\nprint('–í—Å—ë –≤–µ—Ä–Ω–æ')",
    "explanation": "–£—Å–ª–æ–≤–∏–µ `x == 5` –∏—Å—Ç–∏–Ω–Ω–æ ‚Üí `assert` –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç üì£ –í—ã–≤–µ–¥–µ—Ç—Å—è `'–í—Å—ë –≤–µ—Ä–Ω–æ'`. –≠—Ç–æ –∫–∞–∫ –ø—Ä–æ–π—Ç–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –ø–æ–ª—É—á–∏—Ç—å: ¬´–í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ, –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ¬ª.",
    "options": [
      {
        "text": "'–í—Å—ë –≤–µ—Ä–Ω–æ'",
        "is_correct": true
      },
      {
        "text": "AssertionError",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ assert?",
    "explanation": "–î–∞, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤ `AssertionError` üìù –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nassert x > 0, '–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º'\n```\n\n–≠—Ç–æ –¥–µ–ª–∞–µ—Ç –æ—à–∏–±–∫—É –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–æ–π. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ ‚Äî –ø—Ä–∏—á–∏–Ω–∞: —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤¬ª.",
    "options": [
      {
        "text": "–î–∞, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å __init__",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å raise",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç assert –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å -O?",
    "explanation": "–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å —Ñ–ª–∞–≥–æ–º `-O` –≤—Å–µ `assert` –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è üö´ –≠—Ç–æ –∫–∞–∫ –≤–∫–ª—é—á–∏—Ç—å ¬´—Ä–µ–∂–∏–º –±–æ–µ–≤–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è¬ª ‚Äî –∏ –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –≤—Å—ë –ª–∏ –≤ –ø–æ—Ä—è–¥–∫–µ. –≠—Ç–æ **–æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å**, –∏–Ω–∞—á–µ –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.",
    "options": [
      {
        "text": "–ù–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ True",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ False",
        "is_correct": false
      },
      {
        "text": "–í—ã–∑—ã–≤–∞–µ—Ç SystemError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å -O?\n\nx = -1\nassert x >= 0, 'x –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º'\nprint(x)",
    "explanation": "–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å —Ñ–ª–∞–≥–æ–º `-O` –≤—Å–µ `assert` –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è üöÄ –ü–æ—ç—Ç–æ–º—É –∫–æ–¥ –¥–æ–π–¥—ë—Ç –¥–æ `print(x)` –∏ –≤—ã–≤–µ–¥–µ—Ç `-1`. –≠—Ç–æ –∫–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—é –≤ –º–∞—à–∏–Ω–µ ‚Äî —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–æ–µ–¥–µ—à—å, –Ω–æ –≤ —Å–ª—É—á–∞–µ –î–¢–ü, –Ω–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.",
    "options": [
      {
        "text": "-1",
        "is_correct": true
      },
      {
        "text": "AssertionError",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å assert –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö?",
    "explanation": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ ‚Äî –¥–∞, –Ω–æ **–ª—É—á—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `assert` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö** üõë –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nassert isinstance(name, str), 'name –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π'\n```\n\n–ù–æ –µ—Å–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å `-O`, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—á–µ–∑–Ω–µ—Ç. –î–ª—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `if ... raise ValueError`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–æ–≤–µ—Ä—å, –Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç–µ–±—è –Ω–µ –æ—Ç–∫–ª—é—á–∞—Ç¬ª.",
    "options": [
      {
        "text": "–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è",
        "is_correct": true
      },
      {
        "text": "–î–∞, –≤—Å–µ–≥–¥–∞",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ —Ç–µ—Å—Ç–∞—Ö",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ?",
    "explanation": "–î–ª—è —ç—Ç–æ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç `assert` –≤ —Ç–µ—Å—Ç–∞—Ö üß™ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef test_sum():\n    assert sum([1, 2, 3]) == 6\n```\n\n–ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å–æ–≤–ø–∞–¥—ë—Ç ‚Äî —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏—Ç—Å—è. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —è –ø–µ—Ä–µ–¥–∞–ª 1+2+3, —è –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å 6¬ª.",
    "options": [
      {
        "text": "assert func(...) == expected",
        "is_correct": true
      },
      {
        "text": "try/except",
        "is_correct": false
      },
      {
        "text": "raise ValueError",
        "is_correct": false
      },
      {
        "text": "if result != expected: pass",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å assert –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è?",
    "explanation": "–î–∞, `assert` –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nx = -1\nassert x >= 0\n```\n\n–ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ ‚Äî –±—É–¥–µ—Ç `AssertionError` –±–µ–∑ —Ç–µ–∫—Å—Ç–∞. –≠—Ç–æ –∫–∞–∫ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π: —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ –≤ —Ç–µ—Å—Ç–∞—Ö",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å -O?\n\nx = 10\nassert x == 5, '–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'\nprint('–ì–æ—Ç–æ–≤–æ')",
    "explanation": "–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å —Ñ–ª–∞–≥–æ–º `-O` –≤—Å–µ `assert` –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è üöÄ –ü–æ—ç—Ç–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∞ **–≤—ã–≤–µ–¥–µ—Ç `'–ì–æ—Ç–æ–≤–æ'`**, –¥–∞–∂–µ –µ—Å–ª–∏ `x != 5`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–æ–≤–µ—Ä—å, –Ω–æ –µ—Å–ª–∏ —Ç—ã –≤ –±–æ—é ‚Äî –∑–∞–±—É–¥—å –æ–± —ç—Ç–æ–º¬ª.",
    "options": [
      {
        "text": "'–ì–æ—Ç–æ–≤–æ'",
        "is_correct": true
      },
      {
        "text": "AssertionError",
        "is_correct": false
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —ç—Ç–æ–º –∫–æ–¥–µ?\n\ntry:\n    x = 5 / 0\nexcept:\n    print('–û—à–∏–±–∫–∞')",
    "explanation": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `except:` –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Ç–∏–ø–∞ ‚Äî –ø–ª–æ—Ö–æ–π —Å—Ç–∏–ª—å üö´ –¢–∞–∫ —Ç—ã –ª–æ–≤–∏—à—å –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è `KeyboardInterrupt`, `SystemExit`, `GeneratorExit`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –≥–æ—Ç–æ–≤ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å –≤—Å—ë, –¥–∞–∂–µ –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã¬ª ‚Äî –∏ `Ctrl+C` –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.\n\n**–ü—Ä–∞–≤–∏–ª—å–Ω–µ–µ:** `except ZeroDivisionError` –∏–ª–∏ —Ö–æ—Ç—è –±—ã `except Exception`.",
    "options": [
      {
        "text": "–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    int('abc')\nexcept ValueError:\n    pass",
    "explanation": "–ü—Ä–∏–º–µ—Ä–Ω–æ –≤ 90% —Å–ª—É—á–∞–µ–≤ `except ValueError` ‚Äî —ç—Ç–æ **—Å–ª–∏—à–∫–æ–º —à–∏—Ä–æ–∫–∞—è –ª–æ–≤—É—à–∫–∞** ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å `ValueError` –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ –¥—Ä—É–≥–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ ‚Äî —Ç—ã –º–æ–∂–µ—à—å **—Å–ª—É—á–∞–π–Ω–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å** –ø—Ä–æ–±–ª–µ–º—É.\n\n–õ—É—á—à–µ –±—ã—Ç—å **–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º**: `except ValueError as e`, –∏ –¥–∞–∂–µ –ª—É—á—à–µ ‚Äî **—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–ª—É—á–∞–∏**, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ `pass`.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è",
        "is_correct": true
      },
      {
        "text": "–í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ",
        "is_correct": false
      },
      {
        "text": "–ù—É–∂–µ–Ω else",
        "is_correct": false
      },
      {
        "text": "–ù—É–∂–µ–Ω finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ —á–∞—Å—Ç–æ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ assert –≤ –±–æ–µ–≤–æ–º –∫–æ–¥–µ?",
    "explanation": "–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å —Ñ–ª–∞–≥–æ–º `-O` –≤—Å–µ `assert` –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nassert check_permissions(user), '–ù–µ—Ç –ø—Ä–∞–≤'\n```\n\n–ï—Å–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å `-O`, –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –≤—Å—ë. –≠—Ç–æ –∫–∞–∫ –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—é –≤ –¥–æ–º–µ ‚Äî –∏ –Ω–µ –∑–Ω–∞—Ç—å, —á—Ç–æ —Ç–µ–±—è –æ–≥—Ä–∞–±–∏–ª–∏.",
    "options": [
      {
        "text": "Assert –æ—Ç–∫–ª—é—á–∞—é—Ç—Å—è —Å -O",
        "is_correct": true
      },
      {
        "text": "–í—ã–∑—ã–≤–∞–µ—Ç TypeError",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤ __init__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    data = json.loads(invalid_json)\nexcept:\n    print('–û—à–∏–±–∫–∞')\n    raise",
    "explanation": "–≠—Ç–æ—Ç –∫–æ–¥ **–ª–æ–≤–∏—Ç –≤—Å—ë –ø–æ–¥—Ä—è–¥**, –∞ –ø–æ—Ç–æ–º **–ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É**, –Ω–æ —Ç–µ—Ä—è–µ—Ç **–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç** ü§Ø –õ—É—á—à–µ –ª–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nexcept json.JSONDecodeError as e:\n    print('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON')\n    raise CustomError from e\n```\n\n–≠—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç **–ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤**. –≠—Ç–æ –∫–∞–∫ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –æ—à–∏–±–∫—É –≤ —Å–≤–æ—ë–º —Å—Ç–∏–ª–µ, –Ω–æ **–Ω–µ –∑–∞–±—ã—Ç—å –ø—Ä–æ –æ—Ä–∏–≥–∏–Ω–∞–ª**.",
    "options": [
      {
        "text": "–ü–æ—Ç–µ—Ä—è–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ó–∞—á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å raise ... from ...?",
    "explanation": "`raise MyError from e` —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç **–∏—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤** üß† –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∏–¥–µ—Ç—å, **—á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Ä–∞–Ω—å—à–µ**, –∏ **–∫–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤—ã–∑–≤–∞–ª–∞ —Ç–µ–∫—É—â—É—é**. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    int('abc')\nexcept ValueError as e:\n    raise TypeError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø') from e\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã —É–≤–∏–¥–∏—à—å **–æ–±–µ –æ—à–∏–±–∫–∏**. –≠—Ç–æ –∫–∞–∫ –ø–æ–∫–∞–∑–∞—Ç—å, **–∫—Ç–æ –≤–∏–Ω–æ–≤–∞—Ç**, –∏ **–∫—Ç–æ —É–∂–µ –ø–æ–ø—ã—Ç–∞–ª—Å—è —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å**.",
    "options": [
      {
        "text": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤",
        "is_correct": true
      },
      {
        "text": "–£—Å–∫–æ—Ä–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É",
        "is_correct": false
      },
      {
        "text": "–°–∫—Ä—ã—Ç—å –æ—à–∏–±–∫—É",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ except –±–µ–∑ try?",
    "explanation": "`except` –±–µ–∑ `try` ‚Äî —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ üö´ Python –≤—ã–¥–∞—Å—Ç `SyntaxError`, –ø–æ—Ç–æ–º—É —á—Ç–æ `except` –º–æ–∂–µ—Ç –±—ã—Ç—å **—Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ `try`**. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è **–∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ –æ—Ç–∫—Ä—ã–ª–∏**.",
    "options": [
      {
        "text": "SyntaxError",
        "is_correct": true
      },
      {
        "text": "RuntimeError",
        "is_correct": false
      },
      {
        "text": "AssertionError",
        "is_correct": false
      },
      {
        "text": "NameError",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    x = 5 / 0\nexcept ZeroDivisionError:\n    print('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å')\nexcept Exception:\n    print('–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞')\nexcept:\n    print('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ')",
    "explanation": "–ü–æ—Å–ª–µ–¥–Ω–∏–π `except:` –ø–æ—Å–ª–µ `except Exception` ‚Äî **–ª–∏—à–Ω–∏–π** ü§Ø –ü–æ—Ç–æ–º—É —á—Ç–æ `except:` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å **–ø–æ—Å–ª–µ–¥–Ω–∏–º**, –∏–Ω–∞—á–µ –æ–Ω –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å **–≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è**, –≤–∫–ª—é—á–∞—è —Å–∏—Å—Ç–µ–º–Ω—ã–µ. –≠—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–π–º–∞—Ç—å –≤—Å—ë, –Ω–æ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.",
    "options": [
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      },
      {
        "text": "–ù—É–∂–µ–Ω finally",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ assert –∫–∞–∫ —á–∞—Å—Ç—å API?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `assert` –≤ API ‚Äî –ø–ª–æ—Ö–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ üö´ –ü–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å `-O` –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—á–µ–∑–Ω–µ—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef validate_user(user):\n    assert user is not None\n```\n\n–ü—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤—Å—ë ¬´–ø—Ä–æ–π–¥—ë—Ç¬ª, –¥–∞–∂–µ –µ—Å–ª–∏ `user` ‚Äî `None`. –≠—Ç–æ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –≤—Ö–æ–¥–µ, –∞ –ø–æ—Ç–æ–º –≤–¥—Ä—É–≥ –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–∫–∞–Ω–µ—Ä.",
    "options": [
      {
        "text": "assert –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Ç–∏–ø–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    x = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))\nexcept:\n    x = 0\nprint(x)",
    "explanation": "–≠—Ç–æ—Ç –∫–æ–¥ **–ª–æ–≤–∏—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è**, –≤–∫–ª—é—á–∞—è `KeyboardInterrupt` –∏ `SystemExit` ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª `Ctrl+C` ‚Äî –ø—Ä–æ–≥—Ä–∞–º–º–∞ **–Ω–µ –ø—Ä–µ—Ä–≤—ë—Ç—Å—è**, –∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ. –≠—Ç–æ –∫–∞–∫ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å `Ctrl+C` –∏ —Å–∫–∞–∑–∞—Ç—å: ¬´–ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ–Ω—è¬ª.",
    "options": [
      {
        "text": "–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç finally",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Ç–∏–ø–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ assert –≤ API?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `assert` –≤ API ‚Äî **–Ω–µ–ª—å–∑—è**, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫–ª—é—á—ë–Ω üõë –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ **–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –±–∞–≥–∏.** –≠—Ç–æ –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–µ—Ç—Å—è ‚Äî —è –Ω–µ —Ö–æ—á—É –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å¬ª.",
    "options": [
      {
        "text": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Ç–∏–ø–∞",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    f = open('file.txt')\n    data = f.read()\nexcept:\n    data = ''\nfinally:\n    f.close()",
    "explanation": "–ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –æ—à–∏–±–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç), –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è `f` –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ ü§Ø –¢–æ–≥–¥–∞ –≤ `finally` –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç `NameError`, –ø–æ—Ç–æ–º—É —á—Ç–æ `f` –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –Ω–µ –æ—Ç–∫—Ä—ã–ª.",
    "options": [
      {
        "text": "f –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º",
        "is_correct": false
      }
    ]
  },
  {
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    x = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))\nexcept ValueError:\n    x = 0\nelse:\n    print('–í—Å—ë —Ö–æ—Ä–æ—à–æ')\nfinally:\n    print('–ó–∞–≤–µ—Ä—à–µ–Ω–æ')",
    "explanation": "–í—Å—ë —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ **–≤ –ø–æ—Ä—è–¥–∫–µ**, –Ω–æ `else` –∏ `finally` –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ üß† `else` –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ **–æ—à–∏–±–æ–∫ –Ω–µ –±—ã–ª–æ**, `finally` ‚Äî **–≤—Å–µ–≥–¥–∞**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ —Ö–æ—Ä–æ—à–æ ‚Äî —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º¬ª, –∏ ¬´–≤—Å–µ–≥–¥–∞ ‚Äî –∑–∞–∫—Ä–æ–π –¥–≤–µ—Ä—å¬ª.",
    "options": [
      {
        "text": "–ö–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º",
        "is_correct": false
      },
      {
        "text": "finally –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å else –±–µ–∑ except?",
    "explanation": "–î–∞, `else` –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑ `except`, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ **—Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ** üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    x = 5 / 2\nelse:\n    print('–í—Å—ë –ø—Ä–æ—à–ª–æ —Ö–æ—Ä–æ—à–æ')\n```\n\n–≠—Ç–æ —Ä–µ–¥–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ —Ö–æ—á—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, –Ω–æ —Ö–æ—á—É –∑–Ω–∞—Ç—å, –µ—Å–ª–∏ –≤—Å—ë –æ–∫¬ª.",
    "options": [
      {
        "text": "–î–∞",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ —Å except",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ except –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ª–æ–≤–∏—à—å –æ—à–∏–±–∫—É, –Ω–æ **–Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—à—å**, —ç—Ç–æ –ø–ª–æ—Ö–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    int('abc')\nexcept ValueError:\n    pass\n```\n\n–≠—Ç–æ **–º–∞—Å–∫–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—É** –∏ –º–µ—à–∞–µ—Ç –æ—Ç–ª–∞–¥–∫–µ. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –≤–∏–∂—É, —á—Ç–æ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –Ω–æ –Ω–µ —Ö–æ—á—É –æ–± —ç—Ç–æ–º –≥–æ–≤–æ—Ä–∏—Ç—å¬ª.",
    "options": [
      {
        "text": "–ú–∞—Å–∫–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      },
      {
        "text": "–ù—É–∂–µ–Ω finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å finally –±–µ–∑ try?",
    "explanation": "–ù–µ—Ç, `finally` **—Ç—Ä–µ–±—É–µ—Ç –±–ª–æ–∫–∞ `try`** üö´ –û–Ω –Ω–µ –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∞–º –ø–æ —Å–µ–±–µ. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n# –¢–∞–∫ –Ω–µ–ª—å–∑—è:\nfinally:\n    print('–í—Å–µ–≥–¥–∞')\n```\n\n–≠—Ç–æ –≤—ã–∑–æ–≤–µ—Ç `SyntaxError`. `finally` ‚Äî —ç—Ç–æ –∑–∞–≤–µ—Ä—à–∞—é—â–∞—è —á–∞—Å—Ç—å `try`, –∫–∞–∫ —Ñ–∏–Ω–∞–ª –≤ —Ñ–∏–ª—å–º–µ. –ï–≥–æ –Ω–µ –±—ã–≤–∞–µ—Ç –±–µ–∑ –Ω–∞—á–∞–ª–∞.",
    "options": [
      {
        "text": "–ù–µ—Ç",
        "is_correct": true
      },
      {
        "text": "–î–∞",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å else",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å finally –±–µ–∑ except?",
    "explanation": "–î–∞, `finally` –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–±–µ–∑ `except`, –Ω–æ —Å `try`** üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    f = open('file.txt')\nfinally:\n    f.close()\n```\n\n–≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ —Ç—ã **–Ω–µ —Ö–æ—á–µ—à—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏**, –Ω–æ **–≤—Å—ë —Ä–∞–≤–Ω–æ —Ö–æ—á–µ—à—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–°–¥–µ–ª–∞–π –ø–æ–ø—ã—Ç–∫—É, –∏ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ ‚Äî –∑–∞–∫—Ä–æ–π –¥–≤–µ—Ä—å¬ª.",
    "options": [
      {
        "text": "–î–∞, —Å try",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å else",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    x = 1 / 0\nexcept:\n    print('–û—à–∏–±–∫–∞')\n    raise\n",
    "explanation": "–≠—Ç–æ—Ç –∫–æ–¥ –ª–æ–≤–∏—Ç –æ—à–∏–±–∫—É, –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç –µ—ë –¥–∞–ª—å—à–µ üß† –≠—Ç–æ **–Ω–µ –æ—à–∏–±–∫–∞**, –Ω–æ **–ª—É—á—à–µ —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø**, —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å –≤—Å—ë –ø–æ–¥—Ä—è–¥. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nexcept ZeroDivisionError:\n    print('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è')\n    raise\n```\n\n–ò–Ω–∞—á–µ —Ç—ã –º–æ–∂–µ—à—å **—Å–ª—É—á–∞–π–Ω–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å `KeyboardInterrupt` –∏–ª–∏ `SystemExit`**, –∏ `raise` –≤—ã–∑–æ–≤–µ—Ç –∏—Ö –ø–æ–≤—Ç–æ—Ä–Ω–æ. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–õ–æ–≤–ª—é –≤—Å–µ—Ö, –∏ –≤—Å–µ—Ö –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—é¬ª, –Ω–æ –≤ –±–æ—é —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—é—Ç.",
    "options": [
      {
        "text": "–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "finally –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç —Ñ–∞–π–ª",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    x = 5 / 0\nexcept:\n    pass\nelse:\n    print('–í—Å—ë —Ö–æ—Ä–æ—à–æ')\n",
    "explanation": "`else` —Å—Ä–∞–±–æ—Ç–∞–µ—Ç **—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏** ü§Ø –ù–æ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∞ –µ—Å—Ç—å ‚Üí `else` –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è. –≠—Ç–æ **–Ω–µ –æ—à–∏–±–∫–∞**, –Ω–æ –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, **–∫–æ–≥–¥–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç `else`**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ —Ö–æ—Ä–æ—à–æ ‚Äî –æ—Ç–∫—Ä–æ–π —à–∞–º–ø–∞–Ω—Å–∫–æ–µ¬ª, –Ω–æ –µ—Å–ª–∏ –≤—Å—ë –Ω–µ –ø—Ä–æ—à–ª–æ ‚Äî –∏–¥–∏ –¥–æ–º–æ–π.",
    "options": [
      {
        "text": "else –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ except Exception, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å ValueError?",
    "explanation": "–≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞, –Ω–æ **–ø–ª–æ—Ö–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞**: `except Exception` –ª–æ–≤–∏—Ç **–≤—Å–µ –æ—à–∏–±–∫–∏**, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –Ω–µ –æ–∂–∏–¥–∞–ª üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    int('abc')\nexcept Exception:\n    print('–û—à–∏–±–∫–∞')\n```\n\n–ö–æ–¥ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç—ã —Ç–µ—Ä—è–µ—à—å **–∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏**. –≠—Ç–æ –∫–∞–∫ –ª–æ–≤–∏—Ç—å –≤—Å—ë, –Ω–æ –Ω–µ –∑–Ω–∞—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ–π–º–∞–ª.",
    "options": [
      {
        "text": "–°–ª–∏—à–∫–æ–º —à–∏—Ä–æ–∫–∏–π except",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ try/except –≤–æ–∫—Ä—É–≥ assert?",
    "explanation": "–¢—ã –º–æ–∂–µ—à—å –ª–æ–≤–∏—Ç—å `AssertionError`, –Ω–æ —ç—Ç–æ **–Ω–µ –ª—É—á—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞** ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    assert False\nexcept AssertionError:\n    print('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏')\n```\n\n–ù–æ `assert` ‚Äî –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, –∏ **–ª–æ–≤–∏—Ç—å –µ–≥–æ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ ‚Äî –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è**. –≠—Ç–æ –∫–∞–∫ –ª–æ–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª —Ç—Ä–µ–≤–æ–≥–∏, –∫–æ–≥–¥–∞ –æ–Ω –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É.",
    "options": [
      {
        "text": "–ú–∞—Å–∫–∏—Ä—É–µ—Ç –±–∞–≥–∏",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      },
      {
        "text": "except –Ω–µ –Ω—É–∂–µ–Ω",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    x = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))\nexcept:\n    x = 0\nelse:\n    x += 1\nfinally:\n    print('–ì–æ—Ç–æ–≤–æ')",
    "explanation": "–ö–æ–¥ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ **—Ä–∞–±–æ—Ç–∞–µ—Ç**, –Ω–æ `except` –ª–æ–≤–∏—Ç **–≤—Å—ë –ø–æ–¥—Ä—è–¥** ü§Ø –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–º—É –ø–æ–≤–µ–¥–µ–Ω–∏—é, –µ—Å–ª–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª `Ctrl+C`. –õ—É—á—à–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏:\n\n```python\nexcept ValueError:\n    x = 0\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —è –æ—à–∏–±—Å—è –≤ –≤–≤–æ–¥–µ ‚Äî –ø–æ—Å—Ç–∞–≤—å –Ω–æ–ª—å¬ª, –Ω–æ –µ—Å–ª–∏ —è –Ω–∞–∂–∞–ª `Ctrl+C` ‚Äî –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–π —ç—Ç–æ.",
    "options": [
      {
        "text": "except –ª–æ–≤–∏—Ç –≤—Å—ë –ø–æ–¥—Ä—è–¥",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å else",
        "is_correct": false
      },
      {
        "text": "finally –Ω–µ –Ω—É–∂–µ–Ω",
        "is_correct": false
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    result = 1 / x\nexcept:\n    result = 0\nelse:\n    result += 1\nfinally:\n    print(result)\n```\n\nx –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω ‚Äî —á—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?",
    "explanation": "–û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –ø—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ `1 / x`, —Ç–∞–∫ –∫–∞–∫ `x` –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω ‚Üí `NameError` ü§Ø –û–Ω –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –≤ `except`, –∏ `result` —Å—Ç–∞–Ω–µ—Ç `0`. `else` –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, `finally` ‚Äî –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤—Å–µ–≥–¥–∞.\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç: `0`. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ—Å—á–∏—Ç–∞—Ç—å, –Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –∑–∞–¥–∞–Ω–∞ ‚Äî —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å, –Ω–æ —É–∂–µ —Å –¥–µ—Ñ–æ–ª—Ç–æ–º.",
    "options": [
      {
        "text": "0",
        "is_correct": true
      },
      {
        "text": "None",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞",
        "is_correct": false
      },
      {
        "text": "1",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ except –¥–æ finally?",
    "explanation": "–í Python –±–ª–æ–∫ `except` –¥–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ **–¥–æ** `finally` üö´ –ò–Ω–∞—á–µ ‚Äî `SyntaxError`. –≠—Ç–æ –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è **–∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å**, –ø—Ä–µ–∂–¥–µ —á–µ–º —Ç—ã –µ—ë –æ—Ç–∫—Ä—ã–ª. –ü–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω, –∏ Python —Å—Ç—Ä–æ–≥–æ –µ–≥–æ —Å–æ–±–ª—é–¥–∞–µ—Ç.",
    "options": [
      {
        "text": "SyntaxError",
        "is_correct": true
      },
      {
        "text": "TypeError",
        "is_correct": false
      },
      {
        "text": "RuntimeError",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë —Å—Ä–∞–±–æ—Ç–∞–µ—Ç",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ except Exception, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω KeyError?",
    "explanation": "`except Exception` ‚Äî —Å–ª–∏—à–∫–æ–º –æ–±—â–∏–π ü§Ø –û–Ω –ª–æ–≤–∏—Ç **–≤—Å–µ –æ—à–∏–±–∫–∏**, –Ω–æ —Ç–µ—Ä—è–µ—Ç **–∫–æ–Ω—Ç–µ–∫—Å—Ç**. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    d = {}\n    d['key']\nexcept Exception:\n    print('–û—à–∏–±–∫–∞')\n```\n\n–≠—Ç–æ **–Ω–µ –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞**, –Ω–æ **—Ç–µ—Ä—è–µ—Ç—Å—è —Ç–æ—á–Ω–æ—Å—Ç—å**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –ø–æ–ª—É—á–∏–ª –æ—à–∏–±–∫—É¬ª, –Ω–æ –Ω–µ –∑–Ω–∞—Ç—å, **–∫–∞–∫—É—é –∏–º–µ–Ω–Ω–æ**.",
    "options": [
      {
        "text": "–õ–æ–≤–∏—Ç –≤—Å—ë, –Ω–æ —Ç–µ—Ä—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç –æ—à–∏–±–∫–∏",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ except ValueError, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω int?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ª–æ–≤–∏—à—å `ValueError`, –Ω–æ –æ–∂–∏–¥–∞–µ—à—å `int`, —ç—Ç–æ **–Ω–µ –æ—à–∏–±–∫–∞**, –Ω–æ –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ `ValueError` ‚Äî —ç—Ç–æ **–æ—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è**, –∞ –Ω–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∑–Ω–∞—á–µ–Ω–∏—è üß† –≠—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è **–æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å –∫–ª—é—á–æ–º**, –Ω–æ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å, **–ø–æ—á–µ–º—É –æ–Ω–∞ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∞—Å—å**.",
    "options": [
      {
        "text": "–ù–µ –ª–æ–≤–∏—Ç TypeError",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      },
      {
        "text": "finally –Ω–µ –Ω—É–∂–µ–Ω",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    x = 5 / 0\nexcept ZeroDivisionError:\n    print('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å')\nexcept ValueError:\n    print('–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')",
    "explanation": "–ö–æ–¥ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ **—Ä–∞–±–æ—Ç–∞–µ—Ç**, –Ω–æ `ValueError` –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç ü§Ø –ü–æ—Ç–æ–º—É —á—Ç–æ `ZeroDivisionError` —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª –æ—à–∏–±–∫—É. –≠—Ç–æ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –µ—Å—Ç—å –ª–∏ –≤–æ–¥–∞ –≤ –±–∞—Å—Å–µ–π–Ω–µ, –∞ –ø–æ—Ç–æ–º —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å, –Ω–µ –≤—ã—Å–æ—Ö –ª–∏ –æ–Ω.",
    "options": [
      {
        "text": "ValueError –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "finally –Ω–µ –Ω—É–∂–µ–Ω",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å except –≤ —Å–≤—è–∑–∫–µ —Å raise, —á—Ç–æ–±—ã –ø—Ä–æ–±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫—É?",
    "explanation": "–î–∞, –Ω–æ –≤–∞–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å `raise` –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    int('abc')\nexcept ValueError as e:\n    print('–û—à–∏–±–∫–∞')\n    raise\n```\n\n–¢–∞–∫–æ–π –∫–æ–¥ **—Å–æ—Ö—Ä–∞–Ω–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç**, –∏ —Ç—ã —É–≤–∏–¥–∏—à—å, **—á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –≤–∏–∂—É, —á—Ç–æ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –∏ —è –¥–æ–ª–∂–µ–Ω —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç—Ç–æ–º¬ª.",
    "options": [
      {
        "text": "–î–∞, –Ω–æ –ª—É—á—à–µ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
        "is_correct": true
      },
      {
        "text": "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å raise",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try/except –≤–º–µ—Å—Ç–æ if/else –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–ª—é—á–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ?",
    "explanation": "–ú–æ–∂–Ω–æ, –Ω–æ **–ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `dict.get()`** üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nd = {'a': 1}\ntry:\n    value = d['b']\nexcept KeyError:\n    value = 0\n```\n\n–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ **—á–∏—Ç–∞–µ–º–æ—Å—Ç—å —Å—Ç—Ä–∞–¥–∞–µ—Ç**. –≠—Ç–æ –∫–∞–∫ –ª–æ–≤–∏—Ç—å —Ä—ã–±—É –≤–µ–¥—Ä–æ–º, –µ—Å–ª–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∞–∫–≤–∞—Ä–∏—É–º.",
    "options": [
      {
        "text": "–î–∞, –Ω–æ –ª—É—á—à–µ —á–µ—Ä–µ–∑ .get()",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try/except",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å if",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –ª—É—á—à–µ: try/except –∏–ª–∏ if/else?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `try/except`, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ **—Ä–µ–¥–∫–∞—è**, –Ω–æ –∫—Ä–∏—Ç–∏—á–Ω–∞—è üß† –ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏, API, –∏ —Ç.–¥. –ò—Å–ø–æ–ª—å–∑—É–π `if/else`, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ **–æ–∂–∏–¥–∞–µ–º–∞ –∏ –Ω–æ—Ä–º–∞–ª—å–Ω–∞**.\n\n```python\n# –õ—É—á—à–µ try/except\nwith open('file.txt') as f:\n    data = f.read()\n\n# –õ—É—á—à–µ if/else\nif 'key' in d:\n    print(d['key'])\n```\n\n–≠—Ç–æ –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—å: ¬´–ü–æ–ø—Ä–æ–±—É—é –æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å¬ª, –µ—Å–ª–∏ –¥–≤–µ—Ä—å –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∞ ‚Äî –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á.",
    "options": [
      {
        "text": "try/except –¥–ª—è —Ä–µ–¥–∫–∏—Ö –æ—à–∏–±–æ–∫",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ try/except",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ if/else",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –ª—É—á—à–µ: '–ø–æ–ø—Ä–æ–±—É–π –∏ –æ–±—Ä–∞–±–æ—Ç–∞–π' –∏–ª–∏ '–ø—Ä–æ–≤–µ—Ä—å –∑–∞—Ä–∞–Ω–µ–µ'?",
    "explanation": "–í Python —á–∞—Å—Ç–æ –≥–æ–≤–æ—Ä—è—Ç: **EAFP (Easier to Ask for Forgiveness than Permission)** üß† –¢–æ –µ—Å—Ç—å: ¬´–ü—Ä–æ—â–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å¬ª.\n\n–ù–æ –Ω–µ –≤—Å–µ–≥–¥–∞ ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n# EAFP\ntry:\n    x = d['key']\nexcept KeyError:\n    x = None\n\n# LBYL (Look Before You Leap)\nif 'key' in d:\n    x = d['key']\nelse:\n    x = None\n```\n\n–í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏: `try/except` –ª—É—á—à–µ, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ —Ä–µ–¥–∫–∞—è, `if/else` ‚Äî –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–µ–º–∞.",
    "options": [
      {
        "text": "EAFP ‚Äî –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ —Ä–µ–¥–∫–∞—è",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ EAFP",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ LBYL",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `logging.exception()` –≤–Ω—É—Ç—Ä–∏ `except`, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport logging\n\ntry:\n    x = 1 / 0\nexcept ZeroDivisionError:\n    logging.exception('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å')\n```\n\n–≠—Ç–æ –≤—ã–≤–µ–¥–µ—Ç **–æ—à–∏–±–∫—É –∏ —Ç—Ä–µ–π—Å–±—ç–∫**, —á—Ç–æ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏. –≠—Ç–æ –∫–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å **–∑–∞–ø–∏—Å–∫—É —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º**, –ø–æ—á–µ–º—É —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.",
    "options": [
      {
        "text": "logging.exception()",
        "is_correct": true
      },
      {
        "text": "print() –≤–Ω—É—Ç—Ä–∏ except",
        "is_correct": false
      },
      {
        "text": "raise –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "is_correct": false
      },
      {
        "text": "assert False",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—à–∏–±–æ–∫?",
    "explanation": "–î–ª—è –æ—à–∏–±–æ–∫ –≤ Python –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å `ERROR` –∏–ª–∏ `CRITICAL` üìä –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nlogging.error('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏')\nlogging.critical('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞')\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏ –∏ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –≠—Ç–æ –∫–∞–∫ –ø–æ—Å—Ç–∞–≤–∏—Ç—å **—Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏**: ¬´–ü—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—Å—å¬ª ‚Üí ¬´–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ¬ª ‚Üí ¬´–û—à–∏–±–∫–∞¬ª ‚Üí ¬´–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞¬ª.",
    "options": [
      {
        "text": "ERROR –∏–ª–∏ CRITICAL",
        "is_correct": true
      },
      {
        "text": "DEBUG",
        "is_correct": false
      },
      {
        "text": "INFO",
        "is_correct": false
      },
      {
        "text": "WARNING",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –ø—Ä–∏ –ø—Ä–æ–±—Ä–æ—Å–µ –æ—à–∏–±–∫–∏?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `raise ... from ...` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    int('abc')\nexcept ValueError as e:\n    raise TypeError('–û—à–∏–±–∫–∞ —Ç–∏–ø–∞') from e\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã —É–≤–∏–¥–∏—à—å **–æ–±–µ –æ—à–∏–±–∫–∏**: `ValueError` –∏ `TypeError`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É —ç—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –ø—É—Å—Ç—å —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Ä–∞–Ω—å—à–µ¬ª.",
    "options": [
      {
        "text": "raise ... from ...",
        "is_correct": true
      },
      {
        "text": "raise –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "is_correct": false
      },
      {
        "text": "assert False",
        "is_correct": false
      },
      {
        "text": "except Exception",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –≤ API?",
    "explanation": "–õ—É—á—à–µ –≤—Å–µ–≥–æ ‚Äî **`logging.exception()`** –≤–Ω—É—Ç—Ä–∏ `except` üìã –≠—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç **–ø–æ–ª–Ω—ã–π —Ç—Ä–µ–π—Å–±—ç–∫**, —á—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport logging\n\ndef handle_request():\n    try:\n        return process()\n    except ValueError as e:\n        logging.exception('–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ')\n        return {'error': str(e)}\n```\n\n–¢–∞–∫ —Ç—ã —É–≤–∏–¥–∏—à—å, **—á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫**, –∏ —Å–º–æ–∂–µ—à—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥.",
    "options": [
      {
        "text": "logging.exception()",
        "is_correct": true
      },
      {
        "text": "print()",
        "is_correct": false
      },
      {
        "text": "assert",
        "is_correct": false
      },
      {
        "text": "raise",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ API –∏ –≤–µ—Ä–Ω—É—Ç—å JSON-–æ—Ç–≤–µ—Ç?",
    "explanation": "–í API-–ø—Ä–æ–µ–∫—Ç–∞—Ö —á–∞—Å—Ç–æ –¥–µ–ª–∞—é—Ç `try/except` –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç JSON —Å –æ—à–∏–±–∫–æ–π üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef api_call():\n    try:\n        return {'result': calculate()}\n    except ValueError as e:\n        return {'error': str(e)}, 400\n```\n\n–≠—Ç–æ –¥–µ–ª–∞–µ—Ç API **–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º** –∏ **–ø–æ–Ω—è—Ç–Ω—ã–º** –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤. –≠—Ç–æ –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å: ¬´–Ø –Ω–µ —Å–º–æ–≥, –≤–æ—Ç –ø–æ—á–µ–º—É¬ª.",
    "options": [
      {
        "text": "–í–µ—Ä–Ω—É—Ç—å —Å–ª–æ–≤–∞—Ä—å —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 200",
        "is_correct": false
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ raise",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É –±–µ–∑ –ø—Ä–æ–±—Ä–æ—Å–∞?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –Ω–µ —Ö–æ—á–µ—à—å –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π `logging.error()` –∏–ª–∏ `logging.exception()` üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport logging\n\ntry:\n    x = 1 / 0\nexcept ZeroDivisionError as e:\n    logging.exception('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è')\n    x = 0\n```\n\n–¢–µ–ø–µ—Ä—å –æ—à–∏–±–∫–∞ **–∑–∞–ø–∏—Å–∞–Ω–∞**, –Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ **–ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ó–∞–ø–∏—à–∏, —á—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π –≤—Å—ë¬ª.",
    "options": [
      {
        "text": "logging.exception()",
        "is_correct": true
      },
      {
        "text": "raise",
        "is_correct": false
      },
      {
        "text": "assert",
        "is_correct": false
      },
      {
        "text": "pass",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ?",
    "explanation": "–õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `try/except` —Å `OSError` –∏ –µ–≥–æ –ø–æ–¥–∫–ª–∞—Å—Å–∞–º–∏ üì¶ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    with open('data.txt') as f:\n        data = f.read()\nexcept FileNotFoundError:\n    logging.error('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')\n    data = None\n```\n\n–¢–∞–∫ —Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ—à—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –æ—à–∏–±–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω–∏—à—å –ª–æ–≥. –≠—Ç–æ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å.",
    "options": [
      {
        "text": "except FileNotFoundError",
        "is_correct": true
      },
      {
        "text": "except Exception",
        "is_correct": false
      },
      {
        "text": "except –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏",
        "is_correct": false
      },
      {
        "text": "assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å finally –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤?",
    "explanation": "`finally` ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nf = None\ntry:\n    f = open('file.txt')\n    data = f.read()\nexcept:\n    data = ''\nfinally:\n    if f:\n        f.close()\n```\n\n–¢–∞–∫ —Ñ–∞–π–ª –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç **–≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–û—Ç–∫—Ä–æ–π –¥–≤–µ—Ä—å, –∏—Å–ø–æ–ª—å–∑—É–π, –∏ **–≤—Å–µ–≥–¥–∞ –∑–∞–∫—Ä–æ–π**¬ª.",
    "options": [
      {
        "text": "–í—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã",
        "is_correct": true
      },
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ",
        "is_correct": false
      },
      {
        "text": "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–µ–∑ try",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: try/except –∏–ª–∏ if/else?",
    "explanation": "–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Ä–µ–¥–∫–∞—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π `try/except`, –µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ–º–∞—è ‚Äî `if/else` üß† –≠—Ç–æ –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—å: ¬´–ü—Ä–æ—â–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—â–µ–Ω–∏—è, —á–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è¬ª. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n# –õ—É—á—à–µ try/except\nwith open('file.txt') as f:\n    data = f.read()\n\n# –õ—É—á—à–µ if/else\nif 'key' in d:\n    value = d['key']\n```\n\n–í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∏—Ç—É–∞—Ü–∏–∏. –≠—Ç–æ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—é –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –≤—Å—ë –ª–∏ –≤ –ø–æ—Ä—è–¥–∫–µ.",
    "options": [
      {
        "text": "try/except –¥–ª—è —Ä–µ–¥–∫–∏—Ö –æ—à–∏–±–æ–∫",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ try/except",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ if/else",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nimport logging\n\ndef log_error():\n    try:\n        x = 1 / 0\n    except ZeroDivisionError:\n        logging.exception('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è')\n```\n\n",
    "explanation": "`logging.exception()` –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç **–æ—à–∏–±–∫—É –∏ —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤** üì£ –≠—Ç–æ –∫–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å **–ø–æ–ª–Ω—ã–π –æ—Ç—á—ë—Ç**, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã —Å–∞–º –æ–±—Ä–∞–±–æ—Ç–∞–ª –æ—à–∏–±–∫—É. –≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –¥–µ–±–∞–≥–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω **–ø–æ–ª–Ω—ã–π traceback**, –∏ `ZeroDivisionError` ‚Äî –≤ –ª–æ–≥–∞—Ö –≤—Å—ë –±—É–¥–µ—Ç —è—Å–Ω–æ.",
    "options": [
      {
        "text": "–û—à–∏–±–∫–∞ –∏ —Ç—Ä–µ–π—Å–±—ç–∫ –≤ –ª–æ–≥–∞—Ö",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ –±–µ–∑ —Ç—Ä–µ–π—Å–±—ç–∫–∞",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë —Å—Ä–∞–±–æ—Ç–∞–µ—Ç",
        "is_correct": false
      },
      {
        "text": "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try/except –≤ —Å–≤—è–∑–∫–µ —Å with?",
    "explanation": "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä `with` –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—ë—Ä–Ω—É—Ç –≤ `try/except`, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫–∏ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    with open('file.txt') as f:\n        data = f.read()\nexcept FileNotFoundError:\n    data = None\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **–ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞**, –Ω–æ **–Ω–µ —Ç–µ—Ä—è—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ**. –≠—Ç–æ –∫–∞–∫ **–æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å**, –Ω–æ –µ—Å–ª–∏ –∫–ª—é—á —Å–ª–æ–º–∞–ª—Å—è ‚Äî –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç—å, –∞ –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç—Ç–æ–º.",
    "options": [
      {
        "text": "try/except –≤–æ–∫—Ä—É–≥ with",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å with",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ —Ü–∏–∫–ª–µ –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `try/except` –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞ üîÑ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nresults = []\nfor item in items:\n    try:\n        results.append(process(item))\n    except ValueError:\n        results.append(None)\n```\n\n–¢–∞–∫ —Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ—à—å –æ—à–∏–±–∫—É **–Ω–∞ —É—Ä–æ–≤–Ω–µ —ç–ª–µ–º–µ–Ω—Ç–∞**, –Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—à—å –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ–≥–æ —Å–ø–∏—Å–∫–∞. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ –æ–¥–∏–Ω —Ñ–∞–π–ª –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è ‚Äî –ø—Ä–æ–ø—É—Å—Ç–∏ –µ–≥–æ, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏ —Ä–∞–±–æ—Ç—É¬ª.",
    "options": [
      {
        "text": "try/except –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å if",
        "is_correct": false
      },
      {
        "text": "raise –≤ —Ü–∏–∫–ª–µ",
        "is_correct": false
      },
      {
        "text": "assert –≤ —Ü–∏–∫–ª–µ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–µ —Ç–µ—Ä—è—Ç—å –æ—à–∏–±–∫–∏ –≤ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–º –∫–æ–¥–µ?",
    "explanation": "–í –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã—Ö –∏–ª–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö –≤–∞–∂–Ω–æ –ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –∏ **—Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Ö**, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å ü§Ø –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport logging\nfrom concurrent.futures import ThreadPoolExecutor\n\ndef task(x):\n    try:\n        return 1 / x\n    except ZeroDivisionError as e:\n        logging.exception('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è')\n        return None\n\nwith ThreadPoolExecutor() as ex:\n    future = ex.submit(task, 0)\n    print(future.result())  # None, –Ω–æ –æ—à–∏–±–∫–∞ –≤ –ª–æ–≥–∞—Ö\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **–Ω–µ —Ç–µ—Ä—è—Ç—å –æ—à–∏–±–∫–∏**, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –≤ –ø–æ—Ç–æ–∫–µ. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ ‚Äî —è –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–æ–ª–∂–µ–Ω –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å¬ª.",
    "options": [
      {
        "text": "–õ–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –≤ –ø–æ—Ç–æ–∫–µ",
        "is_correct": true
      },
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `logging` —Å `extra` –∏–ª–∏ `contextvars` üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport logging\n\nuser_id = 123\ntry:\n    process(user_id)\nexcept ValueError as e:\n    logging.warning(f'–û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}', exc_info=True)\n```\n\n–≠—Ç–æ –¥–µ–ª–∞–µ—Ç –ª–æ–≥–∏ **–±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º–∏** –∏ –ø–æ–º–æ–≥–∞–µ—Ç **–±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É**. –≠—Ç–æ –∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å: ¬´–û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞, –∏ –≤–æ—Ç –∫—Ç–æ –±—ã–ª –≤ –∫–æ–º–Ω–∞—Ç–µ¬ª.",
    "options": [
      {
        "text": "–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å print()",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å contextlib –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `contextlib.contextmanager` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è **–ª–æ–≥–∏—Ä—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤** üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom contextlib import contextmanager\nimport logging\n\n@contextmanager\ndef log_errors():\n    try:\n        yield\n    except Exception as e:\n        logging.error(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')\n        raise\n\n# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\nwith log_errors():\n    x = 1 / 0\n```\n\n–≠—Ç–æ –∫–∞–∫ –æ–±–µ—Ä–Ω—É—Ç—å –∫–æ–¥ –≤ **—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä –æ—à–∏–±–æ–∫**, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.",
    "options": [
      {
        "text": "contextmanager —Å try/except",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å raise",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try/except –≤ —Å–≤—è–∑–∫–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ Sentry?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `sentry_sdk` –∏–ª–∏ `logging.handlers` –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫ –≤ Sentry üì¶ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport sentry_sdk\n\nsentry_sdk.init('—Ç–≤–æ–π_–∫–ª—é—á')\n\ntry:\n    some_api_call()\nexcept Exception as e:\n    sentry_sdk.capture_exception(e)\n    raise\n```\n\n–¢–µ–ø–µ—Ä—å –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, –∏ **—Ç—ã –ø–æ–ª—É—á–∏—à—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ**, –¥–∞–∂–µ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–æ–±—Ä–æ—à–µ–Ω–∞ –¥–∞–ª—å—à–µ.",
    "options": [
      {
        "text": "capture_exception()",
        "is_correct": true
      },
      {
        "text": "print() –∏ assert",
        "is_correct": false
      },
      {
        "text": "raise –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ?",
    "explanation": "–ß—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –æ—à–∏–±–∫—É, –ª—É—á—à–µ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å, –∞ –Ω–µ –ø–æ–¥–∞–≤–ª—è—Ç—å üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@contextmanager\ndef safe_context():\n    try:\n        yield\n    except Exception as e:\n        logging.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ', exc_info=True)\n        raise\n```\n\n–¢–∞–∫ —Ç—ã **—Å–æ—Ö—Ä–∞–Ω–∏—à—å —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤** –∏ **–ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—à—å –æ –ø—Ä–æ–±–ª–µ–º–µ**, –Ω–æ **–Ω–µ —Å–∫—Ä–æ–µ—à—å –µ—ë**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –≤–∏–∂—É, —á—Ç–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–æ –Ω–µ –º–æ–≥—É —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å ‚Äî —Ç—ã –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å¬ª.",
    "options": [
      {
        "text": "–õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–±—Ä–æ—Å–∏—Ç—å",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "pass –≤ except",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `logging` —Å `exc_info=True`?",
    "explanation": "`exc_info=True` —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç **–ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤** üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    x = 1 / 0\nexcept ZeroDivisionError as e:\n    logging.error('–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å', exc_info=True)\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **—É–≤–∏–¥–µ—Ç—å, –≥–¥–µ –∏ –ø–æ—á–µ–º—É** –æ—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞. –≠—Ç–æ –∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å **–≤–∏–¥–µ–æ —Å –∞–≤–∞—Ä–∏–µ–π**, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ.",
    "options": [
      {
        "text": "–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤",
        "is_correct": true
      },
      {
        "text": "–£—Å–∫–æ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
        "is_correct": false
      },
      {
        "text": "–°–∫—Ä—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –∏—Å—Ö–æ–¥–Ω—É—é –æ—à–∏–±–∫—É –ø—Ä–∏ –ø—Ä–æ–±—Ä–æ—Å–µ?",
    "explanation": "–ò—Å–ø–æ–ª—å–∑—É–π `raise ... from ...`, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å **–∏—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–µ–∫** üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    int('abc')\nexcept ValueError as e:\n    raise TypeError('–û—à–∏–±–∫–∞ —Ç–∏–ø–∞') from e\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã —É–≤–∏–¥–∏—à—å **–æ–±–µ –æ—à–∏–±–∫–∏**: `ValueError` –∏ `TypeError`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É —ç—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –ø—É—Å—Ç—å —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Ä–∞–Ω—å—à–µ¬ª.",
    "options": [
      {
        "text": "raise ... from ...",
        "is_correct": true
      },
      {
        "text": "raise –±–µ–∑ from",
        "is_correct": false
      },
      {
        "text": "assert",
        "is_correct": false
      },
      {
        "text": "pass –≤ except",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–º –∫–æ–¥–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ?",
    "explanation": "–í –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–º –∫–æ–¥–µ –≤–∞–∂–Ω–æ **–ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –≤–Ω—É—Ç—Ä–∏ –∑–∞–¥–∞—á–∏**, –∏–Ω–∞—á–µ –æ–Ω–∏ –±—É–¥—É—Ç —Å–∫—Ä—ã—Ç—ã –¥–æ –≤—ã–∑–æ–≤–∞ `future.result()` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom concurrent.futures import ThreadPoolExecutor\n\nwith ThreadPoolExecutor() as ex:\n    future = ex.submit(lambda: 1/0)\n    try:\n        future.result()\n    except ZeroDivisionError:\n        print('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è')\n```\n\n–¢–∞–∫ —Ç—ã **–ª–æ–≤–∏—à—å –æ—à–∏–±–∫—É –≤ –ø–æ—Ç–æ–∫–µ**, –∞ –Ω–µ —Ç–µ—Ä—è–µ—à—å –µ—ë. –≠—Ç–æ –∫–∞–∫ **–ø–æ–π–º–∞—Ç—å –æ—à–∏–±–∫—É –Ω–∞ –≤—ã—Ö–æ–¥–µ**, –∞ –Ω–µ –≤–Ω—É—Ç—Ä–∏.",
    "options": [
      {
        "text": "future.result() –≤ try/except",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "except –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö?",
    "explanation": "–í –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö –æ—à–∏–±–∫–∞ –Ω–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —Å—Ä–∞–∑—É ‚Äî –æ–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –æ–±—ä–µ–∫—Ç–µ `asyncio.Task` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport asyncio\n\nasync def faulty():\n    raise ValueError('–û—à–∏–±–∫–∞')\n\nasync def main():\n    task = asyncio.create_task(faulty())\n    try:\n        await task\n    except ValueError:\n        print('–ü–æ–π–º–∞–Ω–æ')\n\nasyncio.run(main())\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **–Ω–µ —Ç–µ—Ä—è—Ç—å –æ—à–∏–±–∫–∏**, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü–æ–¥–æ–∂–¥–∏, –ø–æ–∫–∞ –∑–∞–¥–∞—á–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –∏ –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –Ω–µ —Ç–∞–∫¬ª.",
    "options": [
      {
        "text": "await task –≤ try/except",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "except –±–µ–∑ await",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º?\n\ntry:\n    data = json.loads(invalid)\nexcept:\n    data = None",
    "explanation": "–¢—ã –ª–æ–≤–∏—à—å **–≤—Å–µ –æ—à–∏–±–∫–∏**, –≤–∫–ª—é—á–∞—è `KeyboardInterrupt` –∏ `SystemExit` ü§Ø –≠—Ç–æ –º–æ–∂–µ—Ç **—Å–ª–æ–º–∞—Ç—å –æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ** –ø—Ä–æ–≥—Ä–∞–º–º—ã. –õ—É—á—à–µ –ª–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏:\n\n```python\nexcept json.JSONDecodeError:\n    data = None\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø —Ö–æ—á—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫—É –ø–∞—Ä—Å–∏–Ω–≥–∞, –∞ –Ω–µ –≤—Å—ë –ø–æ–¥—Ä—è–¥¬ª.",
    "options": [
      {
        "text": "except –ª–æ–≤–∏—Ç –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è",
        "is_correct": true
      },
      {
        "text": "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "is_correct": false
      },
      {
        "text": "finally –Ω–µ –Ω—É–∂–µ–Ω",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–µ —Ç–µ—Ä—è—Ç—å –æ—à–∏–±–∫–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö?",
    "explanation": "–í –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º –∫–æ–¥–µ –æ—à–∏–±–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ `Task`, –∏ –∏—Ö –Ω—É–∂–Ω–æ —è–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nasync def faulty():\n    raise ValueError('–û—à–∏–±–∫–∞')\n\nasync def main():\n    task = asyncio.create_task(faulty())\n    try:\n        await task\n    except ValueError as e:\n        logging.error('–û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ', exc_info=True)\n\nasyncio.run(main())\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **–Ω–µ —Ç–µ—Ä—è—Ç—å —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤** –∏ **–≤–∏–¥–µ—Ç—å, —á—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∏–∂—É, —á—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å ‚Äî —è –≤–∏–∂—É, –∫–∞–∫ –∏ –ø–æ—á–µ–º—É¬ª.",
    "options": [
      {
        "text": "await –≤–Ω—É—Ç—Ä–∏ try/except",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "except –±–µ–∑ await",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ?",
    "explanation": "–í `__exit__` –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `logging` —Å `exc_info`, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫ üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass MyContext:\n    def __enter__(self):\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        if exc_type:\n            logging.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ', exc_info=True)\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **–≤–∏–¥–µ—Ç—å, —á—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫**, –¥–∞–∂–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –≠—Ç–æ –∫–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∫—É: ¬´–Ø —Å–ª–æ–º–∞–ª—Å—è, –Ω–æ —Ç—ã –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, –∫–∞–∫ –∏ –ø–æ—á–µ–º—É¬ª.",
    "options": [
      {
        "text": "logging.error —Å exc_info=True",
        "is_correct": true
      },
      {
        "text": "print(exc_type)",
        "is_correct": false
      },
      {
        "text": "assert False",
        "is_correct": false
      },
      {
        "text": "raise –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞—Ö?",
    "explanation": "–í –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞—Ö –≤–∞–∂–Ω–æ **–Ω–µ —Ç–µ—Ä—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏** –∏ **–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å** –µ—ë üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    response = requests.get(url)\n    response.raise_for_status()\nexcept requests.exceptions.RequestException as e:\n    logging.error(f'–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}', exc_info=True)\n    raise ServiceError('–û—à–∏–±–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞') from e\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã **—Å–æ—Ö—Ä–∞–Ω–∏–ª —Å—Ç–µ–∫**, **–¥–æ–±–∞–≤–∏–ª –∫–æ–Ω—Ç–µ–∫—Å—Ç** –∏ **–ø—Ä–æ–±—Ä–æ—Å–∏–ª –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —É –º–µ–Ω—è, –∞ –≤ —Å–æ—Å–µ–¥–Ω–µ–º –¥–æ–º–µ, –Ω–æ —è –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ¬ª.",
    "options": [
      {
        "text": "raise ... from ...",
        "is_correct": true
      },
      {
        "text": "pass –≤ except",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `__exit__` –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫?",
    "explanation": "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `__exit__` –¥–ª—è **–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫** üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nclass LogOnError:\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        if exc_type:\n            logging.error(f'–û—à–∏–±–∫–∞: {exc_val}', exc_info=True)\n```\n\n–¢–µ–ø–µ—Ä—å —Ç—ã **–≤—Å–µ–≥–¥–∞ –±—É–¥–µ—à—å –∑–Ω–∞—Ç—å**, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –≤–Ω—É—Ç—Ä–∏ `with`. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å ‚Äî —è –¥–æ–ª–∂–µ–Ω –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å¬ª.",
    "options": [
      {
        "text": "–õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤ __exit__",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –æ—à–∏–±–∫—É –≤ `__exit__` –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞?",
    "explanation": "–ï—Å–ª–∏ –≤ `__exit__` –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –æ–Ω–∞ –∑–∞–º–µ–Ω–∏—Ç –∏—Å—Ö–æ–¥–Ω—É—é ü§Ø –≠—Ç–æ **—á–∞—Å—Ç–∞—è –ª–æ–≤—É—à–∫–∞**. –õ—É—á—à–µ —è–≤–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—É—é:\n\n```python\ndef __exit__(self, exc_type, exc_val, exc_tb):\n    if exc_type:\n        logging.warning(f'–û—à–∏–±–∫–∞: {exc_val}')\n    return True\n```\n\n–¢–æ–≥–¥–∞ `return True` –ø–æ–¥–∞–≤–∏—Ç –æ—à–∏–±–∫—É, –Ω–æ **—Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å**, —á—Ç–æ –æ–Ω–∞ –±—ã–ª–∞. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –≤–∏–∂—É, —á—Ç–æ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –Ω–æ —è –Ω–µ —Ö–æ—á—É, —á—Ç–æ–±—ã –≤—Å—ë –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å¬ª.",
    "options": [
      {
        "text": "return True –≤ __exit__",
        "is_correct": true
      },
      {
        "text": "finally —Ä–µ—à–∏—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "except –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try/except –≤ —Å–≤—è–∑–∫–µ —Å logging.handlers?",
    "explanation": "–ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å `logging.handlers` –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫ –≤ —Ñ–∞–π–ª, –ø–æ—á—Ç—É –∏–ª–∏ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ üì¶ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport logging\nfrom logging.handlers import RotatingFileHandler\n\nlogger = logging.getLogger('app')\nlogger.addHandler(RotatingFileHandler('app.log'))\n\ntry:\n    some_function()\nexcept Exception as e:\n    logger.error('–û—à–∏–±–∫–∞', exc_info=True)\n```\n\n–¢–µ–ø–µ—Ä—å –æ—à–∏–±–∫–∏ –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ª–æ–≥-—Ñ–∞–π–ª, –∏ —Ç—ã —Å–º–æ–∂–µ—à—å –∏—Ö –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å ‚Äî –ø—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ¬ª.",
    "options": [
      {
        "text": "logging.addHandler()",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å print()",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ —Å–≤—è–∑–∫–µ —Å `__exit__` –∏ `with`?",
    "explanation": "–í `__exit__` –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –±—ã–ª–∞ –ª–∏ –æ—à–∏–±–∫–∞, –∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ—ë üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef __exit__(self, exc_type, exc_val, exc_tb):\n    if exc_type:\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\n    return True  # –ø–æ–¥–∞–≤–ª—è–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ\n```\n\n–ù–æ –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ `return True` –ø–æ–¥–∞–≤–∏—Ç –æ—à–∏–±–∫—É, –∏ –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–¥ **–Ω–µ —É–∑–Ω–∞–µ—Ç**, —á—Ç–æ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–°–ª–æ–º–∞–ª–æ—Å—å, –Ω–æ –Ω–µ –≥–æ–≤–æ—Ä–∏ –æ–± —ç—Ç–æ–º¬ª.",
    "options": [
      {
        "text": "return True –ø–æ–¥–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É",
        "is_correct": true
      },
      {
        "text": "finally —Ä–µ—à–∏—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "with –≤—Å—ë —Ä–∞–≤–Ω–æ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–±—Ä–æ—Å–∞ –æ—à–∏–±–æ–∫?",
    "explanation": "–ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π **–Ω–µ –±—É–¥–µ—Ç –ø–æ–¥–∞–≤–ª—è—Ç—å –æ—à–∏–±–∫–∏**, –∞ **–ø—Ä–æ–±—Ä–æ—Å–∏—Ç –∏—Ö –¥–∞–ª—å—à–µ** üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@contextmanager\ndef rethrow():\n    try:\n        yield\n    except Exception:\n        logging.error('–û—à–∏–±–∫–∞', exc_info=True)\n        raise\n```\n\n–¢–µ–ø–µ—Ä—å:\n```python\nwith rethrow():\n    x = 1 / 0\n```\n\n–ë—É–¥–µ—Ç **–∑–∞–ø–∏—Å–∞–Ω–∞ –æ—à–∏–±–∫–∞**, –∏ **–ø—Ä–æ–±—Ä–æ—à–µ–Ω–∞ –¥–∞–ª—å—à–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –≤–∏–∂—É, —á—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –∏ —è –Ω–µ –±—É–¥—É —ç—Ç–æ —Å–∫—Ä—ã–≤–∞—Ç—å¬ª.",
    "options": [
      {
        "text": "raise –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å with",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ Sentry?",
    "explanation": "–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫ –≤ Sentry –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `sentry_sdk.capture_exception()` üì¶ –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport sentry_sdk\n\nsentry_sdk.init('—Ç–≤–æ–π_–∫–ª—é—á')\n\ndef handle_request():\n    try:\n        process()\n    except Exception as e:\n        sentry_sdk.capture_exception(e)\n        raise\n```\n\n–¢–µ–ø–µ—Ä—å –≤—Å–µ –æ—à–∏–±–∫–∏ –±—É–¥—É—Ç **–∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞**, –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å **—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å ‚Äî –ø—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç¬ª.",
    "options": [
      {
        "text": "sentry_sdk.capture_exception()",
        "is_correct": true
      },
      {
        "text": "print('–û—à–∏–±–∫–∞')",
        "is_correct": false
      },
      {
        "text": "assert False",
        "is_correct": false
      },
      {
        "text": "raise –±–µ–∑ from",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `contextvars` –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫?",
    "explanation": "`contextvars` –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä, `request_id`, `user_id` –∏ —Ç.–¥. üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom contextvars import ContextVar\nimport logging\n\nrequest_id = ContextVar('request_id')\nlogger = logging.getLogger(__name__)\n\ndef log_error():\n    logger.error('–û—à–∏–±–∫–∞', extra={'request_id': request_id.get()})\n```\n\n–¢–µ–ø–µ—Ä—å –≤ –ª–æ–≥–∞—Ö —Ç—ã —É–≤–∏–¥–∏—à—å, **–≤ –∫–∞–∫–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞**. –≠—Ç–æ –∫–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å **–∑–∞–ø–∏—Å–∫—É —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–æ—Å–∞**, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.",
    "options": [
      {
        "text": "contextvars + extra –≤ logging",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ CLI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö?",
    "explanation": "–í CLI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –≤–∞–∂–Ω–æ –ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å **–ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è** üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef main():\n    try:\n        run()\n    except ValueError as e:\n        print(f'–û—à–∏–±–∫–∞: {e}')\n        sys.exit(1)\n```\n\n–≠—Ç–æ –¥–µ–ª–∞–µ—Ç CLI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã **–ø–æ–Ω—è—Ç–Ω—ã–º–∏ –∏ —É—Å—Ç–æ–π—á–∏–≤—ã–º–∏**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É ‚Äî –≤–æ—Ç –ø–æ—á–µ–º—É¬ª.",
    "options": [
      {
        "text": "try/except + sys.exit()",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å raise",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `structlog` –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫?",
    "explanation": "`structlog` –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nimport structlog\n\nlogger = structlog.get_logger()\n\ndef process():\n    try:\n        x = 1 / 0\n    except Exception:\n        logger.exception('–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è', exc_info=True)\n        raise\n```\n\n–¢–µ–ø–µ—Ä—å –ª–æ–≥–∏ –±—É–¥—É—Ç **—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏ –ø–æ–Ω—è—Ç–Ω—ã–º–∏**. –≠—Ç–æ –∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å –æ—à–∏–±–∫—É –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º, –∞ **–≤ –≤–∏–¥–µ JSON —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏**.",
    "options": [
      {
        "text": "logger.exception()",
        "is_correct": true
      },
      {
        "text": "print() –≤–Ω—É—Ç—Ä–∏ except",
        "is_correct": false
      },
      {
        "text": "assert False",
        "is_correct": false
      },
      {
        "text": "raise –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ `__exit__` –∏ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å—Ç–µ–∫?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –ª–æ–≤–∏—à—å –æ—à–∏–±–∫—É –≤ `__exit__`, –Ω–æ —Ö–æ—á–µ—à—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π `raise` üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef __exit__(self, exc_type, exc_val, exc_tb):\n    if exc_type:\n        logging.warning(f'–û—à–∏–±–∫–∞: {exc_val}')\n    raise  # –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–±—Ä–æ—Å–∏—Ç –æ—à–∏–±–∫—É\n```\n\n–¢–∞–∫ —Ç—ã —Å–æ—Ö—Ä–∞–Ω–∏—à—å **–∏—Å—Ö–æ–¥–Ω—É—é –æ—à–∏–±–∫—É**, –Ω–æ **–ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—à—å –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ __exit__**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –Ω–æ —è –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, —á—Ç–æ –æ–Ω–æ —Å–ª–æ–º–∞–ª–æ—Å—å¬ª.",
    "options": [
      {
        "text": "raise –≤ __exit__",
        "is_correct": true
      },
      {
        "text": "finally —Ä–µ—à–∏—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      },
      {
        "text": "return True –≤ __exit__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `logging` —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤ FastAPI –∏–ª–∏ Flask?",
    "explanation": "–í –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –ª–æ–≥–∏ üìã –ù–∞–ø—Ä–∏–º–µ—Ä, `request_id`, `user_id`:\n\n```python\nfrom contextvars import ContextVar\n\nrequest_id = ContextVar('request_id')\n\ndef log_request_error(logger):\n    logger.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞', extra={'request_id': request_id.get()})\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Ç–æ—á–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ—à–∏–±–∫–∏** –ø–æ ID –∑–∞–ø—Ä–æ—Å–∞. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ü–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å —Å–ª–æ–º–∞–ª—Å—è¬ª.",
    "options": [
      {
        "text": "contextvars + extra –≤ logging",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –æ—à–∏–±–∫—É –≤ `__exit__` –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ `with`?",
    "explanation": "–ï—Å–ª–∏ –≤ `__exit__` –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –æ–Ω–∞ –∑–∞–º–µ–Ω–∏—Ç –∏—Å—Ö–æ–¥–Ω—É—é ü§Ø –≠—Ç–æ –º–æ–∂–µ—Ç **—Å–µ—Ä—å—ë–∑–Ω–æ –∑–∞–ø—É—Ç–∞—Ç—å**. –õ—É—á—à–µ —è–≤–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏ **–Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å** –æ—à–∏–±–∫—É:\n\n```python\ndef __exit__(self, *args):\n    if args[0]:\n        print('–û—à–∏–±–∫–∞ –≤ __exit__')\n    return True\n```\n\n–¢–µ–ø–µ—Ä—å –∏—Å—Ö–æ–¥–Ω–∞—è –æ—à–∏–±–∫–∞ **–Ω–µ –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω–∞**, –∏ `__exit__` –Ω–µ —Å–ª–æ–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç.",
    "options": [
      {
        "text": "return True –≤ __exit__",
        "is_correct": true
      },
      {
        "text": "finally —Ä–µ—à–∏—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      },
      {
        "text": "raise –≤ __exit__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ `__exit__` –∏ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã `__exit__` –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `try/except` –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef __exit__(self, *args):\n    try:\n        # –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞\n    except Exception as e:\n        logging.warning(f'–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: {e}')\n```\n\n–¢–∞–∫ —Ç—ã **—Å–æ—Ö—Ä–∞–Ω–∏—à—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ**, –Ω–æ **–ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—à—å –æ –ø—Ä–æ–±–ª–µ–º–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ, –Ω–æ —Ö–æ—Ç—è –±—ã –∑–∞–ø–∏—à—É, —á—Ç–æ –Ω–µ —Å–º–æ–≥¬ª.",
    "options": [
      {
        "text": "–õ–æ–≤–∏—Ç—å –≤–Ω—É—Ç—Ä–∏ __exit__",
        "is_correct": true
      },
      {
        "text": "finally —Ä–µ—à–∏—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      },
      {
        "text": "raise –≤ __exit__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `contextmanager` –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫?",
    "explanation": "–ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π **–ª–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏**, –Ω–æ **–Ω–µ –ø–æ–¥–∞–≤–ª—è–µ—Ç –∏—Ö** üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@contextmanager\ndef log_on_error():\n    try:\n        yield\n    except Exception as e:\n        logging.exception('–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ')\n        raise\n```\n\n–¢–µ–ø–µ—Ä—å –ª—é–±–∞—è –æ—à–∏–±–∫–∞ –≤–Ω—É—Ç—Ä–∏ `with` –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –ª–æ–≥–∏. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ —Å–∫—Ä–æ—é, —á—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å ‚Äî —è —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—à—É¬ª.",
    "options": [
      {
        "text": "contextmanager —Å raise",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å with",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ `__exit__` –∏ –Ω–µ —Å–ª–æ–º–∞—Ç—å `with`?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã –Ω–µ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã `__exit__` —Å–ª–æ–º–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, **–Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–π –æ—à–∏–±–∫—É**, –∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–π üìã –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ndef __exit__(self, *args):\n    try:\n        self.resource.close()\n    except Exception as e:\n        logging.warning(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ: {e}')\n```\n\n–¢–µ–ø–µ—Ä—å –∫–æ–¥ –Ω–µ —É–ø–∞–¥—ë—Ç, –Ω–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å **–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É –≤—Å—ë –ø–æ—á–∏–Ω–∏—Ç—å, –Ω–æ —Ö–æ—Ç—è –±—ã –∑–∞–ø–∏—à—É, —á—Ç–æ –Ω–µ —Å–º–æ–≥¬ª.",
    "options": [
      {
        "text": "–õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å",
        "is_correct": true
      },
      {
        "text": "finally —Ä–µ—à–∏—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      },
      {
        "text": "raise –≤ __exit__",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ FastAPI?",
    "explanation": "–í FastAPI –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `@app.exception_handler()` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\nfrom fastapi import FastAPI, HTTPException\n\napp = FastAPI()\n\n@app.exception_handler(ValueError)\nasync def value_error_handler(request, exc):\n    return {'error': '–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', 'detail': str(exc)}\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ JSON-–æ—Ç–≤–µ—Ç—ã –≤–º–µ—Å—Ç–æ –ø–∞–¥–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–û—à–∏–±–∫–∞ –µ—Å—Ç—å, –Ω–æ —è –Ω–µ —Ö–æ—á—É, —á—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç –µ—ë —É–≤–∏–¥–µ–ª –≤ –≤–∏–¥–µ traceback¬ª.",
    "options": [
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å exception_handler",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ raise",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ Flask?",
    "explanation": "–í Flask –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `@app.errorhandler()` üìå –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\n@app.errorhandler(ValueError)\ndef handle_value_error(e):\n    return {'error': '–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'}, 400\n```\n\n–¢–µ–ø–µ—Ä—å –ª—é–±–∞—è `ValueError` –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –≤ –≤–∏–¥–µ JSON-–æ—à–∏–±–∫–∏. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å ‚Äî —è –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç–≤–µ—Ç¬ª.",
    "options": [
      {
        "text": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @app.errorhandler",
        "is_correct": true
      },
      {
        "text": "–í—Å–µ–≥–¥–∞ raise",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å try/except –≤ route",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞—Ö?",
    "explanation": "–í –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞—Ö –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö üß† –ù–æ –≤–∞–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `await` –≤–Ω—É—Ç—Ä–∏ `try/except`:\n\n```python\nasync def fetch():\n    try:\n        async with aiohttp.ClientSession() as session:\n            async resp = await session.get(url)\n            return await resp.json()\n    except aiohttp.ClientError as e:\n        logging.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏', exc_info=True)\n        raise APIError('–û—à–∏–±–∫–∞ API') from e\n```\n\n–≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–æ —è –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, –ø–æ—á–µ–º—É¬ª.",
    "options": [
      {
        "text": "try/await/raise from",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "except –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "is_correct": false
      },
      {
        "text": "assert",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ `with` –∏ –Ω–µ —Ç–µ—Ä—è—Ç—å —Å—Ç–µ–∫?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ `with`, –Ω–æ **—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫**, –∏—Å–ø–æ–ª—å–∑—É–π `try/except` –≤–Ω—É—Ç—Ä–∏ üß† –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n```python\ntry:\n    with open('file.txt') as f:\n        data = f.read()\nexcept FileNotFoundError:\n    print('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')\n```\n\n–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **–ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞** –∏ **–Ω–µ —Ç–µ—Ä—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ –º–æ–≥—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª ‚Äî –Ω–æ —è –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, –ø–æ—á–µ–º—É¬ª.",
    "options": [
      {
        "text": "try/except –≤–æ–∫—Ä—É–≥ with",
        "is_correct": true
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å finally",
        "is_correct": false
      },
      {
        "text": "–¢–æ–ª—å–∫–æ —Å assert",
        "is_correct": false
      },
      {
        "text": "–í—Å—ë –≤–µ—Ä–Ω–æ",
        "is_correct": false
      }
    ]
  },
  {
    "category": "python",
    "question": "–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ `__exit__` –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫?",
    "explanation": "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–µ–∫, –Ω–æ –∏ **–ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ –≤ `__exit__`**, –¥–µ–ª–∞–π —Ç–∞–∫:\n\n```python\ndef __exit__(self, exc_type, exc_val, exc_tb):\n    if exc_type:\n        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')\n    return True  # –ø–æ–¥–∞–≤–ª—è–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ\n```\n\n–¢–µ–ø–µ—Ä—å `__exit__` **–Ω–µ –ø—Ä–æ–±—Ä–æ—Å–∏—Ç –æ—à–∏–±–∫—É**, –Ω–æ —Ç—ã **–ø–æ–ª—É—á–∏—à—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ**. –≠—Ç–æ –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å: ¬´–Ø –Ω–µ —Ö–æ—á—É, —á—Ç–æ–±—ã –≤—Å—ë —É–ø–∞–ª–æ ‚Äî –Ω–æ —è –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫¬ª.",
    "options": [
      {
        "text": "return True –≤ __exit__",
        "is_correct": true
      },
      {
        "text": "finally —Ä–µ—à–∏—Ç –≤—Å—ë",
        "is_correct": false
      },
      {
        "text": "except –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º",
        "is_correct": false
      },
      {
        "text": "raise –≤ __exit__",
        "is_correct": false
      }
    ]
  }
]